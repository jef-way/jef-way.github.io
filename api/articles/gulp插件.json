{"title":"gulp插件","slug":"gulp插件","date":"2016-05-09T03:52:00.000Z","updated":"2024-01-15T03:37:25.361Z","comments":true,"path":"api/articles/gulp插件.json","excerpt":" [Figure] 安装Gulp插件我们将要使用Gulp插件来完成我们以下任务：","covers":["/../imgs/2024-01-05/gulp-plugin/intro.jpg"],"content":"<p><img src=\"/../imgs/2024-01-05/gulp-plugin/intro.jpg\" alt=\"gulp\"></p>\n<h2 id=\"安装Gulp插件\"><a href=\"#安装Gulp插件\" class=\"headerlink\" title=\"安装Gulp插件\"></a>安装Gulp插件</h2><p>我们将要使用Gulp插件来完成我们以下任务：</p>\n<span id=\"more\"></span>\n\n<ul>\n<li>sass的编译（<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NpbmRyZXNvcmh1cy9ndWxwLXJ1Ynktc2Fzcw==\">gulp-ruby-sass<i class=\"fa fa-external-link-alt\"></i></span>）</li>\n<li>自动添加css前缀（<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL01ldHJpbWUvZ3VscC1hdXRvcHJlZml4ZXI=\">gulp-autoprefixer<i class=\"fa fa-external-link-alt\"></i></span>）</li>\n<li>压缩css（<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvZ3VscC1taW5pZnktY3NzLW1wYXRoLw==\">gulp-minify-css<i class=\"fa fa-external-link-alt\"></i></span>）</li>\n<li>js代码校验（<span class=\"exturl\" data-url=\"aHR0cDovL2dpdGh1Yi5jb20vc3BlbmNlcmFsZ2VyL2d1bHAtanNoaW50\">gulp-jshint<i class=\"fa fa-external-link-alt\"></i></span>）</li>\n<li>合并js文件（<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NvbnRyYS9ndWxwLWNvbmNhdA==\">gulp-concat<i class=\"fa fa-external-link-alt\"></i></span>）</li>\n<li>压缩js代码（<span class=\"exturl\" data-url=\"aHR0cDovLw==\">gulp-uglify<i class=\"fa fa-external-link-alt\"></i></span>）</li>\n<li>压缩图片（<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NpbmRyZXNvcmh1cy9ndWxwLWltYWdlbWlu\">gulp-imagemin<i class=\"fa fa-external-link-alt\"></i></span>）</li>\n<li>自动刷新页面（<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3ZvaG9mL2d1bHAtbGl2ZXJlbG9hZA==\">gulp-livereload<i class=\"fa fa-external-link-alt\"></i></span>）</li>\n<li>图片缓存，只有图片替换了才压缩（<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2pnYWJsZS9ndWxwLWNhY2hl\">gulp-cache<i class=\"fa fa-external-link-alt\"></i></span>）</li>\n<li>更改提醒（<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21pa2FlbGJyL2d1bHAtbm90aWZ5\">gulp-notify<i class=\"fa fa-external-link-alt\"></i></span>）</li>\n<li>清除文件（<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5ucG1qcy5vcmcvcGFja2FnZS9kZWw=\">del<i class=\"fa fa-external-link-alt\"></i></span>）</li>\n</ul>\n<p>安装这些插件需要运行如下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install gulp-ruby-sass gulp-autoprefixer gulp-minify-css gulp-jshint gulp-concat gulp-uglify gulp-imagemin gulp-notify gulp-rename gulp-livereload gulp-cache del --save-dev</span><br></pre></td></tr></table></figure>\n\n\n<p>上面是一些常用的插件，如果想要找更多的插件<span class=\"exturl\" data-url=\"aHR0cDovL2d1bHBqcy5jb20vcGx1Z2lucy8=\">点击这里<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"加载插件\"><a href=\"#加载插件\" class=\"headerlink\" title=\"加载插件\"></a>加载插件</h2><p>接着我们要创建一个gulpfile.js在根目录下，然后在里面加载插件：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp&#x27;</span>),</span><br><span class=\"line\">    sass = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-ruby-sass&#x27;</span>),</span><br><span class=\"line\">    autoprefixer = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-autoprefixer&#x27;</span>),</span><br><span class=\"line\">    minifycss = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-minify-css&#x27;</span>),</span><br><span class=\"line\">    jshint = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-jshint&#x27;</span>),</span><br><span class=\"line\">    uglify = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-uglify&#x27;</span>),</span><br><span class=\"line\">    imagemin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-imagemin&#x27;</span>),</span><br><span class=\"line\">    rename = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-rename&#x27;</span>),</span><br><span class=\"line\">    concat = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-concat&#x27;</span>),</span><br><span class=\"line\">    notify = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-notify&#x27;</span>),</span><br><span class=\"line\">    cache = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-cache&#x27;</span>),</span><br><span class=\"line\">    livereload = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-livereload&#x27;</span>),</span><br><span class=\"line\">    del = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;del&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>Gulp的插件和Grunt有些许不一样，Grunt插件是为了更好的完成一项任务。就像Grunt的 <code>imagemin</code> 插件就利用了缓存来避免重复压缩，而Gulp要利用 <code>gulp-cache</code> 来完成，当然啦，不仅限定于缓存图片。</p>\n<h2 id=\"建立任务\"><a href=\"#建立任务\" class=\"headerlink\" title=\"建立任务\"></a>建立任务</h2><h3 id=\"编译sass、自动添加css前缀和压缩\"><a href=\"#编译sass、自动添加css前缀和压缩\" class=\"headerlink\" title=\"编译sass、自动添加css前缀和压缩\"></a>编译sass、自动添加css前缀和压缩</h3><p>首先我们编译sass，添加前缀，保存到我们指定的目录下面，还没结束，我们还要压缩，给文件添加.min后缀再输出压缩文件到指定目录，最后提醒任务完成了：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;styles&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> gulp.<span class=\"title function_\">src</span>(<span class=\"string\">&#x27;src/styles/main.scss&#x27;</span>)</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">sass</span>(&#123; <span class=\"attr\">style</span>: <span class=\"string\">&#x27;expanded&#x27;</span> &#125;))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">autoprefixer</span>(<span class=\"string\">&#x27;last 2 version&#x27;</span>, <span class=\"string\">&#x27;safari 5&#x27;</span>, <span class=\"string\">&#x27;ie 8&#x27;</span>, <span class=\"string\">&#x27;ie 9&#x27;</span>, <span class=\"string\">&#x27;opera 12.1&#x27;</span>, <span class=\"string\">&#x27;ios 6&#x27;</span>, <span class=\"string\">&#x27;android 4&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(gulp.<span class=\"title function_\">dest</span>(<span class=\"string\">&#x27;dist/assets/css&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">rename</span>(&#123;<span class=\"attr\">suffix</span>: <span class=\"string\">&#x27;.min&#x27;</span>&#125;))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">minifycss</span>())</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(gulp.<span class=\"title function_\">dest</span>(<span class=\"string\">&#x27;dist/assets/css&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">notify</span>(&#123; <span class=\"attr\">message</span>: <span class=\"string\">&#x27;Styles task complete&#x27;</span> &#125;));</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>让我解释一下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;styles&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;...&#125;);</span><br></pre></td></tr></table></figure>\n\n<p><code>gulp.task</code> 这个API用来创建任务，在命令行下可以输入 <code>$ gulp styles</code> 来执行上面的任务。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> gulp.<span class=\"title function_\">src</span>(<span class=\"string\">&#x27;src/styles/main.scss&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<p><code>gulp.src</code> 这个API设置需要处理的文件的路径，可以是多个文件以数组的形式 <code>[main.scss, vender.scss]</code> ，也可以是正则表达式 <code>/**/*.scss</code> 。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.<span class=\"title function_\">pipe</span>(<span class=\"title function_\">sass</span>(&#123; <span class=\"attr\">style</span>: <span class=\"string\">&#x27;expanded&#x27;</span> &#125;))</span><br></pre></td></tr></table></figure>\n\n<p>我们使用 <code>.pipe()</code> 这个API将需要处理的文件导向sass插件，那些插件的用法可以在github上找到，为了方便大家查找我已经在上面列出来了。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.<span class=\"title function_\">pipe</span>(gulp.<span class=\"title function_\">dest</span>(<span class=\"string\">&#x27;dist/assets/css&#x27;</span>));</span><br></pre></td></tr></table></figure>\n\n<p><code>gulp.dest()</code> API设置生成文件的路径，一个任务可以有多个生成路径，一个可以输出未压缩的版本，另一个可以输出压缩后的版本。</p>\n<p>为了更好的了解Gulp API，强烈建议看一下<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2d1bHBqcy9ndWxwL2Jsb2IvbWFzdGVyL2RvY3MvQVBJLm1k\">Gulp API文档<i class=\"fa fa-external-link-alt\"></i></span>，其实Gulp API就这么几个，没什么好可怕的。</p>\n<h3 id=\"js代码校验、合并和压缩\"><a href=\"#js代码校验、合并和压缩\" class=\"headerlink\" title=\"js代码校验、合并和压缩\"></a>js代码校验、合并和压缩</h3><p>希望大家已经知道如何去创建一个任务了，接下来我们完成scripts的校验、合并和压缩的任务吧：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;scripts&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> gulp.<span class=\"title function_\">src</span>(<span class=\"string\">&#x27;src/scripts/**/*.js&#x27;</span>)</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">jshint</span>(<span class=\"string\">&#x27;.jshintrc&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(jshint.<span class=\"title function_\">reporter</span>(<span class=\"string\">&#x27;default&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">concat</span>(<span class=\"string\">&#x27;main.js&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(gulp.<span class=\"title function_\">dest</span>(<span class=\"string\">&#x27;dist/assets/js&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">rename</span>(&#123;<span class=\"attr\">suffix</span>: <span class=\"string\">&#x27;.min&#x27;</span>&#125;))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">uglify</span>())</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(gulp.<span class=\"title function_\">dest</span>(<span class=\"string\">&#x27;dist/assets/js&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">notify</span>(&#123; <span class=\"attr\">message</span>: <span class=\"string\">&#x27;Scripts task complete&#x27;</span> &#125;));</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>需要提醒的是我们要设置JSHint的reporter方式，上面使用的是default默认的，了解更多<span class=\"exturl\" data-url=\"aHR0cDovL2pzaGludC5jb20vZG9jcy9yZXBvcnRlcnMv\">点击这里<i class=\"fa fa-external-link-alt\"></i></span>。</p>\n<h3 id=\"压缩图片\"><a href=\"#压缩图片\" class=\"headerlink\" title=\"压缩图片\"></a>压缩图片</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;images&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> gulp.<span class=\"title function_\">src</span>(<span class=\"string\">&#x27;src/images/**/*&#x27;</span>)</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">imagemin</span>(&#123; <span class=\"attr\">optimizationLevel</span>: <span class=\"number\">3</span>, <span class=\"attr\">progressive</span>: <span class=\"literal\">true</span>, <span class=\"attr\">interlaced</span>: <span class=\"literal\">true</span> &#125;))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(gulp.<span class=\"title function_\">dest</span>(<span class=\"string\">&#x27;dist/assets/img&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">notify</span>(&#123; <span class=\"attr\">message</span>: <span class=\"string\">&#x27;Images task complete&#x27;</span> &#125;));</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>这个任务使用 <code>imagemin</code> 插件把所有在 <code>src/images/</code> 目录以及其子目录下的所有图片（文件）进行压缩，我们可以进一步优化，利用缓存保存已经压缩过的图片，使用之前装过的gulp-cache插件，不过要修改一下上面的代码：</p>\n<p>将这行代码:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.<span class=\"title function_\">pipe</span>(<span class=\"title function_\">imagemin</span>(&#123; <span class=\"attr\">optimizationLevel</span>: <span class=\"number\">3</span>, <span class=\"attr\">progressive</span>: <span class=\"literal\">true</span>, <span class=\"attr\">interlaced</span>: <span class=\"literal\">true</span> &#125;))</span><br></pre></td></tr></table></figure>\n\n<p>修改成:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.<span class=\"title function_\">pipe</span>(<span class=\"title function_\">cache</span>(<span class=\"title function_\">imagemin</span>(&#123; <span class=\"attr\">optimizationLevel</span>: <span class=\"number\">5</span>, <span class=\"attr\">progressive</span>: <span class=\"literal\">true</span>, <span class=\"attr\">interlaced</span>: <span class=\"literal\">true</span> &#125;)))</span><br></pre></td></tr></table></figure>\n\n<p>现在，只有新建或者修改过的图片才会被压缩了。</p>\n<h3 id=\"清除文件\"><a href=\"#清除文件\" class=\"headerlink\" title=\"清除文件\"></a>清除文件</h3><p>在任务执行前，最好先清除之前生成的文件：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;clean&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">cb</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">del</span>([<span class=\"string\">&#x27;dist/assets/css&#x27;</span>, <span class=\"string\">&#x27;dist/assets/js&#x27;</span>, <span class=\"string\">&#x27;dist/assets/img&#x27;</span>], cb)</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>在这里没有必要使用Gulp插件了，可以使用NPM提供的插件。我们用一个回调函数（ <code>cb</code> ）确保在退出前完成任务。</p>\n<h3 id=\"设置默认任务（default）\"><a href=\"#设置默认任务（default）\" class=\"headerlink\" title=\"设置默认任务（default）\"></a>设置默认任务（default）</h3><p>我们在命令行下输入 <code>$ gulp</code> 执行的就是默认任务，现在我们为默认任务指定执行上面写好的三个任务：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;default&#x27;</span>, [<span class=\"string\">&#x27;clean&#x27;</span>], <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\tgulp.<span class=\"title function_\">start</span>(<span class=\"string\">&#x27;styles&#x27;</span>, <span class=\"string\">&#x27;scripts&#x27;</span>, <span class=\"string\">&#x27;images&#x27;</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>在这个例子里面，clean任务执行完成了才会去运行其他的任务，在 <code>gulp.start()</code> 里的任务执行的顺序是不确定的，所以将要在它们之前执行的任务写在数组里面。</p>\n<h3 id=\"监听文件\"><a href=\"#监听文件\" class=\"headerlink\" title=\"监听文件\"></a>监听文件</h3><p>为了监听文件的是否修改以便执行相应的任务，我们需要创建一个新的任务，然后利用 <code>gulp.watchAPI</code> 实现：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;watch&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// Watch .scss files</span></span><br><span class=\"line\">  gulp.<span class=\"title function_\">watch</span>(<span class=\"string\">&#x27;src/styles/**/*.scss&#x27;</span>, [<span class=\"string\">&#x27;styles&#x27;</span>]);</span><br><span class=\"line\">  <span class=\"comment\">// Watch .js files</span></span><br><span class=\"line\">  gulp.<span class=\"title function_\">watch</span>(<span class=\"string\">&#x27;src/scripts/**/*.js&#x27;</span>, [<span class=\"string\">&#x27;scripts&#x27;</span>]);</span><br><span class=\"line\">  <span class=\"comment\">// Watch image files</span></span><br><span class=\"line\">  gulp.<span class=\"title function_\">watch</span>(<span class=\"string\">&#x27;src/images/**/*&#x27;</span>, [<span class=\"string\">&#x27;images&#x27;</span>]);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>我们将不同类型的文件分开处理，执行对应的数组里的任务。现在我们可以在命令行输入 <code>$ gulp watch</code> 执行监听任务，当 <code>.sass</code> 、 <code>.js</code> 和图片修改时将执行对应的任务。</p>\n<h3 id=\"自动刷新页面\"><a href=\"#自动刷新页面\" class=\"headerlink\" title=\"自动刷新页面\"></a>自动刷新页面</h3><p>Gulp也可以实现当文件修改时自动刷新页面，我们要修改 <code>watch</code> 任务，配置LiveReload：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;watch&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// Create LiveReload server</span></span><br><span class=\"line\">  livereload.<span class=\"title function_\">listen</span>();</span><br><span class=\"line\">  <span class=\"comment\">// Watch any files in dist/, reload on change</span></span><br><span class=\"line\">  gulp.<span class=\"title function_\">watch</span>([<span class=\"string\">&#x27;dist/**&#x27;</span>]).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;change&#x27;</span>, livereload.<span class=\"property\">changed</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>要使这个能够工作，还需要在浏览器上安装LiveReload插件，除此之外<span class=\"exturl\" data-url=\"aHR0cDovL2ZlZWRiYWNrLmxpdmVyZWxvYWQuY29tL2tub3dsZWRnZWJhc2UvYXJ0aWNsZXMvODYxODAtaG93LWRvLWktYWRkLXRoZS1zY3JpcHQtdGFnLW1hbnVhbGx5LQ==\">还能这样做<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h3 id=\"所有任务放一起\"><a href=\"#所有任务放一起\" class=\"headerlink\" title=\"所有任务放一起\"></a>所有任务放一起</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*!</span></span><br><span class=\"line\"><span class=\"comment\"> * gulp</span></span><br><span class=\"line\"><span class=\"comment\"> * $ npm install gulp-ruby-sass gulp-autoprefixer gulp-minify-css gulp-jshint gulp-concat gulp-uglify gulp-imagemin gulp-notify gulp-rename gulp-livereload gulp-cache del --save-dev</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">// Load plugins</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp&#x27;</span>),</span><br><span class=\"line\">    sass = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-ruby-sass&#x27;</span>),</span><br><span class=\"line\">    autoprefixer = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-autoprefixer&#x27;</span>),</span><br><span class=\"line\">    minifycss = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-minify-css&#x27;</span>),</span><br><span class=\"line\">    jshint = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-jshint&#x27;</span>),</span><br><span class=\"line\">    uglify = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-uglify&#x27;</span>),</span><br><span class=\"line\">    imagemin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-imagemin&#x27;</span>),</span><br><span class=\"line\">    rename = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-rename&#x27;</span>),</span><br><span class=\"line\">    concat = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-concat&#x27;</span>),</span><br><span class=\"line\">    notify = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-notify&#x27;</span>),</span><br><span class=\"line\">    cache = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-cache&#x27;</span>),</span><br><span class=\"line\">    livereload = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-livereload&#x27;</span>),</span><br><span class=\"line\">    del = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;del&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">// Styles</span></span><br><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;styles&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> gulp.<span class=\"title function_\">src</span>(<span class=\"string\">&#x27;src/styles/main.scss&#x27;</span>)</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">sass</span>(&#123; <span class=\"attr\">style</span>: <span class=\"string\">&#x27;expanded&#x27;</span>, &#125;))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">autoprefixer</span>(<span class=\"string\">&#x27;last 2 version&#x27;</span>, <span class=\"string\">&#x27;safari 5&#x27;</span>, <span class=\"string\">&#x27;ie 8&#x27;</span>, <span class=\"string\">&#x27;ie 9&#x27;</span>, <span class=\"string\">&#x27;opera 12.1&#x27;</span>, <span class=\"string\">&#x27;ios 6&#x27;</span>, <span class=\"string\">&#x27;android 4&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(gulp.<span class=\"title function_\">dest</span>(<span class=\"string\">&#x27;dist/styles&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">rename</span>(&#123; <span class=\"attr\">suffix</span>: <span class=\"string\">&#x27;.min&#x27;</span> &#125;))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">minifycss</span>())</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(gulp.<span class=\"title function_\">dest</span>(<span class=\"string\">&#x27;dist/styles&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">notify</span>(&#123; <span class=\"attr\">message</span>: <span class=\"string\">&#x27;Styles task complete&#x27;</span> &#125;));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// Scripts</span></span><br><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;scripts&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> gulp.<span class=\"title function_\">src</span>(<span class=\"string\">&#x27;src/scripts/**/*.js&#x27;</span>)</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">jshint</span>(<span class=\"string\">&#x27;.jshintrc&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(jshint.<span class=\"title function_\">reporter</span>(<span class=\"string\">&#x27;default&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">concat</span>(<span class=\"string\">&#x27;main.js&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(gulp.<span class=\"title function_\">dest</span>(<span class=\"string\">&#x27;dist/scripts&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">rename</span>(&#123; <span class=\"attr\">suffix</span>: <span class=\"string\">&#x27;.min&#x27;</span> &#125;))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">uglify</span>())</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(gulp.<span class=\"title function_\">dest</span>(<span class=\"string\">&#x27;dist/scripts&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">notify</span>(&#123; <span class=\"attr\">message</span>: <span class=\"string\">&#x27;Scripts task complete&#x27;</span> &#125;));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// Images</span></span><br><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;images&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> gulp.<span class=\"title function_\">src</span>(<span class=\"string\">&#x27;src/images/**/*&#x27;</span>)</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">cache</span>(<span class=\"title function_\">imagemin</span>(&#123; <span class=\"attr\">optimizationLevel</span>: <span class=\"number\">3</span>, <span class=\"attr\">progressive</span>: <span class=\"literal\">true</span>, <span class=\"attr\">interlaced</span>: <span class=\"literal\">true</span> &#125;)))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(gulp.<span class=\"title function_\">dest</span>(<span class=\"string\">&#x27;dist/images&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">notify</span>(&#123; <span class=\"attr\">message</span>: <span class=\"string\">&#x27;Images task complete&#x27;</span> &#125;));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// Clean</span></span><br><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;clean&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">cb</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">del</span>([<span class=\"string\">&#x27;dist/assets/css&#x27;</span>, <span class=\"string\">&#x27;dist/assets/js&#x27;</span>, <span class=\"string\">&#x27;dist/assets/img&#x27;</span>], cb)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// Default task</span></span><br><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;default&#x27;</span>, [<span class=\"string\">&#x27;clean&#x27;</span>], <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    gulp.<span class=\"title function_\">start</span>(<span class=\"string\">&#x27;styles&#x27;</span>, <span class=\"string\">&#x27;scripts&#x27;</span>, <span class=\"string\">&#x27;images&#x27;</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// Watch</span></span><br><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;watch&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// Watch .scss files</span></span><br><span class=\"line\">  gulp.<span class=\"title function_\">watch</span>(<span class=\"string\">&#x27;src/styles/**/*.scss&#x27;</span>, [<span class=\"string\">&#x27;styles&#x27;</span>]);</span><br><span class=\"line\">  <span class=\"comment\">// Watch .js files</span></span><br><span class=\"line\">  gulp.<span class=\"title function_\">watch</span>(<span class=\"string\">&#x27;src/scripts/**/*.js&#x27;</span>, [<span class=\"string\">&#x27;scripts&#x27;</span>]);</span><br><span class=\"line\">  <span class=\"comment\">// Watch image files</span></span><br><span class=\"line\">  gulp.<span class=\"title function_\">watch</span>(<span class=\"string\">&#x27;src/images/**/*&#x27;</span>, [<span class=\"string\">&#x27;images&#x27;</span>]);</span><br><span class=\"line\">  <span class=\"comment\">// Create LiveReload server</span></span><br><span class=\"line\">  livereload.<span class=\"title function_\">listen</span>();</span><br><span class=\"line\">  <span class=\"comment\">// Watch any files in dist/, reload on change</span></span><br><span class=\"line\">  gulp.<span class=\"title function_\">watch</span>([<span class=\"string\">&#x27;dist/**&#x27;</span>]).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;change&#x27;</span>, livereload.<span class=\"property\">changed</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n","more":"<ul>\n<li>sass的编译（<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NpbmRyZXNvcmh1cy9ndWxwLXJ1Ynktc2Fzcw==\">gulp-ruby-sass<i class=\"fa fa-external-link-alt\"></i></span>）</li>\n<li>自动添加css前缀（<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL01ldHJpbWUvZ3VscC1hdXRvcHJlZml4ZXI=\">gulp-autoprefixer<i class=\"fa fa-external-link-alt\"></i></span>）</li>\n<li>压缩css（<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvZ3VscC1taW5pZnktY3NzLW1wYXRoLw==\">gulp-minify-css<i class=\"fa fa-external-link-alt\"></i></span>）</li>\n<li>js代码校验（<span class=\"exturl\" data-url=\"aHR0cDovL2dpdGh1Yi5jb20vc3BlbmNlcmFsZ2VyL2d1bHAtanNoaW50\">gulp-jshint<i class=\"fa fa-external-link-alt\"></i></span>）</li>\n<li>合并js文件（<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NvbnRyYS9ndWxwLWNvbmNhdA==\">gulp-concat<i class=\"fa fa-external-link-alt\"></i></span>）</li>\n<li>压缩js代码（<span class=\"exturl\" data-url=\"aHR0cDovLw==\">gulp-uglify<i class=\"fa fa-external-link-alt\"></i></span>）</li>\n<li>压缩图片（<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NpbmRyZXNvcmh1cy9ndWxwLWltYWdlbWlu\">gulp-imagemin<i class=\"fa fa-external-link-alt\"></i></span>）</li>\n<li>自动刷新页面（<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3ZvaG9mL2d1bHAtbGl2ZXJlbG9hZA==\">gulp-livereload<i class=\"fa fa-external-link-alt\"></i></span>）</li>\n<li>图片缓存，只有图片替换了才压缩（<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2pnYWJsZS9ndWxwLWNhY2hl\">gulp-cache<i class=\"fa fa-external-link-alt\"></i></span>）</li>\n<li>更改提醒（<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21pa2FlbGJyL2d1bHAtbm90aWZ5\">gulp-notify<i class=\"fa fa-external-link-alt\"></i></span>）</li>\n<li>清除文件（<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5ucG1qcy5vcmcvcGFja2FnZS9kZWw=\">del<i class=\"fa fa-external-link-alt\"></i></span>）</li>\n</ul>\n<p>安装这些插件需要运行如下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install gulp-ruby-sass gulp-autoprefixer gulp-minify-css gulp-jshint gulp-concat gulp-uglify gulp-imagemin gulp-notify gulp-rename gulp-livereload gulp-cache del --save-dev</span><br></pre></td></tr></table></figure>\n\n\n<p>上面是一些常用的插件，如果想要找更多的插件<span class=\"exturl\" data-url=\"aHR0cDovL2d1bHBqcy5jb20vcGx1Z2lucy8=\">点击这里<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"加载插件\"><a href=\"#加载插件\" class=\"headerlink\" title=\"加载插件\"></a>加载插件</h2><p>接着我们要创建一个gulpfile.js在根目录下，然后在里面加载插件：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp&#x27;</span>),</span><br><span class=\"line\">    sass = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-ruby-sass&#x27;</span>),</span><br><span class=\"line\">    autoprefixer = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-autoprefixer&#x27;</span>),</span><br><span class=\"line\">    minifycss = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-minify-css&#x27;</span>),</span><br><span class=\"line\">    jshint = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-jshint&#x27;</span>),</span><br><span class=\"line\">    uglify = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-uglify&#x27;</span>),</span><br><span class=\"line\">    imagemin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-imagemin&#x27;</span>),</span><br><span class=\"line\">    rename = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-rename&#x27;</span>),</span><br><span class=\"line\">    concat = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-concat&#x27;</span>),</span><br><span class=\"line\">    notify = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-notify&#x27;</span>),</span><br><span class=\"line\">    cache = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-cache&#x27;</span>),</span><br><span class=\"line\">    livereload = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-livereload&#x27;</span>),</span><br><span class=\"line\">    del = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;del&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>Gulp的插件和Grunt有些许不一样，Grunt插件是为了更好的完成一项任务。就像Grunt的 <code>imagemin</code> 插件就利用了缓存来避免重复压缩，而Gulp要利用 <code>gulp-cache</code> 来完成，当然啦，不仅限定于缓存图片。</p>\n<h2 id=\"建立任务\"><a href=\"#建立任务\" class=\"headerlink\" title=\"建立任务\"></a>建立任务</h2><h3 id=\"编译sass、自动添加css前缀和压缩\"><a href=\"#编译sass、自动添加css前缀和压缩\" class=\"headerlink\" title=\"编译sass、自动添加css前缀和压缩\"></a>编译sass、自动添加css前缀和压缩</h3><p>首先我们编译sass，添加前缀，保存到我们指定的目录下面，还没结束，我们还要压缩，给文件添加.min后缀再输出压缩文件到指定目录，最后提醒任务完成了：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;styles&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> gulp.<span class=\"title function_\">src</span>(<span class=\"string\">&#x27;src/styles/main.scss&#x27;</span>)</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">sass</span>(&#123; <span class=\"attr\">style</span>: <span class=\"string\">&#x27;expanded&#x27;</span> &#125;))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">autoprefixer</span>(<span class=\"string\">&#x27;last 2 version&#x27;</span>, <span class=\"string\">&#x27;safari 5&#x27;</span>, <span class=\"string\">&#x27;ie 8&#x27;</span>, <span class=\"string\">&#x27;ie 9&#x27;</span>, <span class=\"string\">&#x27;opera 12.1&#x27;</span>, <span class=\"string\">&#x27;ios 6&#x27;</span>, <span class=\"string\">&#x27;android 4&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(gulp.<span class=\"title function_\">dest</span>(<span class=\"string\">&#x27;dist/assets/css&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">rename</span>(&#123;<span class=\"attr\">suffix</span>: <span class=\"string\">&#x27;.min&#x27;</span>&#125;))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">minifycss</span>())</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(gulp.<span class=\"title function_\">dest</span>(<span class=\"string\">&#x27;dist/assets/css&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">notify</span>(&#123; <span class=\"attr\">message</span>: <span class=\"string\">&#x27;Styles task complete&#x27;</span> &#125;));</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>让我解释一下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;styles&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;...&#125;);</span><br></pre></td></tr></table></figure>\n\n<p><code>gulp.task</code> 这个API用来创建任务，在命令行下可以输入 <code>$ gulp styles</code> 来执行上面的任务。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> gulp.<span class=\"title function_\">src</span>(<span class=\"string\">&#x27;src/styles/main.scss&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<p><code>gulp.src</code> 这个API设置需要处理的文件的路径，可以是多个文件以数组的形式 <code>[main.scss, vender.scss]</code> ，也可以是正则表达式 <code>/**/*.scss</code> 。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.<span class=\"title function_\">pipe</span>(<span class=\"title function_\">sass</span>(&#123; <span class=\"attr\">style</span>: <span class=\"string\">&#x27;expanded&#x27;</span> &#125;))</span><br></pre></td></tr></table></figure>\n\n<p>我们使用 <code>.pipe()</code> 这个API将需要处理的文件导向sass插件，那些插件的用法可以在github上找到，为了方便大家查找我已经在上面列出来了。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.<span class=\"title function_\">pipe</span>(gulp.<span class=\"title function_\">dest</span>(<span class=\"string\">&#x27;dist/assets/css&#x27;</span>));</span><br></pre></td></tr></table></figure>\n\n<p><code>gulp.dest()</code> API设置生成文件的路径，一个任务可以有多个生成路径，一个可以输出未压缩的版本，另一个可以输出压缩后的版本。</p>\n<p>为了更好的了解Gulp API，强烈建议看一下<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2d1bHBqcy9ndWxwL2Jsb2IvbWFzdGVyL2RvY3MvQVBJLm1k\">Gulp API文档<i class=\"fa fa-external-link-alt\"></i></span>，其实Gulp API就这么几个，没什么好可怕的。</p>\n<h3 id=\"js代码校验、合并和压缩\"><a href=\"#js代码校验、合并和压缩\" class=\"headerlink\" title=\"js代码校验、合并和压缩\"></a>js代码校验、合并和压缩</h3><p>希望大家已经知道如何去创建一个任务了，接下来我们完成scripts的校验、合并和压缩的任务吧：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;scripts&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> gulp.<span class=\"title function_\">src</span>(<span class=\"string\">&#x27;src/scripts/**/*.js&#x27;</span>)</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">jshint</span>(<span class=\"string\">&#x27;.jshintrc&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(jshint.<span class=\"title function_\">reporter</span>(<span class=\"string\">&#x27;default&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">concat</span>(<span class=\"string\">&#x27;main.js&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(gulp.<span class=\"title function_\">dest</span>(<span class=\"string\">&#x27;dist/assets/js&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">rename</span>(&#123;<span class=\"attr\">suffix</span>: <span class=\"string\">&#x27;.min&#x27;</span>&#125;))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">uglify</span>())</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(gulp.<span class=\"title function_\">dest</span>(<span class=\"string\">&#x27;dist/assets/js&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">notify</span>(&#123; <span class=\"attr\">message</span>: <span class=\"string\">&#x27;Scripts task complete&#x27;</span> &#125;));</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>需要提醒的是我们要设置JSHint的reporter方式，上面使用的是default默认的，了解更多<span class=\"exturl\" data-url=\"aHR0cDovL2pzaGludC5jb20vZG9jcy9yZXBvcnRlcnMv\">点击这里<i class=\"fa fa-external-link-alt\"></i></span>。</p>\n<h3 id=\"压缩图片\"><a href=\"#压缩图片\" class=\"headerlink\" title=\"压缩图片\"></a>压缩图片</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;images&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> gulp.<span class=\"title function_\">src</span>(<span class=\"string\">&#x27;src/images/**/*&#x27;</span>)</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">imagemin</span>(&#123; <span class=\"attr\">optimizationLevel</span>: <span class=\"number\">3</span>, <span class=\"attr\">progressive</span>: <span class=\"literal\">true</span>, <span class=\"attr\">interlaced</span>: <span class=\"literal\">true</span> &#125;))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(gulp.<span class=\"title function_\">dest</span>(<span class=\"string\">&#x27;dist/assets/img&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">notify</span>(&#123; <span class=\"attr\">message</span>: <span class=\"string\">&#x27;Images task complete&#x27;</span> &#125;));</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>这个任务使用 <code>imagemin</code> 插件把所有在 <code>src/images/</code> 目录以及其子目录下的所有图片（文件）进行压缩，我们可以进一步优化，利用缓存保存已经压缩过的图片，使用之前装过的gulp-cache插件，不过要修改一下上面的代码：</p>\n<p>将这行代码:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.<span class=\"title function_\">pipe</span>(<span class=\"title function_\">imagemin</span>(&#123; <span class=\"attr\">optimizationLevel</span>: <span class=\"number\">3</span>, <span class=\"attr\">progressive</span>: <span class=\"literal\">true</span>, <span class=\"attr\">interlaced</span>: <span class=\"literal\">true</span> &#125;))</span><br></pre></td></tr></table></figure>\n\n<p>修改成:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.<span class=\"title function_\">pipe</span>(<span class=\"title function_\">cache</span>(<span class=\"title function_\">imagemin</span>(&#123; <span class=\"attr\">optimizationLevel</span>: <span class=\"number\">5</span>, <span class=\"attr\">progressive</span>: <span class=\"literal\">true</span>, <span class=\"attr\">interlaced</span>: <span class=\"literal\">true</span> &#125;)))</span><br></pre></td></tr></table></figure>\n\n<p>现在，只有新建或者修改过的图片才会被压缩了。</p>\n<h3 id=\"清除文件\"><a href=\"#清除文件\" class=\"headerlink\" title=\"清除文件\"></a>清除文件</h3><p>在任务执行前，最好先清除之前生成的文件：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;clean&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">cb</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">del</span>([<span class=\"string\">&#x27;dist/assets/css&#x27;</span>, <span class=\"string\">&#x27;dist/assets/js&#x27;</span>, <span class=\"string\">&#x27;dist/assets/img&#x27;</span>], cb)</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>在这里没有必要使用Gulp插件了，可以使用NPM提供的插件。我们用一个回调函数（ <code>cb</code> ）确保在退出前完成任务。</p>\n<h3 id=\"设置默认任务（default）\"><a href=\"#设置默认任务（default）\" class=\"headerlink\" title=\"设置默认任务（default）\"></a>设置默认任务（default）</h3><p>我们在命令行下输入 <code>$ gulp</code> 执行的就是默认任务，现在我们为默认任务指定执行上面写好的三个任务：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;default&#x27;</span>, [<span class=\"string\">&#x27;clean&#x27;</span>], <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\tgulp.<span class=\"title function_\">start</span>(<span class=\"string\">&#x27;styles&#x27;</span>, <span class=\"string\">&#x27;scripts&#x27;</span>, <span class=\"string\">&#x27;images&#x27;</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>在这个例子里面，clean任务执行完成了才会去运行其他的任务，在 <code>gulp.start()</code> 里的任务执行的顺序是不确定的，所以将要在它们之前执行的任务写在数组里面。</p>\n<h3 id=\"监听文件\"><a href=\"#监听文件\" class=\"headerlink\" title=\"监听文件\"></a>监听文件</h3><p>为了监听文件的是否修改以便执行相应的任务，我们需要创建一个新的任务，然后利用 <code>gulp.watchAPI</code> 实现：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;watch&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// Watch .scss files</span></span><br><span class=\"line\">  gulp.<span class=\"title function_\">watch</span>(<span class=\"string\">&#x27;src/styles/**/*.scss&#x27;</span>, [<span class=\"string\">&#x27;styles&#x27;</span>]);</span><br><span class=\"line\">  <span class=\"comment\">// Watch .js files</span></span><br><span class=\"line\">  gulp.<span class=\"title function_\">watch</span>(<span class=\"string\">&#x27;src/scripts/**/*.js&#x27;</span>, [<span class=\"string\">&#x27;scripts&#x27;</span>]);</span><br><span class=\"line\">  <span class=\"comment\">// Watch image files</span></span><br><span class=\"line\">  gulp.<span class=\"title function_\">watch</span>(<span class=\"string\">&#x27;src/images/**/*&#x27;</span>, [<span class=\"string\">&#x27;images&#x27;</span>]);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>我们将不同类型的文件分开处理，执行对应的数组里的任务。现在我们可以在命令行输入 <code>$ gulp watch</code> 执行监听任务，当 <code>.sass</code> 、 <code>.js</code> 和图片修改时将执行对应的任务。</p>\n<h3 id=\"自动刷新页面\"><a href=\"#自动刷新页面\" class=\"headerlink\" title=\"自动刷新页面\"></a>自动刷新页面</h3><p>Gulp也可以实现当文件修改时自动刷新页面，我们要修改 <code>watch</code> 任务，配置LiveReload：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;watch&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// Create LiveReload server</span></span><br><span class=\"line\">  livereload.<span class=\"title function_\">listen</span>();</span><br><span class=\"line\">  <span class=\"comment\">// Watch any files in dist/, reload on change</span></span><br><span class=\"line\">  gulp.<span class=\"title function_\">watch</span>([<span class=\"string\">&#x27;dist/**&#x27;</span>]).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;change&#x27;</span>, livereload.<span class=\"property\">changed</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>要使这个能够工作，还需要在浏览器上安装LiveReload插件，除此之外<span class=\"exturl\" data-url=\"aHR0cDovL2ZlZWRiYWNrLmxpdmVyZWxvYWQuY29tL2tub3dsZWRnZWJhc2UvYXJ0aWNsZXMvODYxODAtaG93LWRvLWktYWRkLXRoZS1zY3JpcHQtdGFnLW1hbnVhbGx5LQ==\">还能这样做<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h3 id=\"所有任务放一起\"><a href=\"#所有任务放一起\" class=\"headerlink\" title=\"所有任务放一起\"></a>所有任务放一起</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*!</span></span><br><span class=\"line\"><span class=\"comment\"> * gulp</span></span><br><span class=\"line\"><span class=\"comment\"> * $ npm install gulp-ruby-sass gulp-autoprefixer gulp-minify-css gulp-jshint gulp-concat gulp-uglify gulp-imagemin gulp-notify gulp-rename gulp-livereload gulp-cache del --save-dev</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">// Load plugins</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp&#x27;</span>),</span><br><span class=\"line\">    sass = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-ruby-sass&#x27;</span>),</span><br><span class=\"line\">    autoprefixer = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-autoprefixer&#x27;</span>),</span><br><span class=\"line\">    minifycss = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-minify-css&#x27;</span>),</span><br><span class=\"line\">    jshint = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-jshint&#x27;</span>),</span><br><span class=\"line\">    uglify = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-uglify&#x27;</span>),</span><br><span class=\"line\">    imagemin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-imagemin&#x27;</span>),</span><br><span class=\"line\">    rename = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-rename&#x27;</span>),</span><br><span class=\"line\">    concat = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-concat&#x27;</span>),</span><br><span class=\"line\">    notify = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-notify&#x27;</span>),</span><br><span class=\"line\">    cache = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-cache&#x27;</span>),</span><br><span class=\"line\">    livereload = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;gulp-livereload&#x27;</span>),</span><br><span class=\"line\">    del = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;del&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">// Styles</span></span><br><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;styles&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> gulp.<span class=\"title function_\">src</span>(<span class=\"string\">&#x27;src/styles/main.scss&#x27;</span>)</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">sass</span>(&#123; <span class=\"attr\">style</span>: <span class=\"string\">&#x27;expanded&#x27;</span>, &#125;))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">autoprefixer</span>(<span class=\"string\">&#x27;last 2 version&#x27;</span>, <span class=\"string\">&#x27;safari 5&#x27;</span>, <span class=\"string\">&#x27;ie 8&#x27;</span>, <span class=\"string\">&#x27;ie 9&#x27;</span>, <span class=\"string\">&#x27;opera 12.1&#x27;</span>, <span class=\"string\">&#x27;ios 6&#x27;</span>, <span class=\"string\">&#x27;android 4&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(gulp.<span class=\"title function_\">dest</span>(<span class=\"string\">&#x27;dist/styles&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">rename</span>(&#123; <span class=\"attr\">suffix</span>: <span class=\"string\">&#x27;.min&#x27;</span> &#125;))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">minifycss</span>())</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(gulp.<span class=\"title function_\">dest</span>(<span class=\"string\">&#x27;dist/styles&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">notify</span>(&#123; <span class=\"attr\">message</span>: <span class=\"string\">&#x27;Styles task complete&#x27;</span> &#125;));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// Scripts</span></span><br><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;scripts&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> gulp.<span class=\"title function_\">src</span>(<span class=\"string\">&#x27;src/scripts/**/*.js&#x27;</span>)</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">jshint</span>(<span class=\"string\">&#x27;.jshintrc&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(jshint.<span class=\"title function_\">reporter</span>(<span class=\"string\">&#x27;default&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">concat</span>(<span class=\"string\">&#x27;main.js&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(gulp.<span class=\"title function_\">dest</span>(<span class=\"string\">&#x27;dist/scripts&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">rename</span>(&#123; <span class=\"attr\">suffix</span>: <span class=\"string\">&#x27;.min&#x27;</span> &#125;))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">uglify</span>())</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(gulp.<span class=\"title function_\">dest</span>(<span class=\"string\">&#x27;dist/scripts&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">notify</span>(&#123; <span class=\"attr\">message</span>: <span class=\"string\">&#x27;Scripts task complete&#x27;</span> &#125;));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// Images</span></span><br><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;images&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> gulp.<span class=\"title function_\">src</span>(<span class=\"string\">&#x27;src/images/**/*&#x27;</span>)</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">cache</span>(<span class=\"title function_\">imagemin</span>(&#123; <span class=\"attr\">optimizationLevel</span>: <span class=\"number\">3</span>, <span class=\"attr\">progressive</span>: <span class=\"literal\">true</span>, <span class=\"attr\">interlaced</span>: <span class=\"literal\">true</span> &#125;)))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(gulp.<span class=\"title function_\">dest</span>(<span class=\"string\">&#x27;dist/images&#x27;</span>))</span><br><span class=\"line\">    .<span class=\"title function_\">pipe</span>(<span class=\"title function_\">notify</span>(&#123; <span class=\"attr\">message</span>: <span class=\"string\">&#x27;Images task complete&#x27;</span> &#125;));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// Clean</span></span><br><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;clean&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">cb</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">del</span>([<span class=\"string\">&#x27;dist/assets/css&#x27;</span>, <span class=\"string\">&#x27;dist/assets/js&#x27;</span>, <span class=\"string\">&#x27;dist/assets/img&#x27;</span>], cb)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// Default task</span></span><br><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;default&#x27;</span>, [<span class=\"string\">&#x27;clean&#x27;</span>], <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    gulp.<span class=\"title function_\">start</span>(<span class=\"string\">&#x27;styles&#x27;</span>, <span class=\"string\">&#x27;scripts&#x27;</span>, <span class=\"string\">&#x27;images&#x27;</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// Watch</span></span><br><span class=\"line\">gulp.<span class=\"title function_\">task</span>(<span class=\"string\">&#x27;watch&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// Watch .scss files</span></span><br><span class=\"line\">  gulp.<span class=\"title function_\">watch</span>(<span class=\"string\">&#x27;src/styles/**/*.scss&#x27;</span>, [<span class=\"string\">&#x27;styles&#x27;</span>]);</span><br><span class=\"line\">  <span class=\"comment\">// Watch .js files</span></span><br><span class=\"line\">  gulp.<span class=\"title function_\">watch</span>(<span class=\"string\">&#x27;src/scripts/**/*.js&#x27;</span>, [<span class=\"string\">&#x27;scripts&#x27;</span>]);</span><br><span class=\"line\">  <span class=\"comment\">// Watch image files</span></span><br><span class=\"line\">  gulp.<span class=\"title function_\">watch</span>(<span class=\"string\">&#x27;src/images/**/*&#x27;</span>, [<span class=\"string\">&#x27;images&#x27;</span>]);</span><br><span class=\"line\">  <span class=\"comment\">// Create LiveReload server</span></span><br><span class=\"line\">  livereload.<span class=\"title function_\">listen</span>();</span><br><span class=\"line\">  <span class=\"comment\">// Watch any files in dist/, reload on change</span></span><br><span class=\"line\">  gulp.<span class=\"title function_\">watch</span>([<span class=\"string\">&#x27;dist/**&#x27;</span>]).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;change&#x27;</span>, livereload.<span class=\"property\">changed</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>","categories":[{"name":"前端","path":"api/categories/前端.json"}],"tags":[{"name":"工具","path":"api/tags/工具.json"}]}