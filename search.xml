<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>AirPlay3</title>
    <url>/posts/airplay3.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-08/airplay3/intro.jpg" alt="AirPlay3 -  轻巧的绿色音乐播放器"></p>
<p>流行的音乐播放器有很多，QQ音乐，网易音乐等，它们的功能特别的强大，能在线听歌，而今天我要给大家介绍的一款更特别的播放器 <strong>AirPlay</strong>，它的最大的特点就是“小”与“快速”！</p>
<span id="more"></span>

<p>虽然 AirPlay 仅有几M的体积，但却拥有无比华丽的外观，无论在 Windows7 还是 Windows10 下都能显示华丽的半透明玻璃特效，另外还支持歌词、专辑图片下载，读取压缩文件等功能，可以说麻雀虽小，五脏俱全，是我见过的最好的音乐播放器！一句话总结AirPlay就是：小，并强大着……</p>
<h2 id="提供音乐动力，聆听最美的声音"><a href="#提供音乐动力，聆听最美的声音" class="headerlink" title="提供音乐动力，聆听最美的声音"></a>提供音乐动力，聆听最美的声音</h2><p>经过一段时间的潜心修行，AirPlay3 终于正式发布了！据官方描述，这次最新发布的 AirPlay3 不但大幅增强声音回放品质，而且更全新提供在线音乐服务。通过立点立播的“秒听”功能，以及强大的经过再次升级的Pure Music 2纯音还原第二代技术，为人声和在线音乐进行了特别优化，让音质更加自然纯净，给我们带来更加舒适的听觉效果！</p>
<p><img src="/../imgs/2024-01-08/airplay3/main.jpg" alt="AirPlay3"></p>
<p><strong>AirPlay3特色</strong></p>
<ul>
<li>体积小巧、水晶界面、无需安装；</li>
<li>全新升级的Pure Music 2纯音还原技术，特别增强人声与声场定位，适于长时间聆听；</li>
<li>内置在线音乐电台，覆盖大中华、欧美、日韩等，独有立点立播的“秒听”，随意拖动，如同本机；</li>
<li>元素电台，轻松组建属于自己的个性电台！</li>
<li>支持绝大多数音频格式，特别针对无损音乐优化；</li>
<li>兼容所有音频格式；APE自动分段功能；</li>
<li>支持歌词及相关歌曲信息获取；</li>
<li>内置官方精选电台，提供更多艺人及元素电台模式，可供用户定制使用；</li>
<li>全局热键及多媒体键盘支持，无需离开游戏或其他应用</li>
</ul>
<h2 id="很小，很强大"><a href="#很小，很强大" class="headerlink" title="很小，很强大"></a>很小，很强大</h2><p>不到1MB小身材，绿色软件免安装；原生读取压缩文件（RAR&#x2F;ZIP）；原生无缝播放支持（压缩状态有效）；Pure Music纯音还原技术，还原纯净好声音；自主开发 Zion架构图形及音频引擎 ；词支持，及专辑图片显示，支持预览；多种格式，无损音频全兼容（支持内嵌CUE）；支持多种列表格式，目录列表及智能列表；全局快捷键及多媒体键盘支持</p>
<p><img src="/../imgs/2024-01-08/airplay3/play.jpg" alt="AIRPLAY 播放器"></p>
<h2 id="相关文件下载："><a href="#相关文件下载：" class="headerlink" title="相关文件下载："></a>相关文件下载：</h2><blockquote>
<p><span class="exturl" data-url="aHR0cDovL3d3dy5haXJwbGF5My5jb20v">官方网站<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cDovL3Bhbi5iYWlkdS5jb20vcy8xaHNKYTVZcw==">下载AirPlay3播放器<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>音乐</tag>
      </tags>
  </entry>
  <entry>
    <title>Atom - Github</title>
    <url>/posts/atom-github.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-08/atom-github/intro.jpg" alt="Atom - Github 打造的下一代编程开发利器"></p>
<p>在代码编辑器、文本编辑器领域，有着不少的「神器」级的产品，如历史悠久的 VIM、Emacs 以及如今当红的<span class="exturl" data-url="aHR0cDovL3d3dy5qZWZ3YXkuY29tL3N1YmxpZW0tdGV4dC5odG1s">SublimeText<i class="fa fa-external-link-alt"></i></span>。另外还有 EditPlus、NotePad++、UltraEdit 等一大堆流行的利器，可谓百家争鸣。</p>
<span id="more"></span>

<p>然而，作为目前全球范围内影响力最大的代码仓库&#x2F;开源社区，GitHub 的程序员们并不满足于此。他们使用目前最先进流行的技术重新打造了一款称为“属于 21 世纪”的代码编辑器——<strong>Atom</strong>， 它开源免费跨平台，并且整合 GIT 并提供类似 SublimeText 的包管理功能，支持插件扩展，可配置性非常高……</p>
<h2 id="由-GitHub-打造更为先进的编辑器"><a href="#由-GitHub-打造更为先进的编辑器" class="headerlink" title="由 GitHub 打造更为先进的编辑器"></a>由 GitHub 打造更为先进的编辑器</h2><p>Atom 代码编辑器支持 Windows、Mac、Linux 三大桌面平台，完全免费，并且已经在 GitHub 上开放了全部的源代码。在经过一段长时间的迭代开发和不断改进后，Atom 终于从早期的测试版达到了 1.0 正式版了！相比之前的版本，在性能和稳定性方面都有着显著的改善。</p>
<p><img src="/../imgs/2024-01-08/atom-github/main.jpg" alt="Atom"></p>
<p>开发团队将 Atom 称为一个“为 21 世纪创造的可配置的编辑器”，它拥有非常精致细腻的界面，并且可配置项丰富，加上它提供了与 SublimeText 上类似的 Package Control (包管理)功能，人们可以非常方便地安装和管理各种插件，并将 Atom 打造成真正适合自己的开发工具。</p>
<h2 id="现代化代码编辑器-文本编辑器"><a href="#现代化代码编辑器-文本编辑器" class="headerlink" title="现代化代码编辑器&#x2F;文本编辑器"></a>现代化代码编辑器&#x2F;文本编辑器</h2><p>作为一个现代的代码编辑器，Atom 有着各种流行编辑器都有的特性，功能上非常丰富，支持各种编程语言的代码高亮(HTML &#x2F; CSS &#x2F; Javascript &#x2F; PHP &#x2F; Python &#x2F; C &#x2F; C++ &#x2F; Objective C &#x2F; Java &#x2F; JSON &#x2F; Perl &#x2F; CoffeeScript &#x2F; Go &#x2F; Sass &#x2F; YAML &#x2F; Markdown 等等)、 与大多数其他编辑器相比，Atom 的语言支持已经算是覆盖非常全面了。另外，它的代码补全功能（也叫 Snippets） 也非常好用，你只需输入几个字符即可展开成各种常用代码，可以极大提高编程效率。</p>
<p><img src="/../imgs/2024-01-08/atom-github/color.jpg" alt="Atom"></p>
<p>另外，Atom 同样支持 SublimeText 的几个重要的功能，譬如 Goto Anything、Goto Symbol、Goto Line、命令面板等等，就连快捷键也是一模一样的！相信 ST 的用户将会比较轻松地过渡到 Atom 去。实际上，从功能上来看，目前的 Atom 编辑器基本就是 Sublime 的一个复刻版，只是技术实现方式不同，插件的技术也有所差异。</p>
<h2 id="和-GIT-完美结合工作"><a href="#和-GIT-完美结合工作" class="headerlink" title="和 GIT 完美结合工作"></a>和 GIT 完美结合工作</h2><p>Atom 编辑器可以和 GIT 完美结合，所有对代码、文本的修改都能体现在编辑器的界面上。比如在文件内新写的代码会在左边标记为绿色，删除的标记为红色，修改的标记为黄色。在左边的目录导航也能方便的看到文件改动：有改动的文件其文件名和所在文件夹名都会被标记为高亮显示。编辑器底部会显示当前所在分支和对文件的修改行数统计，对于 GIT 用户来说非常方便。</p>
<h2 id="基于-WEB-技术构建"><a href="#基于-WEB-技术构建" class="headerlink" title="基于 WEB 技术构建"></a>基于 WEB 技术构建</h2><p>和之前介绍过的微软 Visual Studio Code 编辑器一样，Atom 也是基于 WEB 技术（Chromium+Node.js）开发的，简单理解的话编辑器本身其实是一个跑在本地的网页，这足以让无数 WEB 工程师为之兴奋！用户可以用 Javascript 来编写编辑器插件，用 CSS 把主题界面改成任何你喜欢的样式等，这使得编写插件、主题、二次开发的门槛的降低了许多。这也能解释从 Atom 发布到现在不长的时间里，Atom 的 Package 和主题数量都快速增长上来了。</p>
<p>不过，也正因为它基于 WEB 技术构建的，目前处于初步阶段的 Atom 在性能上与传统的编辑器还有点差距，在打开大文件时尤为明显，而在一些机器上也容易出现 CPU 占用率过高等问题，这一点确实有待改进，而且还是需要大幅改进。</p>
<h2 id="Atom-编辑器到底怎么样？"><a href="#Atom-编辑器到底怎么样？" class="headerlink" title="Atom 编辑器到底怎么样？"></a>Atom 编辑器到底怎么样？</h2><p>那么，很多人关心的是，Atom 与主流的编辑器对比会怎么样？其实，在我看来， Atom 目前还不太适合用做主力编辑器，虽然它的功能与 SublimeText 较为接近，但现在的它和 Sublime 相比还是稚嫩了一点，毕竟现在 Sublime 已经非常成熟了，后者有很全面的内置功能，也有非常丰富的插件包和活跃的社区，而 Atom 则还需给予时间让其发展。</p>
<p>不过由于 Atom 是由 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tLw==">Github<i class="fa fa-external-link-alt"></i></span> 维护的，它拥有非常强大的后台。并且那里有着大量极为优秀的编程爱好者，也是极客们的聚集地，相信在不久的将来 Atom 一定也会拥有不少新的插件包，而性能方面的缺点迟早也会被解决掉。</p>
<p>对于喜欢追求新鲜技术的极客和程序员们，Atom 肯定将会是你的一个不错的新玩物，毕竟它是开源社区的产物，并且也代表着 WEB 技术进入桌面程序开发的新方向。纵使目前它还有不少的进步的空间，但一旦它解决了性能问题、建立了丰富强大的插件库，开源且跨平台的 Atom 编辑器将会成为业界新宠。</p>
<h2 id="相关文件下载地址："><a href="#相关文件下载地址：" class="headerlink" title="相关文件下载地址："></a>相关文件下载地址：</h2><blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9hdG9tLmlvLw==">官方网站<i class="fa fa-external-link-alt"></i></span> &gt;<span class="exturl" data-url="aHR0cDovL3Bhbi5iYWlkdS5jb20vcy8xbzZOQjQ4YQ==">Atom 编辑器快捷键列表<i class="fa fa-external-link-alt"></i></span> &gt;<span class="exturl" data-url="aHR0cDovL3Bhbi5iYWlkdS5jb20vcy8xYzBtY2x2cQ==">下载 Atom 编辑器 (Win)<i class="fa fa-external-link-alt"></i></span> &gt;<span class="exturl" data-url="aHR0cDovL3Bhbi5iYWlkdS5jb20vcy8xYm5seXFvMw==">下载 Atom 编辑器 (Mac)<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>编辑器</tag>
      </tags>
  </entry>
  <entry>
    <title>Beyond Compare</title>
    <url>/posts/beyond-compare.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-08/beyond-compare/intro.jpg" alt="Beyond Compare 中文版 - 专业的文件比较软件"></p>
<p>我们常常会遇到一些文件需要进行比较，特别是一些代码、文本、网页或者是文件夹之间，我们非常需要一款工具可以清晰地分析出它们之间的全部差异，便于对其进行修改或参考。</p>
<span id="more"></span>

<p><strong>Beyond Compare</strong> 是一款经典老牌且优秀的专业级文件比较软件，我们常常会在一些开发高手和前辈的推荐中听到它的大名。使用它可以很方便地对比出两个文件夹或文件(如代码&#x2F;网页&#x2F;文本文件等)之间的不同之处，它会把有差异的每一个行或每一个字均用颜色标注出来，你不仅可以直观地查看、定位全部差异点，还能非常方便地修改它们……</p>
<h2 id="高效的文件对比工具"><a href="#高效的文件对比工具" class="headerlink" title="高效的文件对比工具"></a>高效的文件对比工具</h2><p>Beyond Compare 官方提供了简体中文版，可以支持普通文本、代码、十六进制文件、注册表、mp3、图片、版本信息、文件夹、压缩包、整个驱动器、FTP网站等进行比较分析。对于开发者，你可以用它来对比两份代码的变化；对于文字工作者，可以用它来找出文本哪里被修改过；对于大多数用户，你还能用它来对比文件夹之间的差异，你可以对文件合并、登记快照、或者与FTP服务器进行同步。</p>
<p><img src="/../imgs/2024-01-08/beyond-compare/main.jpg" alt="Beyond Compare 文件差异对比"></p>
<p><img src="/../imgs/2024-01-08/beyond-compare/file.jpg" alt="Beyond Compare 文件夹比较"></p>
<h2 id="不可多得的工具"><a href="#不可多得的工具" class="headerlink" title="不可多得的工具"></a>不可多得的工具</h2><p>话说，曾几何时，在学习和分析别人写的网页代码时，想要搞清楚他们在新的版本中到底改动过什么地方，常常只靠眼力和意志去找「不同」，一堆代码看下来经常就几个小时，让我头脑发胀手脚发麻～ 而用了 Beyond Compare 几乎就是几分钟搞定，轻松、高效完成工作～ 用了之后腰不酸、腿不痛，走起路来都…… 呃…… Cut！</p>
<h2 id="相关文件下载地址："><a href="#相关文件下载地址：" class="headerlink" title="相关文件下载地址："></a>相关文件下载地址：</h2><blockquote>
<p><span class="exturl" data-url="aHR0cDovL3d3dy5zY29vdGVyc29mdHdhcmUuY29tLw==">官方网站<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cDovL3Bhbi5iYWlkdS5jb20vcy8xakkwYWJMOA==">下载 Beyond Compare<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>文件比较</tag>
      </tags>
  </entry>
  <entry>
    <title>Google Chrome</title>
    <url>/posts/chrome.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-08/chrome/intro.jpg" alt="Google Chrome - 简约、稳定、扩展丰富的浏览器"></p>
<p><strong>谷歌浏览器 (Google Chrome)</strong> 是由谷歌推出的一款极为优秀的免费网页浏览器，它的设计非常简洁高雅，使用稳定，而且它的性能极之强悍，在各种速度性能测试中的表现均极度抢眼，用户在日常使用中也能轻易感受到速度带来的畅快体验！</p>
<span id="more"></span>

<p><img src="/../imgs/2024-01-08/chrome/main.jpg" alt="谷歌浏览器 (Google Chrome)"></p>
<p>谷歌 Chrome 浏览器支持多标签页，支持安装各种扩展，支持主题背景，支持扩展&#x2F;设置&#x2F;书签的网络自动同步，提供手机版；而且多进程、安全沙盒、防诱骗、隐身模式等特性也让其如虎添翼。Chrome 就是简洁、安全、稳定且高速的代名词，再加上极其丰富的扩展插件，使得它推出后便成为全球网友最受欢迎的浏览器之一！作为新一代互联网的用户，你怎么可能错过它呢……</p>
<h2 id="Chrome-浏览速度更快"><a href="#Chrome-浏览速度更快" class="headerlink" title="Chrome 浏览速度更快"></a>Chrome 浏览速度更快</h2><p><img src="/../imgs/2024-01-08/chrome/sudu.jpg" alt="Chrome浏览速度更快"></p>
<p><strong>即搜即得</strong> - 搜索和导航操作可通过同一个框进行。搜索结果和相关建议（其中包括您最近搜索过的内容和访问过的网站）会在您输入内容的同时出现，供您自由选择，因此您可以快速获取所需的内容。</p>
<p><strong>减少输入操作</strong> - 已经厌倦了反复填写信息相同的网络表单？使用自动填充功能，您只需点按一下，即可完成表单填写。该功能同样可跨设备使用，有助于省却在小屏幕上输入内容的麻烦。</p>
<h2 id="从上次停下的地方继续"><a href="#从上次停下的地方继续" class="headerlink" title="从上次停下的地方继续"></a>从上次停下的地方继续</h2><p>Chrome可将您在计算机上打开的标签页、保存的书签和最近搜索过的内容同步到手机或平板电脑上，反之亦然。这意味着您可将自己在Chrome中的内容和设置同步到所有的设备上。您只需在其他设备上登录自己的帐户，然后即可开始同步。</p>
<p><img src="/../imgs/2024-01-08/chrome/mobile.jpg" alt="Chrome 从上次停下的地方继续"></p>
<h2 id="定制自己专属的Chrome"><a href="#定制自己专属的Chrome" class="headerlink" title="定制自己专属的Chrome"></a>定制自己专属的Chrome</h2><p>借助Chrome主题背景、应用和扩展程序，您能够以自己喜欢的方式浏览网页。此外，您还可以将自己喜欢的网页设为书签和启动时的加载页，从而直接进入这些页面。在您完成Chrome的设置后，您的自定义设置将在您的所有设备间保持同步。</p>
<p><img src="/../imgs/2024-01-08/chrome/dingzhi.jpg" alt="定制自己专属的Chrome"></p>
<h2 id="Chrome-的特性"><a href="#Chrome-的特性" class="headerlink" title="Chrome 的特性"></a>Chrome 的特性</h2><ul>
<li><strong>高速：</strong>启动快，打开网页快，浏览快；直接从地址栏进行搜索。Chrome 浏览器追求的是全方位的高速体验，它可以快速地从桌面上启动，并能迅速加载网页，而在运行复杂的网络应用时更是迅雷不及掩耳。它使用最先进的 WebKit 内核，并且拥有性能最强的 V8 Javascript 引擎！完美支持最新的 HTML5 标准，即便运行超级复杂的网页游戏都能非常流畅。譬如宝石迷阵、水果忍者、割绳子，甚至像雷神之锤那样的3D游戏都可以！</li>
<li><strong>简约：</strong>Chrome 浏览器的窗口采用了清爽简洁的流线型设计。例如，您可以通过同一个框执行搜索和导航操作，还可以轻松快捷地随意排列标签页。此外，你还可以自定义选择你喜欢的主题背景。</li>
<li><strong>安全：</strong>独特的沙盒和自动更新技术，防御网上诱骗和恶意软件的攻击。Chrome 浏览器提供了最佳的安全上网体验：内置的恶意软件和网上诱骗防护功能、自动更新（可确保您获得所有最新的安全修补程序）等。</li>
<li><strong>隐私设置：</strong>Chrome 浏览器的目的不仅在于提高速度，还要在帮助保护您的在线共享信息的同时，让您掌控自己的隐私信息。谷歌浏览器提供了“隐身模式”，可以让浏览器记录你访问过的网站和下载内容，并且创建的全部 Cookie 都会在您关闭后自动删除。</li>
<li><strong>个性化：</strong>您可以通过各种各样的方法来自定义属于你自己的 Chrome，从而享受独一无二的体验。无论是更改设置，还是从 Chrome 网上应用店添加应用、扩展程序和主题背景都轻而易举。</li>
<li>几<strong>万种应用插件，游戏和主题：</strong>Chrome 拥有一个非常丰富的网上应用商店，无论是办公、娱乐还是日常生活，各种扩展应有尽有，你能将 Chrome 打造成一个超级全能的强大工具，而且基本上绝大部分扩展都是完全免费的。</li>
<li><strong>同步：</strong>使用谷歌账号登录 Chrome 后可让您在自己的所有上网设备上使用相同的书签、历史记录以及其他设置。你的扩展、设置均会自动在不同的电脑上同步，这样还可以让您自动登录所有其他的 Google 服务，例如Gmail、Reader等等。</li>
</ul>
<h2 id="Chrome使用截图"><a href="#Chrome使用截图" class="headerlink" title="Chrome使用截图"></a>Chrome使用截图</h2><p><img src="/../imgs/2024-01-08/chrome/chrome.jpg" alt="Chrome浏览器在 Windows 10 下使用的截图"></p>
<h2 id="相关文件下载地址："><a href="#相关文件下载地址：" class="headerlink" title="相关文件下载地址："></a>相关文件下载地址：</h2><blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9jaHJvbWUvYnJvd3Nlci9kZXNrdG9wL2luZGV4Lmh0bWw=">官方网站<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cDovL3Bhbi5iYWlkdS5jb20vcy8xcVlNT3ZqbQ==">Google Chrome 下载<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>Chrome</tag>
      </tags>
  </entry>
  <entry>
    <title>Dreamweaver CC 2015</title>
    <url>/posts/dreamweaver-2015.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-08/dreamweaver-2015/intro.jpg" alt="Adobe Dreamweaver CC 2015 - 集所有功能于一身的网页制作工具"></p>
<p>Adobe Dreamweaver CC 2015 中文版是一款可视化的网页制作编辑软件，针对网络及移动平台进行设计、开发并发布，而不需要为程式代码烦恼。Dreamweaver 提供直觉式的视觉效果界面，可用于建立及编辑网站，并提供与最新的网络标准相容性，同时对 HTML5&#x2F;CSS3 和 jQuery 提供顶级的支持。</p>
<span id="more"></span>

<p><img src="/../imgs/2024-01-08/dreamweaver-2015/main.jpg" alt="Adobe Dreamweaver CC 2015 启动界面"></p>
<h2 id="关于Dreamweaver-CC-2015"><a href="#关于Dreamweaver-CC-2015" class="headerlink" title="关于Dreamweaver CC 2015"></a>关于Dreamweaver CC 2015</h2><p>Adobe Dreamweaver CC 最大的更新莫过于 Edge Web Fonts 和 Edge Animate 整合，支持 CSS3 和拖曳 jQuery UI Widget。</p>
<p>Adobe Dreamweaver CC 2015 以更快的速度开发更多网页内容。使用简化的用户接口、连接的工具以及新增的可视化 CSS 编辑工具，您可透过直觉方式更有效地编写程序代码。现在，Dreamweaver CC 更可让您直接从应用程序内共享作品，而且只要一有新功能，您就可以加以运用，有助您随时掌握 Web 标准。完整的创意挥洒空间，一个应用程序就满足您的所有需求。</p>
<p><img src="/../imgs/2024-01-08/dreamweaver-2015/file.jpg" alt="Adobe Dreamweaver CC 2015 新建文件页面"></p>
<p><img src="/../imgs/2024-01-08/dreamweaver-2015/web.jpg" alt=" Adobe Dreamweaver CC 2015 Bootstrap模板页面"></p>
<h2 id="新增功能"><a href="#新增功能" class="headerlink" title="新增功能"></a>新增功能</h2><p>Dreamweaver CC 带来的新功能和其他增强功能，这些功能包括网页元素快速检查、实时检查中的新编辑功能、CSS 设计工具增强功能、实时插入、使用身份文件支持 SFTP 连线、还原&#x2F;重做增强功能、Business Catalyst 和 PhoneGap Build 工作流程的变化、存取 Dreamweaver 扩展功能的变化、同步设置、直接从 Dreamweaver 发送错误&#x2F;功能要求、帮助中心(Help Center)、帮助菜单变化等等。</p>
<ul>
<li><p>找到完美的照片:寻找你的网站在市场上的完美图像。探索一个不断扩大的照片和插图的图书馆和下载他们直接从创意云到您的项目</p>
</li>
<li><p>创建响应网站:构建动态调整以适应多个屏幕大小与内置的引导整合的网站。盘活现有站点，从零开始，使用模板，或者将引导组件包含。预览你的设计在实时缩放视图在 Dreamweaver 中生活。在视觉上设置媒体查询。</p>
</li>
<li><p>从 PSD 批量输出:通过快速从多分辨率和格式 Adobe PS 图象处理软件文件中提取优化的图片保存时间，<span class="exturl" data-url="aHR0cHM6Ly9oZWxweC5hZG9iZS5jb20vZHJlYW13ZWF2ZXIvaG93LXRvL2JhdGNoLWV4dHJhY3QtYXNzZXRzLmh0bWw=">了解更多<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li><p>更快的代码:新的代码编辑器的主题，有掉毛和自动完成与埃米特支持实时验证码在 Dreamweaver 编写代码比以往更快、更容易。</p>
</li>
<li><p>任何设备预览:同时测试和检查多个设备上的网站。只要输入一个简短的网址到您的移动设备的浏览器预览您的网站</p>
</li>
<li><p>等等更多：还包括：轻松导航和编辑 HTML 页面元素的一个新的 DOM 面板；在代码视图中实时颜色和图像预览；新的响应代码片段使发展更快；自动推动态文件当您保存</p>
</li>
</ul>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>Adobe</tag>
      </tags>
  </entry>
  <entry>
    <title>Clover</title>
    <url>/posts/clover.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-08/clover/intro.jpg" alt="Clover - 让你的资源管理器拥用标签页功能"></p>
<p>相信大家都比较习惯使用各种浏览器的 “多标签页” 式的浏览了方式了吧，在同时打开多个网页时，使用标签页切换比传统的 Windows 多个窗口切换要方便许多，然而你有没想过，其实，Windows资源管理器也能这么干？！</p>
<span id="more"></span>

<p><strong>Clover</strong> 是 ejie 团队开发的一款免费实用的增强小软件，它能为你的 Windows Explorer 资源管理器（或者通俗点说是“我的电脑”）增加多标签页的功能，就像谷歌 Chrome 浏览器那样方便好用；在同时查看&#x2F;操作多个不同路径的文件夹时尤为方便，让窗口更少更整洁，而且它支持快捷键与标签页的拖入拖出，熟悉使用之后绝对能大大提高电脑操作的效率……</p>
<h2 id="Clover-的介绍"><a href="#Clover-的介绍" class="headerlink" title="Clover 的介绍"></a>Clover 的介绍</h2><p>Clover 已经完美支持 Windows 8、Win7 以及XP(小编正在 Windows 10 上面使用 Clover)，它实现了类似 Chrome 浏览器的Tab多标签页的特性，强大的拖入拖出、窗口分组功能，配以极低的内存占用，为您的系统资源管理器增色不少。</p>
<p><img src="/../imgs/2024-01-08/clover/main.jpg" alt="Clover效果图"></p>
<p>Clover 通过 BHO 插件的形式，集成到 Windows Explorer，保留您通常的使用习惯，无需学习新的软件操作，马上就可以使用啦，Clover 更适合一般的懒人用户。</p>
<h2 id="Clover-的快捷键"><a href="#Clover-的快捷键" class="headerlink" title="Clover 的快捷键"></a>Clover 的快捷键</h2><p>Clover 的快捷键和 Google浏览器 的快捷键一样，你只需记住，Ctrl+T新开页面，Ctrl+W关闭页面，Ctrl+Tab切换下一个标签，Ctrl+Shift+Tab切换上一个标签，让你的电脑操作效率提高何止一倍！而且这三个快捷键还是在绝大多数支持标签页的浏览器&#x2F;软件中都通用的，记得它们木有损失啊亲～</p>
<h2 id="Clover-的使用体验"><a href="#Clover-的使用体验" class="headerlink" title="Clover 的使用体验"></a>Clover 的使用体验</h2><p>Clover 支持标签页的拖入拖出、窗口分组功能，习惯使用Chrome浏览器这个功能的用户估计肉牛满面了吧，Clover 感觉目前还只是处于雏形期，自定义设置、撤销关闭标签页、标签页记忆保存等等都还没有，不过，或许这个软件并不需要过多的功能，越是简单倒是也可能吸引到不少人呢。</p>
<p><img src="/../imgs/2024-01-08/clover/picture.jpg" alt="Clover 拖出来"></p>
<p>另外，根据一些使用过的朋友反馈，在部分电脑可能出现新建标签页时有卡顿感，这样的话大家或许可以试试用 Win+E 快捷键代替 Ctrl+T 新建标签页，这样可能就没有卡顿现象了。不过，有时最大化的时候还会出现画面滞留的现象等，还不算十分完善。但总体来说，这个小工具很是不错，免费、小巧且的确能更方便使用电脑，如果它能再持续改进一下，优化性能、完善各种细节，增加一些标签页必备的功能，那么它就很完美了。</p>
<h2 id="Clover-更新的一些功能"><a href="#Clover-更新的一些功能" class="headerlink" title="Clover 更新的一些功能"></a>Clover 更新的一些功能</h2><ul>
<li>增加皮肤设置功能</li>
<li>鼠标中键点击文件夹打开新标签页</li>
<li>增加书签的导入、导出功能</li>
<li>修正拖动文件会获得焦点的bug</li>
<li>书签栏中键默认置前</li>
<li>jumplist优化处理</li>
<li>控制面板无法修改用户头像的bug</li>
<li>首次启动，单击变双击的bug（会造成自动关闭、自动最大化）</li>
<li>标题栏和书签栏对文件夹路径的缩短处理会丢掉扩展名的bug</li>
<li>在没有打开clover的情况下在Chrome-下载内容-点&quot;在文件夹显示&quot;，未正确定位的bug</li>
<li>xp修改工具栏项目后白屏</li>
</ul>
<h2 id="Clover-下载"><a href="#Clover-下载" class="headerlink" title="Clover 下载"></a>Clover 下载</h2><blockquote>
<p><span class="exturl" data-url="aHR0cDovL2NuLmVqaWUubWUv">官方网站<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cDovL3Bhbi5iYWlkdS5jb20vcy8xZ2VEd0p1Rg==">Clover 下载<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>FastStone Capturecn中文版</title>
    <url>/posts/faststone-capturecn.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-08/faststone-capturecn/intro.jpg" alt="小巧的截屏取色软件FastStone Capturecn中文版"></p>
<h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><p>相信很多从事平面设计的朋友在平时的工作中都会经常用到QQ软件带的截图的功能，但是QQ截图的功能还是太单一化了，有很多截图方式都不能实现，而今天给大家介绍的这款<strong>FastStone Capturecn</strong>却要强大的多，QQ截图和它比起来就确是小巫见大巫了。</p>
<span id="more"></span>

<p><strong>FastStone Capturecn</strong>是一款轻量级的多功能截图软件，在截图方面有着非常强大的功能，它除了常规截图外，同时还支持<strong>多边形截图</strong>和<strong>滚动屏幕截图</strong>，滚动截图功能快速的帮你截取整个网页，对网页设计师来说是非常强大而且还好用的功能了，这也是<strong>FastStone Capturecn</strong>截图软件被广大用户所喜欢的重要原因之一；另外，它还可以把你截取的图片直接进行发送到Word,Excel,PowerPoint,FTP,电子邮件等等。</p>
<p><strong>FastStone Capturecn</strong>在截图之后会直接生成预览图像，方便你快速浏览图像是否截好，你还可以非常快速的放大，缩小，旋转裁切，等很很自由的方式去浏览和编辑你的图片。</p>
<h2 id="其他功能"><a href="#其他功能" class="headerlink" title="其他功能"></a>其他功能</h2><p><strong>FastStone Capturecn</strong>除了有强大的截图功能之外，还提供里非常实用其他功能：</p>
<ul>
<li>屏幕录制功能（支持全屏录制和窗口录制）</li>
<li>放大镜功能（能快速的放大屏幕的某一块地方）</li>
<li>屏幕取色功能（能快速提取出屏幕上任何一处的颜色值）</li>
<li>屏幕标尺功能（能直接在电脑屏幕上测量窗口的大小）</li>
<li>从扫描器获取图像</li>
<li>转换图像为PDF文件</li>
</ul>
<p>对于网页设计师和前端工程师来说，<strong>FastStone Capturecn</strong>是一个非常得力的软件小助手，能大大提高他们的工作效率，没有用过的朋友，可以下载下来体验一把，相信你绝对会爱上它的。</p>
<h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><blockquote>
<p>百度网盘：<span class="exturl" data-url="aHR0cDovL3Bhbi5iYWlkdS5jb20vcy8xYm45YldBRg==">http://pan.baidu.com/s/1bn9bWAF<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p><img src="/../imgs/2024-01-08/faststone-capturecn/main.jpg" alt="faststone capturecn"></p>
<p><img src="/../imgs/2024-01-08/faststone-capturecn/about.jpg" alt="faststone capturecn"></p>
<p><img src="/../imgs/2024-01-08/faststone-capturecn/list.jpg" alt="faststone capturecn"></p>
<p><img src="/../imgs/2024-01-08/faststone-capturecn/setting.jpg" alt="faststone capturecn"></p>
<p><img src="/../imgs/2024-01-08/faststone-capturecn/video.jpg" alt="faststone capturecn"></p>
<p><img src="/../imgs/2024-01-08/faststone-capturecn/key.jpg" alt="faststone capturecn"></p>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>截图</tag>
      </tags>
  </entry>
  <entry>
    <title>Everything</title>
    <url>/posts/everything.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-05/everything/intro.jpg" alt="Everything 免费文件极速搜索工具神器"></p>
<p>每个人的电脑都保存着大量的软件、MP3、照片、游戏、文档、电子书等文件,如果没有很好的使用习惯和管理方法，时间一长东西就容易乱起来了，可能你将需要花大半天的时间才找到一个文档，急用时可谓相当尴尬呢。然而，Windows自带的搜索功能实在是太慢了，我们需要更快的工具来提高工作效率！</p>
<span id="more"></span>

<p><strong>Everthing</strong> 正是当之无愧的最强文件搜索神器！！它可以在闪电般的瞬间从海量的硬盘中找到你需要的文件！速度快到绝对让你难以置信！首次接触到 Everything 可真让我惊讶和兴奋了许久！！而且它还是一款完全免费的软件，界面简洁高效，体积很小巧，但功能却非常丰富！Everything 文件搜索工具最大的优点是近乎变态的速度。其速度不是快，是快到离谱；用户不是满意，而是震惊。你甚至会愤怒，它凭什么这么快？！</p>
<h2 id="文件搜索"><a href="#文件搜索" class="headerlink" title="文件搜索"></a>文件搜索</h2><p><img src="/../imgs/2024-01-05/everything/main.jpg" alt="Everything"></p>
<h2 id="强大的搜索功能"><a href="#强大的搜索功能" class="headerlink" title="强大的搜索功能"></a>强大的搜索功能</h2><p>你只要在 Everything 的搜索框中输入你想要找的文件名，你会发现在你输入的短短的瞬间，你还没来得及按回车键，搜索结果已经呈现在你的面前了！！<strong>Everything</strong> 完美支持中文搜索，对于技术比较牛皮的人，还可以使用强悍的正则表达式来搜索特定的文件呢。具体的教程，可以看官方网站的 <span class="exturl" data-url="aHR0cDovL3d3dy52b2lkdG9vbHMuY29tL2ZhcS8jSG93X2RvX0lfdXNlX3JlZ2V4">Everything如何使用正则表达式<i class="fa fa-external-link-alt"></i></span> FAQ部分。</p>
<h2 id="文件下载地址"><a href="#文件下载地址" class="headerlink" title="文件下载地址"></a>文件下载地址</h2><blockquote>
<p><span class="exturl" data-url="aHR0cDovL3d3dy52b2lkdG9vbHMuY29tLw==">官方网站<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cDovL3Bhbi5iYWlkdS5jb20vcy8xZVJWSHI1Qw==">下载 Everything<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>GeekUninstaller</title>
    <url>/posts/geekuninstaller.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-08/geekuninstaller/intro.jpg" alt="GeekUninstaller - 绿色软件彻底卸载工具"></p>
<p>经常试用各种软件的朋友都需要一款好用的卸载工具，然而，今天我们介绍的则是另外一款很有特色的卸载软件：<strong>GeekUninstaller</strong>！</p>
<span id="more"></span>

<p><strong>GeekUninstaller</strong> 是一款很有特色的单文件绿色卸载工具！它非常小巧灵敏，完全免费，支持多国语言，原生支持32位与64位系统，并且它只有一个exe文件(体积不到2M)，非常绿色，你不需要安装即可直接卸载软件、强制彻底清除软件残留垃圾文件或是查看某软件的注册表项目等等，轻松还你一个干净高效的系统……</p>
<h2 id="软件主界面"><a href="#软件主界面" class="headerlink" title="软件主界面"></a>软件主界面</h2><p><img src="/../imgs/2024-01-08/geekuninstaller/main.jpg" alt="GeekUninstaller"></p>
<p>GeekUninstaller 支持 Windows7&#x2F;8，最新的 Windows10 也没问题。它的界面非常简单，就一个已安装软件的列表，右键点击软件，即可进行相应的操作，如卸载、强制卸载、删除条目、注册条目、安装文件夹、程序网站和通过谷歌搜索软件相关信息，基本上也不需要我过多的描述了。</p>
<p>GeekUninstaller 这种单文件绿色的精品小软很适合收藏起来备用，可以放在 Dropbox、Skydrive、金山快盘 等网盘中同步，说不定哪天就能用上了。</p>
<h2 id="相关文件下载地址"><a href="#相关文件下载地址" class="headerlink" title="相关文件下载地址"></a>相关文件下载地址</h2><blockquote>
<p><span class="exturl" data-url="aHR0cDovL3d3dy5nZWVrdW5pbnN0YWxsZXIuY29tLw==">官方网站<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cDovL3Bhbi5iYWlkdS5jb20vcy8xbnZxMXY4dA==">下载 GeekUninstaller<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>GifCam-GIF动画录制</title>
    <url>/posts/gifcam.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-08/gifcam/intro.jpg" alt="GifCam-简单好用的 GIF 动画录制器"></p>
<p>平时我们在刷<span class="exturl" data-url="aHR0cDovL3dlaWJvLmNvbS81MTI3ODk0ODc=">微博<i class="fa fa-external-link-alt"></i></span>或论坛的时候，经常会看到一些人的头像和签名是 GIF 动画图片非常搞笑有趣，那这些动态的图片到底是怎么制作的呢？其实当你有了 <strong>GifCam</strong> 软件之后，你也能非常轻松的制作出来。</p>
<span id="more"></span>

<p>GifCam (Gif相机) 是一款免费且非常优秀的视频录制&#x2F;剪辑的GIF动画制作软件，它的使用非常简单直观，譬如想要将某一小段视频录制成Gif图片，你只需将其窗口的“取景框”拖放到视频播放的区域，然后按下录制按钮即开始录制。它就像一个摄像机一样能将“取景框”拍摄下来并保存成GIF图。借助GifCam你可以快速方便地制作演示教程或者将视频一些搞笑经典片段制作成动画图片……</p>
<h3 id="录制-GIF-动画图片"><a href="#录制-GIF-动画图片" class="headerlink" title="录制 GIF 动画图片"></a>录制 GIF 动画图片</h3><p>GifCam 完全免费且是绿色软件，体积仅几百KB，完美支持 Windows 8。它可以让你像摄像机一样方便地将屏幕上的一切录制成GIF动态图片，并且可以对其进行剪辑（逐帧编辑），你可以设置是否隐藏光标、添加文字和文字特效等。</p>
<p><img src="/../imgs/2024-01-08/gifcam/main.gif" alt="gifcam 录制演示"></p>
<h3 id="GifCam-的特性"><a href="#GifCam-的特性" class="headerlink" title="GifCam 的特性"></a>GifCam 的特性</h3><ul>
<li>在录制的过程中，你可以随意的改变窗口大小、位置。不过在改变过程中软件是会暂停录制的，待你释放窗口后才会继续。</li>
<li>如果录制范围内内容无变化，则不增加新帧而只是增加延时，这样可以有效减小文件尺寸</li>
<li>录制停止后，可再次按下 “录制” 继续录制</li>
<li>按下 “单帧” 可以录制单帧：如内容有变化，则形成新的帧；如果无变化，则该帧增加0.1秒延时</li>
<li>编辑状态下可查看每一帧，可以删除帧、增加减少当前帧延时</li>
<li>保存GIF图片时，你可以根据需要设置不同的色深和帧率(FPS)</li>
<li>可以全屏录制，可增加文字，可显示&#x2F;隐藏鼠标指针</li>
</ul>
<h3 id="GifCam下载"><a href="#GifCam下载" class="headerlink" title="GifCam下载"></a>GifCam下载</h3><blockquote>
<p>GifCam下载地址：<span class="exturl" data-url="aHR0cDovL3Bhbi5iYWlkdS5jb20vcy8xcVdCdERJOA==">http://pan.baidu.com/s/1qWBtDI8<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p><img src="/../imgs/2024-01-08/gifcam/about.jpg" alt="关于GifCam "></p>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>截图</tag>
      </tags>
  </entry>
  <entry>
    <title>GitHub Desktop</title>
    <url>/posts/undefined.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-08/github-desktop/intro.jpg" alt="GitHub Desktop 官方桌面客户端工具"></p>
<p>如果你是一名程序员，那么一定会听过或用过现在最流行的版本控制工具 GIT！而 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tLw==">GitHub.com<i class="fa fa-external-link-alt"></i></span> 则是目前全球最热门的公共代码仓库网站，多到数不清的知名开源项目源代码都是托管在它上面。</p>
<span id="more"></span>

<p>用户可在 GitHub 上为项目建立公开的代码库，也能付费建立私有的库。托管后你不仅可以使用任何 Git 本身提供的<strong>版本控制</strong>功能，还可以与其他用户(同事&#x2F;朋友或是网上任意对项目有兴趣的人) 进行协同开发，可以跟踪项目动态、对别人的源代码做出贡献，或对改动提出意见评论等……</p>
<h2 id="免费的-Github-官方桌面客户端"><a href="#免费的-Github-官方桌面客户端" class="headerlink" title="免费的 Github 官方桌面客户端"></a>免费的 Github 官方桌面客户端</h2><p>托管在 GitHub 上面的项目可以通过传统的 Git 命令行方式进行访问和操作 (后面有教程)，而对于习惯了使用 GUI 窗口界面软件的用户，如今 GitHub 也已经为 Mac 和 Windows 平台发布了界面统一的全新的 <strong>GitHub Desktop</strong> 官方桌面客户端，用于代替之前的旧版客户端。</p>
<p><img src="/../imgs/2024-01-08/github-desktop/code.jpg" alt="GitHub 客户端"></p>
<p>GitHub Desktop 完全免费，如果你的电脑上已经安装过旧版的客户端，那么它们将会自动更新到 GitHub Desktop。新版的 GitHub 客户端能够与 GitHub Enterprise 一同使用。新版的亮点有很多（比如协作工具），会在侧栏列出所有工作中的项目（便于用户克隆、新建），会显示出直观的时间线 (可直观了解当前项目的分支、Commit 情况等)</p>
<p><img src="/../imgs/2024-01-08/github-desktop/main.jpg" alt="Github desktop 客户端"></p>
<p>此外，用户也可以在库视图（Repository View）中查看、切换和创建分支，以可视化图形的形式查看历史变化概要，以及提交、合并或部署代码。</p>
<p><img src="/../imgs/2024-01-08/github-desktop/view.jpg" alt="GitHub Desktop"></p>
<p>由于新版的 GitHub Desktop 在 Mac 和 Windows 上的界面统一起来了，经常要在两个不同平台切换使用的朋友应该会更加顺手了。当然，GitHub 可以允许你在 GitHub.com 网页版上实现所有的功能，你也可以使用一些第三方的 Git 客户端 (如 SourceTree、Tower 等) 或是 Git 命令行来完成工作，这个就得看大家自己的工作习惯了。</p>
<h2 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h2><p>作为官方客户端，GitHub Desktop 完全免费而且界面和功能非常简洁！没有繁杂的选项，也没有花哨的功能，一切都是为了更加易用高效。图形化的软件比命令行也更适合 Git 新手们上手和学习，值得推荐使用。</p>
<p>最后，不得不说的是，GIT 真 TM 是一个伟大的发明！它对于程序开发的方便和强大之处远超你想象，所以如果你还没试过使用 Git 对代码进行版本控制，那么快参考下下面的这些图文和视频教程早早入坑吧！到时候你一定会惊叹——“我嘞个叉！怎么不早点学 GIT 这个神器呢……”</p>
<ul>
<li><span class="exturl" data-url="aHR0cDovL3d3dy5saWFveHVlZmVuZy5jb20vd2lraS8wMDEzNzM5NTE2MzA1OTI5NjA2ZGQxODM2MTI0ODU3OGM2N2I4MDY3YzhjMDE3YjAwMA==">史上最浅显易懂的 Git 入门教程 - by 廖雪峰<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h2 id="相关下载"><a href="#相关下载" class="headerlink" title="相关下载"></a>相关下载</h2><blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9kZXNrdG9wLmdpdGh1Yi5jb20v">官方网站<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWItd2luZG93cy5zMy5hbWF6b25hd3MuY29tL0dpdEh1YlNldHVwLmV4ZQ==">下载 GitHub Desktop (Win)<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客搭建</title>
    <url>/posts/hexo-blog.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-08/hexo-blog/intro.jpg" alt="Hexo - 让写博客变的更简单"></p>
<p>一直纠结于在哪里写博客，曾用过新浪博客，百度空间，JavaEye，LOFTER，OSChina，cnblogs，CSDN，自搭WordPress，都不满意；再后来也弄过Jekyll和Octopress，觉累不爱。</p>
<span id="more"></span>

<p>直到多看了一眼 <strong>Hexo</strong>，这个逼格极高的程序猿写作方式，我喜欢；就连hexo的发音都像是黑客哦！如果你跟我一样纠结哪里写博，那就来到GitHub吧，让我们一起hexo！H人希绝对不会让你失望，相信很快hexo就会流行起来。</p>
<p>hexo出自台湾大学生<span class="exturl" data-url="aHR0cDovL3R3aXR0ZXIuY29tL3RvbW15MzUx">tommy351<i class="fa fa-external-link-alt"></i></span>之手，是一个基于Node.js的静态博客程序，其编译上百篇文字只需要几秒；hexo生成的静态网页可以直接放到GitHub Pages，BAE，SAE等平台上。</p>
<ul>
<li>如果你对默认配置满意，只需几个命令便可秒搭一个hexo。</li>
<li>如果你跟我一样喜欢折腾下，30分钟也足够个性化。</li>
<li>如果你过于喜欢折腾，可以折腾个把星期，尽情的玩。</li>
</ul>
<p>搭建过程你或许觉得有那么点小繁琐，但一旦搭建完成，写文章是极简单，极舒服的。</p>
<p>只需要几个简单命令，你就可以完成一切。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo n <span class="comment">#写文章</span></span><br><span class="line">hexo g <span class="comment">#生成</span></span><br><span class="line">hexo d <span class="comment">#部署 # 可与hexo g合并为 hexo d -g</span></span><br></pre></td></tr></table></figure>

<h2 id="运行环境部署"><a href="#运行环境部署" class="headerlink" title="运行环境部署"></a>运行环境部署</h2><h3 id="安装Node"><a href="#安装Node" class="headerlink" title="安装Node"></a>安装Node</h3><p>到<span class="exturl" data-url="aHR0cHM6Ly9ub2RlanMub3JnLw==">Node.js<i class="fa fa-external-link-alt"></i></span>官网下载相应平台的最新版本，一路安装即可。</p>
<h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><p>Git的客户端很多，我用的是<span class="exturl" data-url="aHR0cHM6Ly9naXQtZm9yLXdpbmRvd3MuZ2l0aHViLmlvLw==">Git<i class="fa fa-external-link-alt"></i></span>，当然你也可以下载绿色版本，下载下来之后设置一下环境变量即可，<code>Git_HOME</code>，<code>%Git_HOME%\bin</code>之类的，不多说。</p>
<h3 id="安装Sublime（可选）"><a href="#安装Sublime（可选）" class="headerlink" title="安装Sublime（可选）"></a>安装Sublime（可选）</h3><p><span class="exturl" data-url="aHR0cDovL3d3dy5qZWZ3YXkuY29tL3N1YmxpZW0tdGV4dC5odG1s">Sublime Text<i class="fa fa-external-link-alt"></i></span> 在这里仅仅作为一个文本编辑器使用，支持各种编程语言和文件格式，当然也支持Markdown语法，实在是个不可多得的练码奇才。</p>
<h3 id="申请-Github-账户"><a href="#申请-Github-账户" class="headerlink" title="申请 Github 账户"></a>申请 Github 账户</h3><ul>
<li>首先注册一个『GitHub』帐号，已有的默认默认请忽略</li>
<li>建立与你用户名对应的仓库，仓库名必须为『your_user_name.github.com』</li>
<li>添加SSH公钥到『Account settings -&gt; SSH Keys -&gt; Add SSH Key』</li>
</ul>
<p><img src="/../imgs/2024-01-08/hexo-blog/github.jpg" alt="我的github页面"></p>
<p>首先设置你的用户名密码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.email <span class="string">&quot;longyi1991@126.com&quot;</span></span><br><span class="line">git config --global user.name <span class="string">&quot;jef-way&quot;</span></span><br></pre></td></tr></table></figure>

<p>生成密钥：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;longyi1991@126.com&quot;</span></span><br></pre></td></tr></table></figure>

<p>上述命令若执行成功，会在用户目录下生成两个文件 id_rsa 和 id_rsa.pub，最后两步：</p>
<ol>
<li>用文本编辑器打开ssh.pub文件，拷贝其中的内容，将其添加到<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NldHRpbmdzL3NzaA==">Add SSH Key<i class="fa fa-external-link-alt"></i></span></li>
<li>将id_rsa和id_rsa.pub拷贝至你Git安装目录下的.ssh目录，如E:\Hexo.ssh</li>
</ol>
<p><img src="/../imgs/2024-01-08/hexo-blog/ssh.jpg" alt="添加SSh秘钥"></p>
<p>最后可以验证一下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>

<h2 id="开始用-Hexo-搭建博客"><a href="#开始用-Hexo-搭建博客" class="headerlink" title="开始用 Hexo 搭建博客"></a>开始用 Hexo 搭建博客</h2><h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h3><p>Node和Git都安装好后，可执行如下命令安装hexo：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo <span class="comment">#-g 参数为全局安装</span></span><br></pre></td></tr></table></figure>

<h3 id="初始化Hexo项目"><a href="#初始化Hexo项目" class="headerlink" title="初始化Hexo项目"></a>初始化Hexo项目</h3><p>然后，执行init命令初始化hexo到你指定的目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init &lt;folder&gt; <span class="comment">#初始化项目</span></span><br></pre></td></tr></table></figure>

<p><code>你也可以进入到项目文件夹，执行 hexo init</code></p>
<p>好啦，至此，全部安装工作已经完成！</p>
<h3 id="生成静态页面"><a href="#生成静态页面" class="headerlink" title="生成静态页面"></a>生成静态页面</h3><p>cd 到你的init目录，执行如下命令，生成静态页面至hexo\public\目录。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure>

<p>命令必须在init目录下执行，否则不成功，但是也不报错。</p>
<p>当你修改文章Tag或内容，不能正确重新生成内容，可以删除<code>hexo\db.json</code>后重试，还不行就到public目录删除对应的文件，重新生成。</p>
<h3 id="本地启动"><a href="#本地启动" class="headerlink" title="本地启动"></a>本地启动</h3><p>执行如下命令，启动本地服务，进行文章预览调试。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure>

<p>浏览器输入<code>http://localhost:4000</code>就可以看到效果。</p>
<p>请使用高级浏览器，否则可能…你懂的！</p>
<h3 id="开始写文章"><a href="#开始写文章" class="headerlink" title="开始写文章"></a>开始写文章</h3><p>执行<code>new</code>命令，生成指定名称的文章至<code>hexo\source\_posts\postName.md</code>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new [layout] <span class="string">&quot;postName&quot;</span> <span class="comment">#新建文章</span></span><br></pre></td></tr></table></figure>

<p>其中<code>layout</code>是可选参数，默认值为<code>post</code>;有哪些<code>layout</code>呢，请到<code>scaffolds</code>目录下查看，这些文件名称就是<code>layout</code>名称;当然你可以添加自己的<code>layout</code>，方法就是添加一个文件即可，同时你也可以编辑现有的<code>layout</code>，比如<code>post</code>的<code>layout</code>默认是<code>hexo\scaffolds\post.md</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">title: &#123; &#123; title &#125; &#125;</span><br><span class="line"><span class="built_in">date</span>: &#123; &#123; <span class="built_in">date</span> &#125; &#125;</span><br><span class="line">tags:</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p>请注意，大括号与大括号之间我多加了个空格，否则会被转义，不能正常显示。</p>
<p>我想添加<code>categories</code>，以免每次手工输入，只需要修改这个文件添加一行，如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">title: &#123; &#123; title &#125; &#125;</span><br><span class="line"><span class="built_in">date</span>: &#123; &#123; <span class="built_in">date</span> &#125; &#125;</span><br><span class="line">categories: </span><br><span class="line">tags: </span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p><code>postName</code>是md文件的名字，同时也出现在你文章的URL中，<code>postName</code>如果包含空格，必须用<code>&amp;quot;</code>将其包围，postName可以为中文。</p>
<p>注意，所有文件：后面都必须有个空格，不然会报错。</p>
<p>看一下刚才生成的文件<code>hexo\source\_posts\postName.md</code>，内容如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">title: postName <span class="comment">#文章页面上的显示名称，可以任意修改，不会出现在URL中</span></span><br><span class="line"><span class="built_in">date</span>: 2013-12-02 15:30:16 <span class="comment">#文章生成时间，一般不改，当然也可以任意修改</span></span><br><span class="line">categories: <span class="comment">#文章分类目录，可以为空，注意:后面有个空格</span></span><br><span class="line">tags: <span class="comment">#文章标签，可空，多标签请用格式[tag1,tag2,tag3]，注意:后面有个空格</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p>这里开始使用<code>markdown</code>格式输入你的正文。</p>
<p>接下来，你就可以用喜爱的编辑器尽情书写你的文章。</p>
<p><strong>fancybox</strong></p>
<p>可能有人对页面中图片的<code>fancybox</code>效果感兴趣，这个是怎么做的呢。</p>
<p>很简单，只需要在你的文章*.md文件的头上添加<code>photos</code>项即可，然后一行行添加你要展示的照片：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">layout: photo</span><br><span class="line">title: 我的阅历</span><br><span class="line"><span class="built_in">date</span>: 2085-01-16 07:33:44</span><br><span class="line">tags: [hexo]</span><br><span class="line">photos:</span><br><span class="line">- http://bruce.u.qiniudn.com/2013/11/27/reading/photos-0.jpg</span><br><span class="line">- http://bruce.u.qiniudn.com/2013/11/27/reading/photos-1.jpg</span><br></pre></td></tr></table></figure>

<p>经过测试，文件头上的layout: photo可以省略。</p>
<p>不想每次都手动添加怎么办？同样的，打开您的<code>hexo\scaffolds\photo.md</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">layout: &#123; &#123; layout &#125; &#125;</span><br><span class="line">title: &#123; &#123; title &#125; &#125;</span><br><span class="line"><span class="built_in">date</span>: &#123; &#123; <span class="built_in">date</span> &#125; &#125;</span><br><span class="line">tags: </span><br><span class="line">photos: </span><br><span class="line">- </span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p>然后每次可以执行带layout的new命令生成照片文章：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new photo <span class="string">&quot;photoPostName&quot;</span> <span class="comment">#新建照片文章</span></span><br></pre></td></tr></table></figure>

<p><strong>description</strong></p>
<p>markdown文件头中也可以添加description，以覆盖全局配置文件中的description内容，请参考下文_config.yml的介绍。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">title: hexo你的博客</span><br><span class="line"><span class="built_in">date</span>: 2015-11-22 17:11:54</span><br><span class="line">categories: default</span><br><span class="line">tags: [hexo]</span><br><span class="line">description: 你对本页的描述</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p>hexo默认会处理全部markdown和html文件，如果不想让hexo处理你的文件，可以在文件头中加入<code>layout: false</code>。</p>
<p><strong>文章摘要</strong></p>
<p>在需要显示摘要的地方添加如下代码即可：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">以上是摘要</span><br><span class="line">&lt;!--more--&gt;</span><br><span class="line">以下是余下全文</span><br></pre></td></tr></table></figure>

<p>more以上内容即是文章摘要，在主页显示，more以下内容点击<code>『&amp;gt; Read More』</code>链接打开全文才显示。</p>
<p>hexo中所有文件的编码格式均是UTF-8</p>
<h2 id="主题安装"><a href="#主题安装" class="headerlink" title="主题安装"></a>主题安装</h2><p>玩博客换主题是必不可少的，hexo的主题列表<span class="exturl" data-url="aHR0cDovL2dpdGh1Yi5jb20vdG9tbXkzNTEvaGV4by93aWtpL1RoZW1lcw==">Hexo Themes<i class="fa fa-external-link-alt"></i></span>。</p>
<p>我比较喜欢<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0EtbGltb24vcGFjbWFu">pacman<i class="fa fa-external-link-alt"></i></span>，<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hlcm9pY3lhbmcvaGV4by10aGVtZS1tb2Rlcm5pc3Q=">modernist<i class="fa fa-external-link-alt"></i></span>，<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3JheXRheWxvcmxpbi9oZXhvLXRoZW1lLXJheXRheWxvcmlzbQ==">raytaylorism<i class="fa fa-external-link-alt"></i></span>；Pacman最为优秀，简洁大方小清新，同时移动版本支持的也很好，但作者并没有把很多参数分离出来给出可配置项。</p>
<p>安装主题的方法就是一句git命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/heroicyang/hexo-theme-modernist.git themes/modernist</span><br></pre></td></tr></table></figure>

<p>目录是否是modernist无所谓，只要与<code>_config.yml</code>文件一致即可。</p>
<p>安装完成后，打开<code>hexo\_config.yml</code>，修改主题为modernist</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">menu: <span class="comment">#配置页头显示哪些菜单</span></span><br><span class="line"><span class="comment">#  Home: /</span></span><br><span class="line">  Archives: /archives</span><br><span class="line">  Reading: /reading</span><br><span class="line">  About: /about</span><br><span class="line"><span class="comment">#  Guestbook: /about</span></span><br><span class="line"> </span><br><span class="line">excerpt_link: Read More <span class="comment">#摘要链接文字</span></span><br><span class="line">archive_yearly: <span class="literal">false</span> <span class="comment">#按年存档</span></span><br><span class="line"> </span><br><span class="line">widgets: <span class="comment">#配置页脚显示哪些小挂件</span></span><br><span class="line">  - category</span><br><span class="line"><span class="comment">#  - tag</span></span><br><span class="line">  - tagcloud</span><br><span class="line">  - recent_posts</span><br><span class="line"><span class="comment">#  - blogroll</span></span><br><span class="line"> </span><br><span class="line">blogrolls: <span class="comment">#友情链接</span></span><br><span class="line">  - bruce sha<span class="string">&#x27;s duapp wordpress: http://ibruce.duapp.com</span></span><br><span class="line"><span class="string">  - bruce sha&#x27;</span>s javaeye: http://buru.iteye.com</span><br><span class="line">  - bruce sha<span class="string">&#x27;s oschina blog: http://my.oschina.net/buru</span></span><br><span class="line"><span class="string">  - bruce sha&#x27;</span>s baidu space: http://hi.baidu.com/iburu</span><br><span class="line"> </span><br><span class="line">fancybox: <span class="literal">true</span> <span class="comment">#是否开启fancybox效果</span></span><br><span class="line"> </span><br><span class="line">duoshuo_shortname: buru <span class="comment">#多说账号</span></span><br><span class="line"> </span><br><span class="line">google_analytics:</span><br><span class="line">rss:</span><br></pre></td></tr></table></figure>

<p>更新主题</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/modernist</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure>

<h2 id="评论框"><a href="#评论框" class="headerlink" title="评论框"></a>评论框</h2><p>静态博客要使用第三方评论系统，hexo默认集成的是Disqus，因为你懂的，所以国内的话还是建议用多说。</p>
<p>直接用你的微博&#x2F;豆瓣&#x2F;人人&#x2F;百度&#x2F;开心网帐号登录多说，做一下基本设置。如果使用modernist主题，在<code>modernist_config.yml</code>中配置<code>duoshuo_shortname</code>为多说的基本设置-&gt;域名中的<code>shortname</code>即可;你也可以在多说后台自定义一下多说评论框的格式，比如评论框的位置，对于css设置，可以参考这里，我是在HeroicYang的基础上修改的。</p>
<p>如果你是有的其他第三方评论系统，将通用代码粘贴到<code>hexo\themes\modernist\layout\_partial\comment.ejs</code>里面，如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (config.disqus_shortname &amp;&amp; page.comments)&#123; %&gt;</span><br><span class="line">&lt;section <span class="built_in">id</span>=<span class="string">&quot;comment&quot;</span>&gt;</span><br><span class="line">  <span class="comment">#你的通用代码</span></span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>

<h2 id="关于自定义页面"><a href="#关于自定义页面" class="headerlink" title="关于自定义页面"></a>关于自定义页面</h2><p>执行<code>new page</code>命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;about&quot;</span></span><br></pre></td></tr></table></figure>

<p>在<code>hexo\source\</code>下会生成<code>about</code>目录，里面有个<code>index.md</code>，直接编辑就可以了，然后在主题的<code>_config.yml</code>中将其配置显示出来,</p>
<p>上述步骤，也可以手工生成，在<code>hexo\source\</code>下手工新建<code>abou</code>和<code>index.md</code>也是完全等价的。</p>
<p>因为<code>markdown</code>对<code>table</code>的支持不好，我是在about中直接建立index.html，里面书写页面内容，hexo会帮你加上头和尾。</p>
<h2 id="关于404页面"><a href="#关于404页面" class="headerlink" title="关于404页面"></a>关于404页面</h2><p><strong>GitHub Pages</strong> 自定义404页面非常容易，直接在根目录下创建自己的<code>404.html</code>就可以;但是自定义404页面仅对绑定顶级域名的项目才起作用，GitHub默认分配的二级域名是不起作用的，使用hexo server在本机调试也是不起作用的。</p>
<p>其实，404页面可以做更多有意义的事，来做个404公益项目吧。</p>
<p>目前有如下几个公益404接入地址，我选择了腾讯的。404页面，每个人可以做的更多。</p>
<ul>
<li><span class="exturl" data-url="aHR0cDovL3d3dy5xcS5jb20vNDA0Lw==">腾讯公益404<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cDovL3lpYm8uaXlpeXVuLmNvbS9JbmRleC93ZWI0MDQ=">404公益_益云(公益互联网)社会创新中心<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cDovLzQwNHBhZ2UubWlzc2luZ2tpZHMub3JnLnR3Lw==">失蹤兒童少年資料管理中心404<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h2 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h2><p>考虑到博客的速度，同时也为了便于博客的迁移，图床是必须的，我强烈推荐七牛，访问速度极快，支持日志、防盗链和水印。</p>
<p>免费用户有每月10GB流量+总空间10GB+PUT&#x2F;DELETE 10万次请求+GET 100万次请求，这对个人博客来说足够，不够的话参加邀请活动，来赚取流量；有一点要说明的是，七牛没有目录的概念，但是文件名可以包含&#x2F;，比如<code>2016/03/27/reading/photos-0.jpg</code></p>
<p>七牛除了作为图床还可以作为其他静态文件存储空间，比如我的个人站点首页有个字库文件和JS文件下载较慢，有时间会把它弄到七牛上去，以提高首页打开速度。请看这篇Linux中国采用七牛云存储支撑图片访问。</p>
<p>如果非要说不足的话，就是文件管理界面不是很友好，不支持CNAME到分配的永久链接，也不能绑定未备案的自有域名，必须备案才可以。</p>
<p>如果你对七牛web版的文件管理界面不满意，可以用官方的七牛云存储工具。</p>
<p>您还可以使用如下图床服务 FarBox，Dropbox，又拍云。</p>
<h2 id="申请域名（可选）"><a href="#申请域名（可选）" class="headerlink" title="申请域名（可选）"></a>申请域名（可选）</h2><p>GitHubPages默认为每个用户分配了一个二级域名<code>『your_user_name.github.com』</code>或<code>『your_user_name.github.io』</code>。</p>
<p>如果你对上述域名不满意，可以到GoDaddy上申请一个自己的域名，然后绑定到GitHub Pages,绑定方法很简单，在<code>repo</code>根目录下建立一个CNAME文件，里面写上域名即可。</p>
<p><strong>DNSPod</strong></p>
<p>GoDaddy的NameServers有时会被墙，因此墙裂推荐国内的<code>DNSPod</code>解析域名，免费服务真心不错,支持微信&#x2F;邮件提醒，监控与报警，访问统计，健康诊断，搜索引擎推送，速度杠杠的，对于我来说足够。</p>
<h2 id="关于Hexo的一下命令"><a href="#关于Hexo的一下命令" class="headerlink" title="关于Hexo的一下命令"></a>关于Hexo的一下命令</h2><h3 id="常用命令："><a href="#常用命令：" class="headerlink" title="常用命令："></a>常用命令：</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new <span class="string">&quot;postName&quot;</span> <span class="comment">#新建文章</span></span><br><span class="line">hexo new page <span class="string">&quot;pageName&quot;</span> <span class="comment">#新建页面</span></span><br><span class="line">hexo generate <span class="comment">#生成静态页面至public目录</span></span><br><span class="line">hexo server <span class="comment">#开启预览访问端口（默认端口4000，&#x27;ctrl + c&#x27;关闭server）</span></span><br><span class="line">hexo deploy <span class="comment">#将.deploy目录部署到GitHub</span></span><br></pre></td></tr></table></figure>

<h3 id="常用复合命令："><a href="#常用复合命令：" class="headerlink" title="常用复合命令："></a>常用复合命令：</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo deploy -g</span><br><span class="line">hexo server -g</span><br></pre></td></tr></table></figure>

<h3 id="简写："><a href="#简写：" class="headerlink" title="简写："></a>简写：</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo n == hexo new</span><br><span class="line">hexo g == hexo generate</span><br><span class="line">hexo s == hexo server</span><br><span class="line">hexo d == hexo deploy</span><br></pre></td></tr></table></figure>

<p><strong><code>至此，基本操作介绍完毕，以下内容普通用户无需了解</code></strong></p>
<h2 id="项目目录介绍以及其他介绍"><a href="#项目目录介绍以及其他介绍" class="headerlink" title="项目目录介绍以及其他介绍"></a>项目目录介绍以及其他介绍</h2><p>默认目录结构：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── .deploy</span><br><span class="line">├── public</span><br><span class="line">├── scaffolds</span><br><span class="line">├── scripts</span><br><span class="line">├── <span class="built_in">source</span></span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">├── themes</span><br><span class="line">├── _config.yml</span><br><span class="line">└── package.json</span><br></pre></td></tr></table></figure>

<ul>
<li><p>deploy：执行hexo deploy命令部署到GitHub上的内容目录</p>
</li>
<li><p>public：执行hexo generate命令，输出的静态网页内容目录</p>
</li>
<li><p>scaffolds：layout模板文件目录，其中的md文件可以添加编辑</p>
</li>
<li><p>scripts：扩展脚本目录，这里可以自定义一些javascript脚本</p>
</li>
<li><p>source：文章源码目录，该目录下的markdown和html文件均会被hexo处理。该页面对应repo的根目录，404文件、favicon.ico文件，CNAME文件等都应该放这里，该目录下可新建页面目录。</p>
<ul>
<li>_drafts：草稿文章</li>
<li>_posts：发布文章</li>
</ul>
</li>
<li><p>themes：主题文件目录</p>
</li>
<li><p>_config.yml：全局配置文件，大多数的设置都在这里</p>
</li>
<li><p>package.json：应用程序数据，指明hexo的版本等信息，类似于一般软件中的关于按钮</p>
<p>接下来是重头戏<code>_config.yml</code>，做个简单说明：</p>
</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Hexo Configuration</span></span><br><span class="line"><span class="comment">## Docs: http://zespia.tw/hexo/docs/configure.html</span></span><br><span class="line"><span class="comment">## Source: https://github.com/tommy351/hexo/</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Site #整站的基本信息</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">不如</span> <span class="comment">#网站标题</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">码农，程序猿，未来的昏析师</span> <span class="comment">#网站副标题</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">bruce</span> <span class="string">sha&#x27;s</span> <span class="string">blog</span> <span class="string">|</span> <span class="string">java</span> <span class="string">|</span> <span class="string">scala</span> <span class="string">|</span> <span class="string">bi</span> <span class="comment">#网站描述，给搜索引擎用的，在生成html中的head-&gt;meta中可看到</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">bruce</span> <span class="comment">#网站作者，在下方显示</span></span><br><span class="line"><span class="attr">email:</span> <span class="string">bu.ru@qq.com</span> <span class="comment">#联系邮箱</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span> <span class="comment">#语言</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># URL #域名和文件结构</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as &#x27;http://yoursite.com/child&#x27; and root as &#x27;/child/&#x27;</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">http://ibruce.info</span> <span class="comment">#你的域名</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br><span class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Writing #写文章选项</span></span><br><span class="line"><span class="attr">new_post_name:</span> <span class="string">:title.md</span> <span class="comment"># File name of new posts</span></span><br><span class="line"><span class="attr">default_layout:</span> <span class="string">post</span> <span class="comment">#默认layout方式</span></span><br><span class="line"><span class="attr">auto_spacing:</span> <span class="literal">false</span> <span class="comment"># Add spaces between asian characters and western characters</span></span><br><span class="line"><span class="attr">titlecase:</span> <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></span><br><span class="line"><span class="attr">external_link:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></span><br><span class="line"><span class="attr">max_open_file:</span> <span class="number">100</span></span><br><span class="line"><span class="attr">multi_thread:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">filename_case:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">highlight:</span> <span class="comment">#代码高亮</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#是否启用</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">false</span> <span class="comment">#是否显示行号</span></span><br><span class="line">  <span class="attr">tab_replace:</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Category &amp; Tag #分类与标签</span></span><br><span class="line"><span class="attr">default_category:</span> <span class="string">uncategorized</span> <span class="comment"># default</span></span><br><span class="line"><span class="attr">category_map:</span></span><br><span class="line"><span class="attr">tag_map:</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Archives #存档，这里的说明好像不对。全部选择1，这个选项与主题中的选项有时候会有冲突</span></span><br><span class="line"><span class="comment">## 2: Enable pagination</span></span><br><span class="line"><span class="comment">## 1: Disable pagination</span></span><br><span class="line"><span class="comment">## 0: Fully Disable</span></span><br><span class="line"><span class="attr">archive:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">category:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">tag:</span> <span class="number">1</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Server #本地服务参数</span></span><br><span class="line"><span class="comment">## Hexo uses Connect as a server</span></span><br><span class="line"><span class="comment">## You can customize the logger format as defined in</span></span><br><span class="line"><span class="comment">## http://www.senchalabs.org/connect/logger.html</span></span><br><span class="line"><span class="attr">port:</span> <span class="number">4000</span></span><br><span class="line"><span class="attr">logger:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">logger_format:</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Date / Time format #日期显示格式</span></span><br><span class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></span><br><span class="line"><span class="comment">## You can customize the date format as defined in</span></span><br><span class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line"><span class="attr">date_format:</span> <span class="string">MMM</span> <span class="string">D</span> <span class="string">YYYY</span></span><br><span class="line"><span class="attr">time_format:</span> <span class="string">H:mm:ss</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Pagination #分页设置</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">10</span> <span class="comment">#每页10篇文章</span></span><br><span class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Disqus #社会化评论disqus，我使用多说，在主题中配置</span></span><br><span class="line"><span class="attr">disqus_shortname:</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Extensions #插件，暂时未安装插件</span></span><br><span class="line"><span class="comment">## Plugins: https://github.com/tommy351/hexo/wiki/Plugins</span></span><br><span class="line"><span class="comment">## Themes: https://github.com/tommy351/hexo/wiki/Themes</span></span><br><span class="line"><span class="comment">## 主题</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">modernist</span> <span class="comment"># raytaylorism # pacman # modernist # light</span></span><br><span class="line"><span class="attr">exclude_generator:</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Deployment #部署</span></span><br><span class="line"><span class="comment">## Docs: http://zespia.tw/hexo/docs/deploy.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">github</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:bruce-sha/bruce-sha.github.com.git</span> <span class="comment">#你的GitHub Pages仓库</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="修改局部页面"><a href="#修改局部页面" class="headerlink" title="修改局部页面"></a>修改局部页面</h3><p>页面展现的全部逻辑都在每个主题中控制，源代码在<code>hexo\themes\</code>你使用的主题\中，以<code>modernist</code>主题为例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── languages          <span class="comment">#多语言</span></span><br><span class="line">|   ├── default.yml    <span class="comment">#默认语言</span></span><br><span class="line">|   └── zh-CN.yml      <span class="comment">#中文语言</span></span><br><span class="line">├── layout             <span class="comment">#布局，根目录下的*.ejs文件是对主页，分页，存档等的控制</span></span><br><span class="line">|   ├── _partial       <span class="comment">#局部的布局，此目录下的*.ejs是对头尾等局部的控制</span></span><br><span class="line">|   └── _widget        <span class="comment">#小挂件的布局，页面下方小挂件的控制</span></span><br><span class="line">├── <span class="built_in">source</span>             <span class="comment">#源码</span></span><br><span class="line">|   ├── css            <span class="comment">#css源码 </span></span><br><span class="line">|   |   ├── _base      <span class="comment">#*.styl基础css</span></span><br><span class="line">|   |   ├── _partial   <span class="comment">#*.styl局部css</span></span><br><span class="line">|   |   ├── fonts      <span class="comment">#字体</span></span><br><span class="line">|   |   ├── images     <span class="comment">#图片</span></span><br><span class="line">|   |   └── style.styl <span class="comment">#*.styl引入需要的css源码</span></span><br><span class="line">|   ├── fancybox       <span class="comment">#fancybox效果源码</span></span><br><span class="line">|   └── js             <span class="comment">#javascript源代码</span></span><br><span class="line">├── _config.yml        <span class="comment">#主题配置文件</span></span><br><span class="line">└── README.md          <span class="comment">#用GitHub的都知道</span></span><br></pre></td></tr></table></figure>

<p>如果你需要修改头部，直接修改<code>hexo\themes\modernist\layout\_partial\header.ejs</code>，比如头上加个搜索框：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;search&quot;</span> <span class="attr">action</span>=<span class="string">&quot;//google.com/search&quot;</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span> <span class="attr">accept-charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;search&quot;</span> <span class="attr">name</span>=<span class="string">&quot;q&quot;</span> <span class="attr">id</span>=<span class="string">&quot;search&quot;</span> <span class="attr">autocomplete</span>=<span class="string">&quot;off&quot;</span> <span class="attr">autocorrect</span>=<span class="string">&quot;off&quot;</span> <span class="attr">autocapitalize</span>=<span class="string">&quot;off&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;20&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Search&quot;</span> /&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;q&quot;</span> <span class="attr">value</span>=<span class="string">&quot;site:&lt;%- config.url.replace(/^https?:\/\//, &#x27;&#x27;) %&gt;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>将如上代码加入即可，您需要修改css以便这个搜索框比较美观。</p>
<p>再如，你要修改页脚版权信息，直接编辑<code>hexo\themes\modernist\layout\_partial\footer.ejs</code>;同理，你需要修改css，直接去修改对应位置的styl文件</p>
<h3 id="统计"><a href="#统计" class="headerlink" title="统计"></a>统计</h3><p>编辑文件<code>hexo\themes\modernist\_config.yml</code>，增加配置选项：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">baidu_tongji:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>新建文件<code>hexo\themes\modernist\layout\_partial\baidu_tongji.ejs</code>，内容如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;% if (theme.baidu_tongji)&#123; %&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">#你的百度统计代码</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>


<p>编辑文件<code>hexo\themes\modernist\layout\_partial\head.ejs</code>，在『&#x2F;head』之前增加：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;%- partial(&#x27;baidu_tongji&#x27;) %&gt;</span><br></pre></td></tr></table></figure>

<h3 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h3><p>我没有添加分享，觉得这个不是很必要，导致页面看起来啰嗦。以加网为例介绍如何添加：</p>
<ul>
<li>在<code>hexo\themes\modernist\layout\_partial\post</code>下新建<code>jiathis.ejs</code>文件。</li>
<li>注册加网获得你的分享代码，写入<code>jiathis.ejs</code>。</li>
<li>在<code>hexo\themes\modernist\layout\_partial\article.ejs</code>中，添加<code>&amp;lt;%-partial(‘post/jiathis’)%&amp;gt;</code>。</li>
</ul>
<p>分享服务还可以使用如下企业提供的技术<span class="exturl" data-url="aHR0cDovL3d3dy5qaWF0aGlzLmNvbS8=">加网<i class="fa fa-external-link-alt"></i></span>，<span class="exturl" data-url="aHR0cDovL3d3dy5ic2hhcmUuY24v">bShare<i class="fa fa-external-link-alt"></i></span>，<span class="exturl" data-url="aHR0cDovL3NoYXJlLmJhaWR1LmNvbS8=">百度分享<i class="fa fa-external-link-alt"></i></span>。</p>
<h3 id="网站图标"><a href="#网站图标" class="headerlink" title="网站图标"></a>网站图标</h3><p>看一下<code>hexo\themes\modernist\layout\_partial\head.ejs</code>，找到这句：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;<span class="built_in">link</span> rel=<span class="string">&quot;icon&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;image/x-icon&quot;</span> href=<span class="string">&quot;&lt;%- config.root %&gt;favicon.ico&quot;</span>&gt;</span><br></pre></td></tr></table></figure>

<p>你懂的，将你的<code>favicon.ico</code>放到工程根目录下即可，也就是<code>hexo\source</code>目录;可以在Faviconer制作你的ico图标，国内有比特虫。</p>
<h3 id="自定义挂件"><a href="#自定义挂件" class="headerlink" title="自定义挂件"></a>自定义挂件</h3><p>除了默认已提供的挂件外，你还可以自定义自己的小挂件，在<code>hexo\themes\modernist\layout\_widget\</code>下，新建自己的ejs文件，如<code>myWidget.ej</code>s，然后在配置文件<code>hexo\themes\modernist\_config.yml</code>中配置。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">widgets:</span><br><span class="line">  - myWidget</span><br></pre></td></tr></table></figure>

<p>用上述方法可以添加新浪微博小挂件。</p>
<ul>
<li>生成自己的<span class="exturl" data-url="aHR0cDovL29wZW4ud2VpYm8uY29tL3dpZGdldHM/Y2F0PXdi">微博组件<i class="fa fa-external-link-alt"></i></span></li>
<li>添加<code>hexo\themes\modernist\layout\_widget\weibo.ejs</code>文件</li>
<li>配置<code>hexo\themes\modernist\_config.yml</code></li>
</ul>
<h3 id="关于插件"><a href="#关于插件" class="headerlink" title="关于插件"></a>关于插件</h3><p>安装插件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install &lt;plugin-name&gt; --save</span><br></pre></td></tr></table></figure>

<p>启用插件：在<code>hexo\_config.yml</code>文件添加：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">plugins:</span><br><span class="line">- &lt;plugin-name&gt;  <span class="comment">#插件名</span></span><br></pre></td></tr></table></figure>

<p>升级插件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm update</span><br></pre></td></tr></table></figure>

<p>卸载插件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm uninstall &lt;plugin-name&gt;</span><br></pre></td></tr></table></figure>

<p><strong>RSS插件</strong></p>
<p>将上述命令中的『plugin-name』，替换为<code>hexo-generator-feed</code>,一旦安装完成，你可以在配置显示你站点的RSS，文件路径<code>\atom.xml</code></p>
<p>你可以用rss作为迁移工具，用如下命令读取其他位置的rss：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo migrate rss &lt;<span class="built_in">source</span>&gt;</span><br></pre></td></tr></table></figure>

<p>『source』是本地或网络文件路径。</p>
<p><strong>Sitemap插件</strong></p>
<p>将上述命令中的『plugin-name』，替换为<code>hexo-generator-sitemap</code>,你可以将你站点地图提交给搜索引擎，文件路径<code>\sitemap.xml</code>。</p>
<h3 id="迁移"><a href="#迁移" class="headerlink" title="迁移"></a>迁移</h3><p>hexo支持从其他类型站点迁移，如通用 RSS，Jekyll，Octopress，WordPress等，这一部分我没试过。请参考官方文档<span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvbWlncmF0aW9uLmh0bWw=">Hexo Migration<i class="fa fa-external-link-alt"></i></span>。</p>
<h3 id="搜索引擎"><a href="#搜索引擎" class="headerlink" title="搜索引擎"></a>搜索引擎</h3><p>你可以到<span class="exturl" data-url="aHR0cDovL3d3dy5zb3VzdW95aW5xaW5ndGlqaWFvLmNvbS8=">屈站长<i class="fa fa-external-link-alt"></i></span>提交你的站点给搜索引擎。其他内容如添加站点或页面的description，提交Sitemap，添加百度统计，Google Analytics等等，参考本文其他章节的内容，不再一一阐述。</p>
<h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3><p>更新hexo：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm update -g hexo</span><br></pre></td></tr></table></figure>

<p>更新主题：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/你的主题</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure>

<p>更新插件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm update</span><br></pre></td></tr></table></figure>

<h3 id="换机器"><a href="#换机器" class="headerlink" title="换机器"></a>换机器</h3><p>你要保留好自己的博客源码，换机器写博客，就只能使用各种网盘的同步功能，或者你把你的站点源文件提交到某代码托管服务器；另外，貌似这篇很牛逼，<span class="exturl" data-url="aHR0cDovL2x1Y2lmci5jb20vMjAxMy8wNi8wMi9oZXhvLW9uLWNsb3VkLXdpdGgtZHJvcGJveC1hbmQtdnBzLw==">Hexo 服务器端布署及 Dropbox 同步<i class="fa fa-external-link-alt"></i></span>。</p>
<h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2><p>我的博客<span class="exturl" data-url="aHR0cDovL2plZi13YXkuZ2l0aHViLmlvLw==">『blog.jefway.com』<i class="fa fa-external-link-alt"></i></span>基本算是免费做出来的，由于水平有限，错误之处在所难免，请诸位多多包涵，不吝指点。</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Iconfont字体图标</title>
    <url>/posts/iconfont.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-08/iconfont/intro.jpg" alt="Iconfont - 让字体图标更自由"></p>
<p>今天因为工作需要无意中发现的**<span class="exturl" data-url="aHR0cDovL3d3dy5pY29uZm9udC5jbi8=">Iconfont<i class="fa fa-external-link-alt"></i></span>**这个网站，发现有点相见恨晚的感觉，因为就在昨天我还在为icon字体的事儿发愁：网站本来是使用了icon字体图标的，效果本来挺好的，但有一个bug是我发现在chrome下面很多图标都无法显示，不管我将字体文件怎样重新编辑和生成都不能解决。</p>
<span id="more"></span>

<p>在认识到以我现有的水平是搞不定这个问题的之后，只好很不情愿的将字体文件全部替换成Font Awesome字体了；因为Font Awesome仅字体文件就有好几百KB（svg文件达到194KB），这无疑会增加网站访问的压力，虽然我现在用着七牛每个月10G的免费流量，但也不想给网站增加额外的几百KB请求的负担不是，还好今天发现了<strong>iconfont</strong>，下面就来说说为什么我要将刚修改好的Font Awesome字体抛弃而转用iconfont。</p>
<h2 id="两者之间的优缺点"><a href="#两者之间的优缺点" class="headerlink" title="两者之间的优缺点"></a>两者之间的优缺点</h2><p>iconfont的图标库相当巨大，我在写上一篇文章的时候还是52090个，现在刷新之后图标数量已经是368485个了，如果这么大的一个库里面仍然没有你需要的图标的话，你也可以自己动手制作你自己的图标然后使用网站的在线生成工具来生成字体文件，分分钟就可以使用了。</p>
<p>除了拥有巨大的图标库之外，iconfont最值得推荐的原因还在于她使用上的灵活性（实话说，iconfont给我最初的印象是有点像现在各大运营商主打的可自由搭配的积木套餐），因为她完全可以由你自由搭配组合、按需索取，如果你的网站一共只需要用到5个图标，那么你只需要将这5个图标的字体文件和相关的css下载下来就可以用了，如果你想使用iconfont的CDN服务的话，你都不用下载，直接将这几个图标添加到你自己的项目中，然后在你的网站里面引用一个CSS文件就可以了。</p>
<p>再反观Font Awesome，哪怕你只是要用到2个图标，你都必须要把所有文件都下载下来才能使用，而上面也说了，仅SVG就194KB大了，还有其他几个字体文件加起来一共有400+KB，这还是没有算上同样好几十KB的CSS文件。</p>
<p>孰优孰劣是不是很清楚？相信你已经有了自己的选择。</p>
<p>来，下面说说如何使用，其实很简单，但还是理一个步骤给不是很懂的同学。</p>
<h2 id="将你看上的图标加入到购物车"><a href="#将你看上的图标加入到购物车" class="headerlink" title="将你看上的图标加入到购物车"></a>将你看上的图标加入到购物车</h2><p>将你看上的图标加入到购物车官方叫法是“暂存架”，购物车只是我的叫法，好像并不准确，因为不需要花钱的啊，但是它用了一个购物车的图标，所以暂且这样称呼吧。</p>
<p>这里你可以在<strong>iconfont</strong>的图标库里面寻找你要的图标，但是我不建议你这样做，因为默认给出的几个官方图标库里面的图标是不全的。正确的做法是在导航栏右侧的输入框中输入关键词来搜索图标，这样就会将网友制作的图标都搜出来。（我一开始就是在图标库中找微信、twitter和QQ空间的图标怎么也找不到，后来试着在上面搜索了一下，出来大把的，才知道官方库里面是没有收录这些图标的。。。）</p>
<p><img src="/../imgs/2024-01-08/iconfont/main.gif" alt="Iconfont"></p>
<h2 id="存储为项目或者下载到本地"><a href="#存储为项目或者下载到本地" class="headerlink" title="存储为项目或者下载到本地"></a>存储为项目或者下载到本地</h2><p>就像上面图片中的那样，添加到购物车之后就可以存为项目或下载到本地，这里看你的需求了；反正我是想使用阿里的CDN，所以直接存为项目了。存储为项目的时候你可以选择存为新项目还是添加到已有的项目里面，确定之后会跳转到项目详情页。</p>
<h2 id="下载修改并调用CSS文件"><a href="#下载修改并调用CSS文件" class="headerlink" title="下载修改并调用CSS文件"></a>下载修改并调用CSS文件</h2><p>在项目详情页里面你还是可以选择是下载文件到本地使用还是使用阿里的CDN，当然选择CDN了（也就是页面中的获取在线链接）；这里建议使用Font Class，因为如果你选择Unicode的话CSS中图标的编码都要自己写，这个有点麻烦啊，不符合我这种懒鬼的风格，所以如果你也是懒鬼一枚请将下图中右上角的滑块滑到右侧。</p>
<p><img src="/../imgs/2024-01-08/iconfont/icon.jpg" alt="Iconfont"></p>
<p>然后鼠标移到左侧的获取在线链接这里就能看到生成的CSS文件了，你现在有两个选择：一是直接调用这个文件，在网站的HTML中修改添加图标的元素的类为&quot;iconfont icon-xxx&quot;的；第二个选择是将这个文件下载下来，然后做一些修改之后传到服务器本地调用，然后在网站的HTML中修改添加图标的元素的类为&quot;icon-xxx&quot;。我选择的是第二种，大家随意。</p>
<p>选择第二种的话需要对CSS做一点小的修改，将选择器“.iconfont”改为“[class*&#x3D;icon-],[class^&#x3D;icon-]”：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-attr">[class*=<span class="string">&quot;icon-&quot;</span>]</span>,<span class="selector-attr">[class^=<span class="string">&quot;icon-&quot;</span>]</span>&#123;</span><br><span class="line">	<span class="attribute">font-family</span>:<span class="string">&quot;iconfont&quot;</span><span class="meta">!important</span>;</span><br><span class="line">	<span class="attribute">font-size</span>:<span class="number">16px</span>;</span><br><span class="line">	<span class="attribute">font-style</span>:normal;</span><br><span class="line">	-webkit-<span class="attribute">font-smoothing</span>:antialiased;</span><br><span class="line">	-webkit-text-stroke-<span class="attribute">width</span>:<span class="number">0.2px</span>;</span><br><span class="line">	-moz-osx-<span class="attribute">font-smoothing</span>:grayscale;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后引用CSS文件就OK了。</p>
<h2 id="在网页中使用icon图标字体"><a href="#在网页中使用icon图标字体" class="headerlink" title="在网页中使用icon图标字体"></a>在网页中使用icon图标字体</h2><p>CSS调用之后就可以在HTML中给元素添加CSS类来显示图标了，看下面这张图，比如我要调用图片中的小火箭这个图标，那我就要将我的HTML修改为</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;icon-xiaohuojian&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>这样既可。</p>
<p><img src="/../imgs/2024-01-08/iconfont/web.jpg" alt="图标演示效果"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>图标</tag>
      </tags>
  </entry>
  <entry>
    <title>KMPlayer</title>
    <url>/posts/kmplayer.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-08/kmplayer/intro.jpg" alt="KMPlayer - 强大的免费万能视频格式影音播放器"></p>
<p>今天给大家推荐一款本地影音播放器，它就是 KMPlayer (KMP 播放器) ，它是 Windows 上老牌的知名万能格式视频播放器，几乎可以播放所有主流的多媒体文件 (mkv、avi、rmvb、wmv、flv、mp4 等等)。</p>
<span id="more"></span>

<p><img src="/../imgs/2024-01-08/kmplayer/main.jpg" alt="KMPlayer播放界面"></p>
<p>作为一款优秀的影音播放器，<strong>KMPlayer</strong> 内置了强大的音频和视频解码器，视频回放效果出色，播放高清视频的资源占用也很低，支持外挂字幕加载，支持视觉特效等各种扩展插件，可更换皮肤，软件本身完全免费，综合素质非常出色！而且现在还新增了 Android 和 iOS 版……</p>
<p><img src="/../imgs/2024-01-08/kmplayer/video.jpg" alt="KMPlayer"></p>
<h2 id="KMPlayer-的发挥重要的多媒体编解码器内置本身"><a href="#KMPlayer-的发挥重要的多媒体编解码器内置本身" class="headerlink" title="KMPlayer 的发挥重要的多媒体编解码器内置本身"></a>KMPlayer 的发挥重要的多媒体编解码器内置本身</h2><p>因此，它可以发挥媒体无需额外的编解码器和编解码器支持内部&#x2F;外部分为如果语音编解码器的 效果，支持 MPEG1，2，AAC 格式的 WMA7，8，OGG 格式，并支持内置的语音编解码器的功能，当使用矩阵&#x2F;等化器附加功能支持. ffdshow 的 KMPlayer 的编解码器内置，从里面的情况下，因为处理是更快，更安全，支持所有编解码器，支持 MPEG1&#x2F; 2 支持.编解码器的用户安装麻烦，低规格的电脑用户，那些为寻找优秀的多媒体播放体验由 KMP 可以装点简单的多媒体播放体验.</p>
<h2 id="KMPlayer-的重要功能"><a href="#KMPlayer-的重要功能" class="headerlink" title="KMPlayer 的重要功能"></a>KMPlayer 的重要功能</h2><ul>
<li>高分辨率的电影的支持看电影在一流的质量支持 3 d、4 k 和 UHD</li>
<li>支持多种语言，支持全球超过 24 种语言</li>
<li>不同的格式支持 RTS,MPEG1,的 MPEG2,AAC、WMA7 WMA8,OGG 等</li>
<li>视频捕捉捕获音频和视频或屏幕截图是可能的,并且可以保存在您想要的格式</li>
<li>高级选项电影 DVD 提供完全控制选择、菜单、音频菜单、副标题菜单,亮度&#x2F;对比度,以满足用户的需求</li>
<li>内部编解码器编解码器包的软件,因此可以快速高效地看电影</li>
</ul>
<h2 id="KMPlayer-移动版"><a href="#KMPlayer-移动版" class="headerlink" title="KMPlayer 移动版"></a>KMPlayer 移动版</h2><p>KMPlayer Mobile (移动版)和 PC 版一样同样是主打 “万能格式” 播放的优势，一次安装即能通吃几乎所有主流的视频和音频文件格式，经测试在 iPhone 5S 上直接播放 <strong>1080P MKV 格式全高清</strong> 电影效果还是很流畅的;而且，针对手机、平板的触摸屏特点，KMplayer for Android&#x2F;iOS 还支持方便的手势操作和精确的快进&#x2F;后退以及倍速播放等。</p>
<p><img src="/../imgs/2024-01-08/kmplayer/mobile.jpg" alt="KMPlayer"></p>
<p>在播放界面上左右滑动可以用于短时间的快进后退，上下滑动可以用于音量调节，你不再需要特意调出进度条就能方便地快进后退或者调整音量了。</p>
<h2 id="KMPlayer-下载"><a href="#KMPlayer-下载" class="headerlink" title="KMPlayer 下载"></a>KMPlayer 下载</h2><blockquote>
<p><span class="exturl" data-url="aHR0cDovL3Bhbi5iYWlkdS5jb20vcy8xbWczdUhlZw==">KMPlayer PC 去广告版下载<i class="fa fa-external-link-alt"></i></span> &gt;<span class="exturl" data-url="aHR0cDovL3Bhbi5iYWlkdS5jb20vcy8xbzZIM0pIUw==">KMPlayer 移动去广告 Android 版下载<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>播放器</tag>
      </tags>
  </entry>
  <entry>
    <title>Leanote</title>
    <url>/posts/leanote.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-05/leanote/intro.jpg" alt="Leanote"></p>
<p>虽然目前在知识管理&#x2F;笔记类软件领域有强大的印象笔记 (Evernote)、微软 OneNote、国产的为知笔记以及有道云笔记等都是非常优秀的产品，但经常还有人询问有没轻量快速的笔记工具？</p>
<span id="more"></span>

<p>于是我们推荐了极简小巧的 Notation、CintaNotes，但它们在“云”同步功能上却又差了一截。而今天推荐的，则是一款纯粹的在线云笔记工具——Leanote！它最大的特点就是简约、免费、开源、支持 Markdown 语法，支持程序代码高亮、笔记历史记录、支持笔记分享协作、将笔记发布成博客等功能……</p>
<h2 id="开源的云笔记"><a href="#开源的云笔记" class="headerlink" title="开源的云笔记"></a>开源的云笔记</h2><p>Leanote 是一款国产的在线网页版云笔记软件， 集知识管理、笔记、分享、博客功能于一身，界面简约但功能不简单！它支持多笔记本、标签分类、笔记共享、添加保存附件等，而且还提供了免打扰写作模式、支持图片尺寸调整、并且支持 Markdown 语法写作，最重要的是，它还能完美支持代码高亮显示！</p>
<p><img src="/../imgs/2024-01-05/leanote/web.jpg" alt="Leanote"></p>
<p>该项目采用 Golang+MongoDB 开发，现已完全开源并能免费使用。普通用户可以直接使用 Leanote 提供的公共服务，也可以自行搭建属于自己或公司局域网内的私有云笔记平台。 而且，Leanote 可以让用户创建一个用户组，并将笔记共享到这个组里，所有组员都可以浏览、编辑笔记，可以非常方便地进行协作或知识共享。（题外话：团队内还可以通过 SeaFile 搭建私有的云存储配合使用）</p>
<p>Leanote 是一个基于 WEB 网页版的产品，无论是 Windows、Mac、Linux 还是 Android、iOS 手机用户都可以通过浏览器直接访问 Leanote，而且，现在 Leanote for Windows 和 Mac 版的客户端也都已经出来了。不管是客户端，还是网页版，Leanote 的撰写、编辑笔记体验还是相当不错的！</p>
<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><p>下面是 Leanote 作者的原话：“总有朋友问我，为什么要做 Leanote？我每次都说：因为我不喜欢 Evernote、有道之类的笔记产品，不好贴代码 (程序员的硬性需求)。而且 Evernote 的客户端竟然不能修改图片大小，没有文档导航。这些都是我不能忍受的，我觉得知识就应该有条理，有条理怎么能没有标题导航呢？而对于程序员，贴代码后格式会乱掉怎么能忍受？”</p>
<p>出于这些不能忍受的问题加上不爽印象笔记，这位程序员最后任性了一次，自己动手做了这么一个支持代码格式高亮显示的清爽在线云笔记——Leanote！下面是我随手截的一段 PHP 代码的高亮效果。</p>
<p><img src="/../imgs/2024-01-05/leanote/code.jpg" alt="Leanote"></p>
<p>Leanote 坚信轮子+轮子&#x3D;产品，庆幸如今身处一个开放的环境，可以将一切好的东西吸收进来不断完美。目前，Leaonte 没有自己开发代码编辑器，而是集成了当今最好用的 Ace 代码编辑器，而 Markdown编辑器方面也是集成了当今最好用的 StackEdit 编辑器。下面是 Leanote 的 Markdown 编辑效果截图：</p>
<p><img src="/../imgs/2024-01-05/leanote/markdown.jpg" alt="Leanote"></p>
<p>Leanote云协作功能，你和好友共同编辑一个笔记, 你的任何修改都会实时在好友那显示. 并且, 你们还可以聊天讨论.</p>
<p>空间；你可以免费拥有无限个空间, 也可以创建私有空间, 并可以将空间和笔记分享给你的好友.在这里, 笔记不是单一的存在, 一个空间的所有笔记组成了一颗树, 这让知识更易管理.你可以创建多个组织账户, 在这个账户下可以管理团队, 拥有丰富的权限管理.</p>
<p><img src="/../imgs/2024-01-05/leanote/write.gif" alt="Leanote"></p>
<h2 id="相关文件地址"><a href="#相关文件地址" class="headerlink" title="相关文件地址"></a>相关文件地址</h2><blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9sZWFub3RlLmNvbS8=">官方网站<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cDovL2FwcC5sZWFub3RlLmNvbS8=">下载 Leanote<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Listary</title>
    <url>/posts/listary.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-08/listary/intro.jpg" alt="Listary - 提高你 Windows 文件浏览与搜索速度效率"></p>
<p>如果你是一个喜欢追求高效率和流畅操作的人，那么有两样东西你肯定是痛恨已久，而且又是每天几乎都必须跟它们打交道的，那就是 Windows 的「资源管理器」和「打开&#x2F;保存文件的浏览对话框」。</p>
<span id="more"></span>

<p>几乎所有软件都会用到文件浏览对话框，但实际上它和资源管理器一样非常低效！没好用的快捷键，文件太多、路径复杂时难以操作，不能收藏常用的目录，在对话框中不能搜索文件，如果每天要来回地打开&#x2F;保存不同目录下的文件简直就是一个噩梦！然而这一切在我遇到 Listary 这款神器后终于彻底改变了！它是一款极为优秀的文件浏览与搜索增强工具，能极大地提高用户的操作速度和效率，用过后你绝对不愿再回到从前……</p>
<h2 id="Windows-文件浏览对话框"><a href="#Windows-文件浏览对话框" class="headerlink" title="Windows 文件浏览对话框"></a>Windows 文件浏览对话框</h2><p>从十几年前的 Win95 到现在的 Windows 10，虽然系统的版本一直在升级，但其「文件浏览对话框」和「资源管理器」在功能上却都没有什么实质性的改变。可能是基于让更多人会用即可的原则，微软对此并没有做过什么能提高其使用效率的措施。以至于常常在工作时多次打开和保存位于电脑各个不同目录的文件时都能让我崩溃，甚至暴躁得想骂娘～！</p>
<p>难道微软会认为，当一些文件放在一层层的文件夹里很深，好不容易进去之后，又要不断地“向上”、“向上”去另一个目录，再不断进去进去的来回抽搐活塞运动会让我享受么？！「资源管理器」还能开多个窗口，但在打开或保存文件时就囧了……无论一些软件本身设计得多么快捷好用，常常都会被这个极其低效的文件对话框给拉低水平了。所以我们今天就用 Listary 把它给灭了！！增强一下。</p>
<p><img src="/../imgs/2024-01-08/listary/wizard.jpg" alt="Listary 中文引导"></p>
<p>不得不说，我第一次遇到 Listary 时简直如获至宝！它是一款非常优秀的 Windows 文件浏览和搜索增强工具，可以为你 Windows 的「文件浏览对话框」、「资源管理器」等增加非常方便的文件快速定位、实时全盘搜索、常用文件夹收藏、打开历史、快速切换到已打开的路径、快捷右键菜单等一系列非常非常实用和高效的功能，它能将 Windows 的便捷性提高到一个新的高度！</p>
<h2 id="功能和版本介绍"><a href="#功能和版本介绍" class="headerlink" title="功能和版本介绍"></a>功能和版本介绍</h2><p>Listary 体积小巧，而且运行快速，即便在低配置的电脑上常驻系统使用也不会察觉有丝毫拖慢速度的现象。它提供了简体中文语言，加上前面所说的拼音搜索功能，可以说对中文环境的支持已经达到了完美。虽然官网的介绍视频是英文的，但软件本身也提供了中文的 “教学” 功能，而且本站的视频也算录制得比较详细了，相信大家上手使用应该是无鸭梨的。</p>
<p><img src="/../imgs/2024-01-08/listary/main.jpg" alt="Listary"></p>
<p><img src="/../imgs/2024-01-08/listary/next.jpg" alt="Listary"></p>
<p><img src="/../imgs/2024-01-08/listary/shear.jpg" alt="Listary"></p>
<p><img src="/../imgs/2024-01-08/listary/jump.jpg" alt="Listary"></p>
<p>集成在 Windows 资源管理器中的快速搜索和定位功能集成在 Windows 资源管理器中的快速搜索和定位功能</p>
<p>打开与保存对话框中也能使用打开与保存对话框中也能使用</p>
<p>而且还能支持 WinRAR 这种第三方软件而且还能支持 WinRAR 这种第三方软件</p>
<p>Listary 除了支持 Windows 的资源管理器、文件对话框的增强之外，还能提供 TotalCommander、WinRAR、FileZillar、7Zip、XYPlorer、FreeCommander 等知名软件的增强支持，配合它们用起来使用效率更加无敌！此外，如果你喜欢使用 Everything 进行文件搜索的话，Listary 还能与它结合，用它替代自身的搜索功能。</p>
<h2 id="免费版与Pro版区别"><a href="#免费版与Pro版区别" class="headerlink" title="免费版与Pro版区别"></a>免费版与Pro版区别</h2><p>除了介绍的那些特性之外，Listary 其实还有很多很实用的增强功能和特性，譬如 Project (项目汇聚搜索)、FuzzyNavigation (搜索当前文件夹里面的所有文件)  等特性大家可以下载回去慢慢试用和体会。不过可惜的是，其中很多优秀的功能（如刚提到的两项、还有视频中按右方向键调用文件的菜单等等）都是 Listary Pro 专业版专享的，免费版并不能使用。所以如果你觉得免费版用得不够爽，或者用过觉得这软件确实有用，那么我极度建议你升级到 Pro 版，因为你不仅可以使用目前全部的功能，而且未来版本新增的功能也能全部获得。</p>
<h2 id="相关文件下载地址："><a href="#相关文件下载地址：" class="headerlink" title="相关文件下载地址："></a>相关文件下载地址：</h2><blockquote>
<p><span class="exturl" data-url="aHR0cDovL3d3dy5saXN0YXJ5LmNvbS8=">官方网站<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cDovL3Bhbi5iYWlkdS5jb20vcy8xcEtPRGF3Tg==">下载 Listary 中文版<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>搜索</tag>
      </tags>
  </entry>
  <entry>
    <title>NexusFont</title>
    <url>/posts/nexusfont.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-08/nexusfont/intro.jpg" alt="NexusFont - 超实用的免费字体预览管理工具"></p>
<p>对于设计师或者偶尔喜欢PS一下的朋友或者字体控来说，收集成百上千种字体是很正常的。但是，当字体多起来之后，无论是在茫茫的字海中寻找要使用的字体，还是安装、删除等管理都是一个让人头痛的问题。</p>
<span id="more"></span>

<p><strong>NexusFont</strong> 是一个Windows下的免费字体管理工具，它支持预览、安装、卸载字体，可以一次比较多个字体，可以为字体设置“Tag”(标签)来分类方便以后查找，查找重复的字体，打印，导出为图像，抗锯齿，重命名等多种特性，是一款不可多得的优秀字体管理软件……</p>
<h2 id="字体管理器特色"><a href="#字体管理器特色" class="headerlink" title="字体管理器特色"></a>字体管理器特色</h2><p>NexusFont 最大的特色就是支持 Set(分类集)，支持 Tag(标签)，Set 和 Tag 可以交叉使用，支持快速过滤和 Tag 过滤，支持自定义预览文字，也可以导出预览文字。支持卸载和安装字体，支持多国语言，包含简体中文。</p>
<p><img src="/../imgs/2024-01-08/nexusfont/font.jpg" alt="NexusFont"></p>
<p>NexusFont 可以预览字体不同的字体样式和颜色，甚至反色显示，指定显示的示例文本。预览图像可以打印或保存为图像文件。其它特点包括字体管理（复制，移动，删除，重命名）。</p>
<p>NexusFontNexusFont 还提供了搜索重复字体的工具</p>
<p><img src="/../imgs/2024-01-08/nexusfont/check.jpg" alt="NexusFont"></p>
<h2 id="其他特点"><a href="#其他特点" class="headerlink" title="其他特点"></a>其他特点</h2><ul>
<li>简单美观且实用的用户界面</li>
<li>安装字体时可以选择复制字体到系统 Fonts 文件夹或是保持在字体原路径并添加系统映射。</li>
<li>免费绿色且不写注册表</li>
<li>你可以将字体放入NexusFont 无需安装进系统，可以配合U盘，走到哪用到哪</li>
<li>NexusFont 支持unicode字符映射，将字体导出为图像，打印字体和文件操作等功能</li>
</ul>
<h2 id="相关文件下载地址"><a href="#相关文件下载地址" class="headerlink" title="相关文件下载地址"></a>相关文件下载地址</h2><blockquote>
<p><span class="exturl" data-url="aHR0cDovL3d3dy54aWxlcy5uZXQv">官方网站<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cDovL3Bhbi5iYWlkdS5jb20vcy8xc2tObVU2cA==">下载 NexusFont 中文版<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>字体</tag>
      </tags>
  </entry>
  <entry>
    <title>NW.js 教程</title>
    <url>/posts/nwjs-tutorial.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-05/nwjs-tutorial/intro.jpg" alt="NW.js 入门教程"></p>
<p>本文主要带领大家了解 <strong>NW.js</strong>（前身是 node-webkit） 的基本知识，通过本入门指南的学习，可以让你快速构建一个 NW.js 的桌面应用。</p>
<span id="more"></span>

<h2 id="NW-js-简介"><a href="#NW-js-简介" class="headerlink" title="NW.js 简介"></a>NW.js 简介</h2><p><strong>NW.js</strong> 是一个基于 <strong>Chromium</strong> 和 <strong>node.js</strong> 的应用运行时，通过它可以用 HTML 和 JavaScript 编写原生应用程序。它还允许您从 DOM 调用 Node.js 的模块 ，实现了一个用所有 Web 技术来写原生应用程序的新的开发模式。</p>
<p>这里是 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL253anMvbncuanMvd2lraS9MaXN0LW9mLWFwcHMtYW5kLWNvbXBhbmllcy11c2luZy1udy5qcw==">使用 NW.js 的应用和公司列表<i class="fa fa-external-link-alt"></i></span> ，可以看到 NW.js 实际应用效果。</p>
<h2 id="功能特性"><a href="#功能特性" class="headerlink" title="功能特性"></a>功能特性</h2><ul>
<li>用现代 HTML5,CSS3,JS 和 WebGL 来编写应用程序</li>
<li>完全支持 <span class="exturl" data-url="aHR0cHM6Ly9ub2RlanMub3JnL2FwaS8=">Node.js APIs<i class="fa fa-external-link-alt"></i></span> 和所有其 <span class="exturl" data-url="aHR0cHM6Ly93d3cubnBtanMuY29tLw==">第三方模块<i class="fa fa-external-link-alt"></i></span></li>
<li>良好的性能:Node 和 WebKit 运行在相同的线程:函数调用是更简洁;对象在同一堆可以互相引用;</li>
<li>容易打包和分发应用程序。</li>
<li>支持 Linux、Mac OS X 和 Windows</li>
</ul>
<h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><p>我们新建一个目录 <code>quick-start</code> ，来代表项目名称。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>在 <code>quick-start</code> 目录下，创建 <code>index.html</code> :</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>NW.js 快速入门|www.waylau.com<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>NW.js 快速入门<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    We are using node.js <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">write</span>(process.<span class="property">version</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>.</span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    More demos,see <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.waylau.com&quot;</span> <span class="attr">title</span>=<span class="string">&quot;更多示例&quot;</span>&gt;</span>www.waylau.com<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在 <code>quick-start</code> 目录下，创建 <code>package.json</code> :</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;nw-quick-start-demo&quot;</span>,</span><br><span class="line">  <span class="string">&quot;version&quot;</span>: <span class="string">&quot;0.0.1&quot;</span>,</span><br><span class="line">  <span class="string">&quot;main&quot;</span>: <span class="string">&quot;index.html&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="运行程序"><a href="#运行程序" class="headerlink" title="运行程序"></a>运行程序</h2><p>运行:</p>
<p><code>bash $ /path/to/nw</code> (假设当前目录包含 ‘package.json’)</p>
<p><code>注意:</code> 在 Windows 系统, 拖动包含 <code>package.json</code> 文件夹 <code>quick-start</code> ，到 <code>nw.exe</code> 来打开它。</p>
<p><code>注意：</code>在 OSX 系统,可执行编译文件是在隐藏目录的 .app 文件内。为了在 OSX 运行 node-webkit , 输入:</p>
<p><code>/path/to/nwjs.app/Contents/MacOS/nwjs</code>  (假设当前目录包含 ‘package.json’)</p>
<p><img src="/../imgs/2024-01-05/nwjs-tutorial/code.jpg" alt="NW.js"></p>
<p><strong>效果如下：</strong></p>
<p><img src="/../imgs/2024-01-05/nwjs-tutorial/done.jpg" alt="NW.js"></p>
<h2 id="关于-package-json-的更多设置"><a href="#关于-package-json-的更多设置" class="headerlink" title="关于 package.json 的更多设置"></a>关于 package.json 的更多设置</h2><p>将 <code>quick-start</code> 复制为另外要给项目 <code>quick-start-window</code></p>
<p>修改 <code>package.json</code> 来设置程序</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;nw-quick-start-window-demo&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;main&quot;</span><span class="punctuation">:</span> <span class="string">&quot;index.html&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;window&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;nw-quick-start-window-demo&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;toolbar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;frame&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;show_in_taskbar&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;width&quot;</span><span class="punctuation">:</span> <span class="number">800</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;height&quot;</span><span class="punctuation">:</span> <span class="number">500</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;position&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mouse&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;min_width&quot;</span><span class="punctuation">:</span> <span class="number">400</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;min_height&quot;</span><span class="punctuation">:</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_width&quot;</span><span class="punctuation">:</span> <span class="number">800</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;max_height&quot;</span><span class="punctuation">:</span> <span class="number">600</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>窗口外观常用属性包括：</p>
<ul>
<li>title : 字符串，设置默认 title</li>
<li>width&#x2F;height : 主窗口的大小</li>
<li>toolbar : bool 值，是否显示导航栏</li>
<li>icon : 窗口的 icon</li>
<li>position :字符串，窗口打开时的位置，可以设置为“null”、“center”或者“mouse”</li>
<li>min_width&#x2F;min_height : 窗口的最小值</li>
<li>max_width&#x2F;max_height : 窗口显示的最大值</li>
<li>resizable : bool 值，是否允许调整窗口大小</li>
<li>always-on-top : bool 值，窗口置顶</li>
<li>fullscreen : bool 值，是否全屏显示</li>
<li>show_in_taskbar : 是否在任务栏显示图标</li>
<li>frame : bool 值，如果设置为 false，程序将无边框显示</li>
</ul>
<p><img src="/../imgs/2024-01-05/nwjs-tutorial/main.jpg" alt="NW.js"></p>
<h2 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h2><p>本节以 Windows 环境下为例</p>
<h3 id="新建发布包"><a href="#新建发布包" class="headerlink" title="新建发布包"></a>新建发布包</h3><p>将下载的 NW.js 文件解压，复制一份作为项目的发布包模板，本例名称为 <code>nwjs-v0.12.3-win-x64</code></p>
<h3 id="压缩"><a href="#压缩" class="headerlink" title="压缩"></a>压缩</h3><p>将 <code>quick-start</code> 内的文件压缩成 <code>.zip</code> 文件 <code>quick-start.zip</code> ，修改文件后缀为 <code>quick-start.nw</code></p>
<p><img src="/../imgs/2024-01-05/nwjs-tutorial/cmd.jpg" alt="NW.js"></p>
<p><img src="/../imgs/2024-01-05/nwjs-tutorial/quick.jpg" alt="NW.js"></p>
<h3 id="合成"><a href="#合成" class="headerlink" title="合成"></a>合成</h3><p>将 <code>quick-start.nw</code> 放入发布包 <code>nwjs-v0.12.3-win-x64</code> ，</p>
<p><img src="/../imgs/2024-01-05/nwjs-tutorial/pack.jpg" alt="NW.js"></p>
<p>在命令下，切换到 <code>nwjs-v0.12.3-win-x64</code> 目录，并执行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">copy /b nw.exe+quick-start.nw quick-start.exe</span><br></pre></td></tr></table></figure>

<p><img src="/../imgs/2024-01-05/nwjs-tutorial/compress.jpg" alt="NW.js"></p>
<p>此时，生成了可执行文件 <code>quick-start.exe</code> ，双击即可运行程序</p>
<p><img src="/../imgs/2024-01-05/nwjs-tutorial/pack-ext.jpg" alt="NW.js"></p>
<h3 id="删除冗余"><a href="#删除冗余" class="headerlink" title="删除冗余"></a>删除冗余</h3><p>最终的发布包，未减少体积，可以删除项目用不到的冗余文件，由于 <code>nw.exe</code> 、 <code>quick-start.nw</code> 文件已经合成为了 <code>quick-start.exe</code> ,故删之。又因为该项目简单，没有用到媒体库，可以删除 <code>nwjc.exe</code> 、 <code>ffmpegsumo.dll</code> 等</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>Notation极简笔记</title>
    <url>/posts/notation.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-08/notation/intro.jpg" alt="Notation - 极简轻盈高效的纯文本笔记工具软件"></p>
<p>我们都知道在笔记类软件领域，<span class="exturl" data-url="aHR0cDovL3lpbnhpYW5nLmNvbS8=">印象笔记<i class="fa fa-external-link-alt"></i></span>以及为知笔记已经是最非常优秀的知识管理工具产品了。但总觉得它们用起来很大型很“重”，一些琐碎的文字资料用它们来管理起来感觉有点杀鸡用牛刀了。</p>
<span id="more"></span>

<p>于是很多人就像我一样直接保存 N 份 txt 纯文本文档就完事，但当资料数量多起来后，你会发现管理和查找都变得麻烦起来，直到我遇到了<strong>Notation</strong>这款极简的笔记软件！它的体积足够的小巧轻盈，启动速度极快，界面简约，支持中文全文搜索，支持 Markdown 语法，支持数据同步以及各种高效的快捷键……</p>
<h2 id="实用的免费笔记软件"><a href="#实用的免费笔记软件" class="headerlink" title="实用的免费笔记软件"></a>实用的免费笔记软件</h2><p>对于我来说，<strong>Notation</strong>简直像是量身订做一样。因为，我非常需要一款免费、启动速度足够快、有高效快捷键、可全文搜索的笔记软件来帮我管理、记住一大堆工作和生活上出现的零散、琐碎的事情和资料。</p>
<p><img src="/../imgs/2024-01-08/notation/main.jpg" alt="Notation"></p>
<p>最初我使用<strong>印象笔记</strong>和<strong>为知</strong>来管理，后来我发现这些笔记与我的生活上的笔记混杂在一起不太方便，无论搜索还是分类整理，都无法非常高效地解决问题，干脆直接回到用 txt 文本文档记录，然而最大的问题是即便配合Everything 或 Listary 等工具都不能快速搜索文本里面的内容，而 Notation 则直接提供了我想要的功能。</p>
<p><img src="/../imgs/2024-01-08/notation/list.jpg" alt="Notation"></p>
<p>Notation 支持批量导入 txt 文档以及 zip 压缩包，也可以将数据导出成 txt 或 html 文件。如果你在笔记里使用了 Markdown 语法编写，那么导出时将 Notation 将会把该笔记还原成一个格式排版好的网页。</p>
<p>而且，Notation 支持快捷键操作，如果你喜欢高效的键盘操作方式，那么相信 Notation 能让你喜欢上他。下面是它的快捷键列表：</p>
<h3 id="Notation-键盘快捷键"><a href="#Notation-键盘快捷键" class="headerlink" title="Notation 键盘快捷键"></a>Notation 键盘快捷键</h3><p><code>Win + N</code> 创建一条新笔记<br><code>Ctrl + D</code> 复制创建出多一条相同的笔记<br><code>Ctrl + Shift + F</code> 定位到搜索框(全部笔记)<br><code>Ctrl + Del</code> 删除选中的笔记<br><code>Ctrl + F</code> 定位到搜索框(当前笔记)<br><code>F3</code> 下一条<br><code>Ctrl + L</code> 选中笔记列表<br><code>Ctrl + +</code> 字体增大<br><code>Ctrl + N</code> 将光标移动到笔记文字框<br><code>Ctrl + -</code> 字体减小<br><code>Ctrl + P</code> 打印<br><code>Ctrl + 0</code> 恢复原始字体<br><code>Ctrl + E</code> 导出选中的笔记<br><code>F1</code> 帮助<br><code>Ctrl + Shift + E</code> 导出全部笔记<br><code>ESC</code> 隐藏窗口<br><code>Ctrl + Shift + I</code> 导入笔记<br><code>Ctrl + Q</code> 退出软件</p>
<h2 id="数据同步与跨平台："><a href="#数据同步与跨平台：" class="headerlink" title="数据同步与跨平台："></a>数据同步与跨平台：</h2><p><strong>Notation</strong>还能支持数据同步，它使用了<strong>SimpleNote</strong>的帐号 (<br><span class="exturl" data-url="aHR0cHM6Ly9hcHAuc2ltcGxlbm90ZS5jb20vc2lnbnVwLw==">这里注册<i class="fa fa-external-link-alt"></i></span>) 进行同步的。SimpleNote 也是一款简约的笔记软件服务，提供了 Mac 、iOS 和 Android 平台的客户端以及网页版，但没提供 Windows 版，Notation 恰好填补了这个空白。你只需在 Edit -&gt; Settings -&gt; SimpleNote 中登录帐号即可，因此，你的数据依然是全平台通用的。</p>
<p>总之，如果你需要一款 Windows 上的<strong>极简高效的笔记软件</strong>，Notation 将会是你很好的选择。而它配合 SimpleNote 又能完美的跨平台使用，使得该软件实用性大大提升。作为一款追求高效的笔记软件，或许换换口味试试它不错哦。</p>
<h2 id="相关文件下载地址："><a href="#相关文件下载地址：" class="headerlink" title="相关文件下载地址："></a>相关文件下载地址：</h2><blockquote>
<p><span class="exturl" data-url="aHR0cDovL2dldG5vdGF0aW9uLmNvbS8=">官方网站<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cDovL3Bhbi5iYWlkdS5jb20vcy8xbnRsY1hTSA==">下载 Notation 笔记软件<i class="fa fa-external-link-alt"></i></span>(Win)<br><span class="exturl" data-url="aHR0cDovL3Bhbi5iYWlkdS5jb20vcy8xa1RHVmZL">SimpleNote Android<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9nZW8uaXR1bmVzLmFwcGxlLmNvbS9jbi9hcHAvc2ltcGxlbm90ZS9pZDI4OTQyOTk2Mj9tdD02JmF0PTEwbGFIWg==">SimpleNote IOS<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9nZW8uaXR1bmVzLmFwcGxlLmNvbS9jbi9hcHAvc2ltcGxlbm90ZS9pZDY5Mjg2NzI1Nj9tdD02JmF0PTEwbGFIWg==">SimpleNote Mac<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>PPT美化大师</title>
    <url>/posts/ppt-beautify.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-08/ppt-beautify/intro.jpg" alt="PPT美化大师 - 不会做PPT,也能做好PPT"></p>
<p>今天呢，给大家推荐一款 PPT 插件，拥有了这个插件之后，哪怕你从来没有学习制作过 PPT，它也能让你快速制作出高端大气上档次的 PPT 文档，是你制作课件和讲稿的好帮手，它就是 - <strong>PPT 美化大师</strong>！</p>
<span id="more"></span>

<h2 id="PPT-美化大师介绍"><a href="#PPT-美化大师介绍" class="headerlink" title="PPT 美化大师介绍"></a>PPT 美化大师介绍</h2><p>你会制作 PPT 吗，你的 PPT 漂亮吗，如果不漂亮想变得漂亮的话，可以试试 ppt 美化大师 ，这是一款 ppt 幻灯片软件美化插件，他为用户提供了丰富的 ppt 模板，具有一键美化的特色，每周还会有大量的模板更新，它是办公人士必备的一款辅助工具；<strong>PPT 美化大师</strong>已经完美支持扩展微软**<span class="exturl" data-url="aHR0cDovL3d3dy5qZWZ3YXkuY29tL29mZmljZS0yMDE2Lmh0bWw=">Office<i class="fa fa-external-link-alt"></i></span>**中的 PowerPoint 和国内的 WPS 办公软件了，让你不管用哪一款软件都能制作出精美的 PPT 来。</p>
<p><img src="/../imgs/2024-01-08/ppt-beautify/main.jpg" alt="PPT美化大师"></p>
<h2 id="海量在线模版素材"><a href="#海量在线模版素材" class="headerlink" title="海量在线模版素材"></a>海量在线模版素材</h2><p>专业模板、精美图示、创意画册、实用形状等，细致分类，持续更新，无论是何种美化需求，PPT 美化大师都可以满足您。</p>
<p><img src="/../imgs/2024-01-08/ppt-beautify/sucai.jpg" alt="PPT美化大师"></p>
<h2 id="一键美化，体验智能"><a href="#一键美化，体验智能" class="headerlink" title="一键美化，体验智能"></a>一键美化，体验智能</h2><p>美化魔法师，一键全自动智能美化，精美专业的 PPT 即刻呈现，老板再也不用担心我的 PPT！</p>
<p><img src="/../imgs/2024-01-08/ppt-beautify/zhineng.jpg" alt="PPT美化大师"></p>
<h2 id="一键输出只读-ppt，安全方便"><a href="#一键输出只读-ppt，安全方便" class="headerlink" title="一键输出只读 ppt，安全方便"></a>一键输出只读 ppt，安全方便</h2><p>无需再存为 PDF，一键转为只读模式，不可更改，不可复制，PPT 美化大师,就是这么简单！</p>
<p><img src="/../imgs/2024-01-08/ppt-beautify/fangbian.jpg" alt="PPT美化大师"></p>
<h2 id="完美结合，共享畅快"><a href="#完美结合，共享畅快" class="headerlink" title="完美结合，共享畅快"></a>完美结合，共享畅快</h2><p>完美嵌套在 Office 中，系统稳定，操作简易，运行快速，PPT 美化大师，就是这么自信！</p>
<p><img src="/../imgs/2024-01-08/ppt-beautify/wanmei.jpg" alt="PPT美化大师"></p>
<h2 id="新增功能"><a href="#新增功能" class="headerlink" title="新增功能"></a>新增功能</h2><ul>
<li>新增：资源广场增加资源操作，可直接插入幻灯片或者复制素材</li>
<li>新增：教程改版，增加图文教程，可分享教程</li>
<li>新增：用户收藏资源支持自定义名称</li>
<li>新增：增加新功能提示窗口</li>
<li>新增：图片、形状、幻灯片个人收藏分组支持分享到资源广场和分享链接功能</li>
<li>新增：收藏分享资源，收藏资源广场里其他用户分享的资源</li>
<li>新增：“美化大师资源广场”程序，可以查找和收藏其他用户分享的资源</li>
<li>新增：增加排行榜界面</li>
<li>新增：增加“我的收藏”功能入口</li>
<li>新增：Word 和 Excel 增加在线形状库</li>
<li>新增：组合中对象支持多对象浮动工具栏</li>
<li>新增：多对象浮动工具栏增加”统一宽高“和”更多排列“等功能</li>
<li>新增：形状、图片和文本浮动框增加显示“设置任务窗格”按钮</li>
<li>新增：带文本对象的浮动工具栏增加改变字体大小功能</li>
</ul>
<h2 id="PPT-美化大师下载"><a href="#PPT-美化大师下载" class="headerlink" title="PPT 美化大师下载"></a>PPT 美化大师下载</h2><blockquote>
<p><span class="exturl" data-url="aHR0cDovL21laWh1YS5kb2Nlci5jb20v">PPT 美化大师官网<i class="fa fa-external-link-alt"></i></span> &gt;<span class="exturl" data-url="aHR0cDovL3dkbDEuY2FjaGUud3BzLmNuL3dwcy9kb3dubG9hZC9PZmZpY2VBc3Npc3ROZXcuMDEzMS44MC4xMjAxMi5leGU=">PPT 美化大师下载<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title>Photoshop CC 2015</title>
    <url>/posts/photoshop-2015.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-08/photoshop-2015/intro.jpg" alt="Photoshop CC 2015新功能汇总及下载"></p>
<p><strong>Adobe photoshop cc 2015</strong>是 Adobe 产品史上最大的一次升级，除去 CS6 版本中所包含的功能，Photoshop CC 破解版新增相机防抖动功能、CameraRAW 功能改进、图像提升采样、属性面板改进、Behance 集成等功能，以及 Creative Cloud，即云功能，欢迎大家下载使用。</p>
<span id="more"></span>

<p>Photoshop CC 开启了全新的云时代 PS 服务。Photoshop CC 破解版特别针对摄影师新增了智能锐化、条件动作、扩展智能对象支持、智能放大采样、相机震动减弱等功能，大家来体验更加全新的 PS CC 简体中文破解版吧!除了提供大量的新功能之外,所有的 Creative 套件名称后都加上了“CC”,如 Photoshop CC、InDesign CC、Illustrator CC、Dreamweaver CC、Premiere Pro CC 等。</p>
<blockquote>
<p>下载地址：<span class="exturl" data-url="aHR0cDovL3Bhbi5iYWlkdS5jb20vcy8xYzBmb2RlNA==">http://pan.baidu.com/s/1c0fode4<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p><img src="/../imgs/2024-01-08/photoshop-2015/main.jpg" alt="Photoshop CC 2015"></p>
<h2 id="Photoshop-CC-2015-新增功能"><a href="#Photoshop-CC-2015-新增功能" class="headerlink" title="Photoshop CC 2015 新增功能"></a>Photoshop CC 2015 新增功能</h2><h3 id="Photoshop-CC-2015-多画板支持"><a href="#Photoshop-CC-2015-多画板支持" class="headerlink" title="Photoshop CC 2015 多画板支持"></a>Photoshop CC 2015 多画板支持</h3><p><img src="/../imgs/2024-01-08/photoshop-2015/canvans.jpg" alt="Photoshop CC 2015多画板"></p>
<p><img src="/../imgs/2024-01-08/photoshop-2015/a4" alt="Photoshop CC 2015多画板"></p>
<p>一直以来 Adobe 率次被吐槽不支持多画板支持，如今改版最为引人注目的莫过于此。即使广大设计师们已经习惯了 AI 和 Sketch 的这个特性，但 PS 依旧是 UI 设计的主要工具，它的功能完善无疑使 Adobe 又一次成为了胜利者。</p>
<p>不过，小伙伴们喜大普奔的同时，也在默默的画圈圈，因为刚刚入手的显示器肿么办呀……</p>
<h3 id="深度优化的移动应用程序设计及空间设计"><a href="#深度优化的移动应用程序设计及空间设计" class="headerlink" title="深度优化的移动应用程序设计及空间设计"></a>深度优化的移动应用程序设计及空间设计</h3><p><img src="/../imgs/2024-01-08/photoshop-2015/save.jpg" alt="深度优化的移动应用程序设计及空间设计"></p>
<p><img src="/../imgs/2024-01-08/photoshop-2015/mobile.jpg" alt="深度优化的移动应用程序设计及空间设计"></p>
<p>老虎不发威，你当我是 hello sketch…oh,sorry ‘hello kitty’ ”虽说是玩笑一句，不过 PS cc 2015 如此深度优化了移动应用程序设计，很难不让人产生联想啊。但 UI 设计师童鞋们却兴奋不已，谁不喜欢纯净无骚扰的专属工作空间呢。</p>
<p>”空间设计“打开方式：首选项&gt;技术预览&gt;启用空间设计</p>
<h3 id="液化滤镜增强"><a href="#液化滤镜增强" class="headerlink" title="液化滤镜增强"></a>液化滤镜增强</h3><p>“液化”滤镜比早期版本的滤镜要快很多。“液化”滤镜现在支持智能对象，包括智能对象视频图层，并可被应用为智能滤镜。</p>
<p>其他的改进到“液化”滤镜是重建工具的添加的行为。如果您按住 Alt 键并跨翘曲拖动工具，“重建”工具平滑翘曲，而不是缩小或删除它。</p>
<h3 id="将模糊画廊效果应用为智能滤镜"><a href="#将模糊画廊效果应用为智能滤镜" class="headerlink" title="将模糊画廊效果应用为智能滤镜"></a>将模糊画廊效果应用为智能滤镜</h3><p>模糊画廊中的摄影模糊效果现在支持智能对象，并且可以非破坏性地应用为智能滤镜。此功能也支持智能对象视频图层。</p>
<h3 id="从形状或文本图层复制-CSS-属性"><a href="#从形状或文本图层复制-CSS-属性" class="headerlink" title="从形状或文本图层复制 CSS 属性"></a>从形状或文本图层复制 CSS 属性</h3><p>复制 CSS 可从形状或文本图层生成级联样式表 (CSS) 属性。它会捕获大小、位置、填充颜色(包括渐变)、描边颜色和投影的值。对于文本图层，复制 CSS 还捕获字体系列、字体大小、字体粗细、行高、下划线、删除线、上标、下标和文本对齐的值。CSS 被复制到剪贴板并且可以粘贴到样式表中。</p>
<h3 id="条件动作"><a href="#条件动作" class="headerlink" title="条件动作"></a>条件动作</h3><p>通过条件动作，您可以生成根据多个不同条件之一选择操作的动作。首先选择条件，然后选择性地指定文档满足条件时播放的动作。然后，选择性地指定文档不满足条件时播放的动作。</p>
<h3 id="高-dpi-显示支持"><a href="#高-dpi-显示支持" class="headerlink" title="高 dpi 显示支持"></a>高 dpi 显示支持</h3><p><img src="/../imgs/2024-01-08/photoshop-2015/dpi.jpg" alt="高dpi显示支持"></p>
<p>Photoshop CC 添加了对高 dpi 显示的支持，如 Retina 显示屏。在使用高分辨率的显示功能时，还能以原来文档 200% 的大小查看文档。要以 200% 的大小查看文档，请执行下列任一操作：</p>
<ol>
<li>选取视图 &gt; 200%</li>
<li>按住 Ctrl 键并单击缩放工具图标</li>
<li>按住 Shift 和 Ctrl 键并双击缩放工具图标以 200%的大小查看所有打开文档</li>
</ol>
<h3 id="视图选项的更改"><a href="#视图选项的更改" class="headerlink" title="视图选项的更改"></a>视图选项的更改</h3><p>在缩放工具选项栏和抓手工具选项栏中，以实际大小查看图像的按钮已被重新命名为 100%。此外，这两个工具选项栏都不再有打印尺寸按钮。另外，“视图”菜单中的实际像素命令已更改为 100%</p>
<h3 id="“裁剪”工具更改和增强功能"><a href="#“裁剪”工具更改和增强功能" class="headerlink" title="“裁剪”工具更改和增强功能"></a>“裁剪”工具更改和增强功能</h3><p>裁剪工具的更新包括许多错误修复和增强功能，包括：</p>
<ol>
<li>顶层图像和长宽比菜单中的新预设</li>
<li>单击双箭头图标可通过互换宽度和高度值更改裁剪方向。此图标替换了旋转裁剪框按钮。</li>
<li>从“长宽比”菜单中选取宽 x 高 x 分辨率，会在选项栏中显示分辨率字段，并且会自动填充宽度和高度值。</li>
<li>单击清除按钮可清除选项栏中宽度和高度字段的值。如果显示分辨率字段，也会清除该字段的值。</li>
<li>对于裁剪工具和透视裁剪工具，顶层图像的键盘快捷方式已从 F 更改为 I。</li>
</ol>
<p>裁剪工具选项栏</p>
<p>A. “长宽比”菜单</p>
<p>B. 互换宽度和高度值</p>
<p>C. 叠加选项</p>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>Adobe</tag>
      </tags>
  </entry>
  <entry>
    <title>React Native For Windows</title>
    <url>/posts/react-native-for-windows.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-08/react-native-for-windows/intro.jpg" alt="React Native - Windows下搭建React Native开发环境"></p>
<p>在Facebook官方的说明里, 开发React Native应用提示需要OS X系统，所以一直以为不能在Windows下开发，其实React Native是基于Nodejs环境的，如果我们只用React Native开发Android应用，完全可以在Windows进行。</p>
<span id="more"></span>

<p>以下我按步骤介绍如何在Windows下搭建React Native开发环境：</p>
<h2 id="安装Nodejs"><a href="#安装Nodejs" class="headerlink" title="安装Nodejs"></a>安装Nodejs</h2><p>请到<span class="exturl" data-url="aHR0cHM6Ly9ub2RlanMub3JnL2VuLw==">官网<i class="fa fa-external-link-alt"></i></span>下载Windows版本的Nodejs，我是直接下载5.0版本，React Native的要求是4.0以上都可以支持。</p>
<h2 id="安装react-native-cli"><a href="#安装react-native-cli" class="headerlink" title="安装react-native-cli"></a>安装react-native-cli</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g react-native-cli</span><br></pre></td></tr></table></figure>

<h2 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">react-native init AwesomeProject</span><br></pre></td></tr></table></figure>

<p>init项目时，我这边卡住了很久才初始化完成，可能是下载node_modules太耗时间了。如果你也在init时卡住的话，可以直接clone我初始化好的项目</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/chenyangcun/AwesomeProject.git</span><br></pre></td></tr></table></figure>

<p>代码下载完成后，请将项目目录下的node_modules.zip解压到当前目录。</p>
<blockquote>
<p>注：如果你的网络较快的话，也可以用 <code>npm install</code> 下载node_modules</p>
</blockquote>
<h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><p>请设置环境变量 <code>ANDROID_HOME</code> 指向 Android SDK 的目录</p>
<p><img src="/../imgs/2024-01-08/react-native-for-windows/setting.jpg" alt="React Native"></p>
<h2 id="安装Genymotion模拟器"><a href="#安装Genymotion模拟器" class="headerlink" title="安装Genymotion模拟器"></a>安装Genymotion模拟器</h2><p>请到<span class="exturl" data-url="aHR0cHM6Ly93d3cuZ2VueW1vdGlvbi5jb20v">Genymotion<i class="fa fa-external-link-alt"></i></span>官方下载安装Genymotion模拟器，并创建Android emulator。请参考facebook的<span class="exturl" data-url="aHR0cHM6Ly9mYWNlYm9vay5naXRodWIuaW8vcmVhY3QtbmF0aXZlL2RvY3MvYW5kcm9pZC1zZXR1cC5odG1s">说明<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><p>1.首先启动React Native Server</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">react-native start</span><br></pre></td></tr></table></figure>

<p>2.重新开一个终端(cmd), 切换到项目目录安装APP</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> android</span><br><span class="line">gradlew.bat installDebug</span><br></pre></td></tr></table></figure>

<blockquote>
<p>执行 <code>gradlew.bat installDebug</code> 时，请先开启Genymotion模拟器</p>
</blockquote>
<p>安装成功后，在Genymotion里手动打开APP ，一切正常的话，你就可以看到如下画面。</p>
<p>这时Windows下的React Native开发环境就已经搭建完成。</p>
<p><img src="/../imgs/2024-01-08/react-native-for-windows/simulator.jpg" alt="React Native"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>React</tag>
      </tags>
  </entry>
  <entry>
    <title>Raindrop.io跨平台云端书签</title>
    <url>/posts/raindrop.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-08/raindrop/intro.jpg" alt="Raindrop.io - 跨平台云端书签，让你喜爱的网站，触手可及"></p>
<p>平时我们上网查阅资料、阅读文章等等都有收藏或稍后阅读的需求。而随着人们电脑、手机、平板等各种设备越来越多，当然也希望这些文章收藏&#x2F;网页书签能在任何设备上都能自动同步了。</p>
<span id="more"></span>

<p>虽然现在很多浏览器都有收藏夹同步功能，但如果将各类待读文章与网址收藏夹混杂在一起似乎并不好管理，整理起来很伤脑筋，而且也不能方便地搜索收藏过的内容。Raindrop.io 是一个跨桌面和移动平台的免费<strong>云端网络书签服务</strong>，拥有精致的设计以及方便的收藏保存、分类整理、搜索以及书签同步等功能……</p>
<h2 id="收藏网页利器"><a href="#收藏网页利器" class="headerlink" title="收藏网页利器"></a>收藏网页利器</h2><p>传统的浏览器收藏夹功能仅仅提保存了网页的标题和网址，收藏一时爽，但项目多起来后想要查找或整理就让人死的心都有了。我们认为，一款<strong>强大的网络书签工具</strong>，应该是一个可以在不同设备之前自动同步稍后阅读 (网页&#x2F;文章) 列表，不仅要可以轻松分类整理，还要可以快速搜索查找内容！</p>
<p><img src="/../imgs/2024-01-08/raindrop/main.jpg" alt="Raindrop.io"></p>
<p><strong>Raindrop.io</strong><br>做到了想要的一切，简洁、美观，跨平台提供 Android &#x2F; iOS &#x2F; Mac 平台客户端、网页版以及各大浏览器的插件扩展。你的所有书签都会保存在云端，无论你使用何种设备，都能非常方便地保存、整理以及获取你的书签收藏！！即使在他人的电脑上也能通过网页版进行访问。</p>
<h2 id="网页版"><a href="#网页版" class="headerlink" title="网页版"></a>网页版</h2><p><img src="/../imgs/2024-01-08/raindrop/web.jpg" alt="Raindrop.io"></p>
<h2 id="归类整理、查找搜索、分享书签"><a href="#归类整理、查找搜索、分享书签" class="headerlink" title="归类整理、查找搜索、分享书签"></a>归类整理、查找搜索、分享书签</h2><p><strong>归类整理与查找搜索</strong><br>Raindrop.io 可以给你的收藏的网页添加描述或 Tag 标签，或创建文件夹 (Collection) 进行整理归类，可以帮助你将不同的工作参考资料、有趣的文章、学习资料、稍后待读、软件教程等分门别类整理好。而且当你需要查找相关的书签收藏时，还能通过关键字直接进行搜索，这一点比起浏览器的收藏功能实在是高效太多了。</p>
<p><strong>分享收藏集</strong><br>当你收集整理了一些不错的网页清单 (Collection) 时，譬如「异次元上最值得阅读的文章列表」、「全球最佳的设计类网站」等，还可以通过 Raindrop.io 将这个书签列表分享给好基友们。这比起以前要一个一个复制网址再通过 QQ、微信发给别人简直不能更方便，而且你整理好的列表也能得到更系统化的呈现，更易于传播交流。</p>
<p><img src="/../imgs/2024-01-08/raindrop/share.jpg" alt="Raindrop.io"></p>
<p><strong>协同管理书签收藏</strong><br>你还可以邀请朋友、同事共同管理某个收藏集里的书签，这对于一些需要协作共同查找收集资料的朋友来说会非常实用！毕竟一直以来书签都是“私人物品”，与他人分享收藏夹里的好网站好文章都已困难重重，更别说与别人一起「共用」收藏夹了。作为互联网新一代的书签工具，Raindrop.io 在书签的分享与协同管理上的想象力空间会非常大，应用好这个特性相信一定能帮上不少忙。</p>
<h2 id="更多丰富的特性"><a href="#更多丰富的特性" class="headerlink" title="更多丰富的特性"></a>更多丰富的特性</h2><p>Raindrop 还有很多特性，你不仅可以收藏网页，还能收藏图片&#x2F;视频；可以给收藏夹生成私人或公共的 RSS 订阅地址；支持智能识别文章内容格式化排版；支持从 Chrome、Firefox、Opera、Safari 等主流浏览器以及 Delicious、Instapaper、Pocket、Readability 等服务导入书签；开通付费高级功能后，还可以通过 Dropbox 备份书签、支持多层级文件夹等。</p>
<p>另外它还提供了一个「新标签页插件」(快速拨号)，可以直接替代 Chrome 或 Firefox 的默认新建标签页，你只需要把书签加入到「最喜爱的网站」这个分类里，它们就会出现在新建标签页中了，这样就能更好地替换掉浏览器自身的书签功能了。</p>
<p>Raindrop 可以轻松快速收藏网页、图片、视频等内容</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>Raindrop.io 拥有完善强大的书签保存、分类与管理功能，提供多种平台客户端、浏览器扩展，全面覆盖手，所有书签云端自动同步，还能与他人共享与协作，基本上能想到的书签功能它都已具备，堪称收藏神器了。</p>
<p>而且设计精致的界面、合理的布局，以及完全免费的使用也让 Raindrop 加分不少！可以说，Raindrop.io 也是新一代书签服务的诠释者，非常适合有大量收藏资源以及喜欢整理有序的用户。作为跨平台的应用，Raindrop 无论在 iOS、Android 还是电脑浏览器上都表现出色……</p>
<h2 id="相关文件下载地址："><a href="#相关文件下载地址：" class="headerlink" title="相关文件下载地址："></a>相关文件下载地址：</h2><blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9yYWluZHJvcC5pby8=">官方网站<i class="fa fa-external-link-alt"></i></span><br>下载浏览器插件：<span class="exturl" data-url="aHR0cHM6Ly9jaHJvbWUuZ29vZ2xlLmNvbS93ZWJzdG9yZS9kZXRhaWwvcmFpbmRyb3Bpby1zbWFydC1ib29rbWFyay9sZGdmYmZma2lub29lbG9hZGVrcG1mb2tsbm9icGllbg==">Chrome<i class="fa fa-external-link-alt"></i></span> | <span class="exturl" data-url="aHR0cHM6Ly9yYWluZHJvcC5pby9yZWxlYXNlcy9yYWluZHJvcGlvLnhwaQ==">Firefox<i class="fa fa-external-link-alt"></i></span> | <span class="exturl" data-url="aHR0cHM6Ly9hZGRvbnMub3BlcmEuY29tL2V4dGVuc2lvbnMvZGV0YWlscy9yYWluZHJvcGlvLXNtYXJ0LWJvb2ttYXJrcw==">Opera<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cDovL2YxLm1hcmtldC5taS1pbWcuY29tL2Rvd25sb2FkL0FwcFN0b3JlLzBlYmY4NDRkNmU3OWQzYTg2NzYzMWE4MmIxOTI2NTcwMjM5NDE4N2NiL2lvLnJhaW5kcm9wLnJhaW5kcm9waW8uYXBr">Raindrop 客户端 (Android)<i class="fa fa-external-link-alt"></i></span> &gt;<span class="exturl" data-url="aHR0cHM6Ly9nZW8uaXR1bmVzLmFwcGxlLmNvbS9jbi9hcHAvcmFpbmRyb3AuaW8tbmkteGktYWktd2FuZy9pZDEwMjE5MTM4MDc/bXQ9NiZhdD0xMGxhSFo=">Raindrop 客户端 (IOS)<i class="fa fa-external-link-alt"></i></span> &gt;<span class="exturl" data-url="aHR0cHM6Ly9nZW8uaXR1bmVzLmFwcGxlLmNvbS9jbi9hcHAvcmFpbmRyb3AuaW8ta2VlcC15b3VyLWZhdm9yaXRlcy9pZDk1NzgxMDE1OT9tdD02JmF0PTEwbGFIWg==">Raindrop 客户端 (MAC)<i class="fa fa-external-link-alt"></i></span> &gt;<span class="exturl" data-url="aHR0cHM6Ly9yYWluZHJvcC5pby8=">Raindrop 客户端 (网页版)<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>Seer快速预览工具</title>
    <url>/posts/seer.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-08/seer/intro.jpg" alt="Seer - 空格键快速预览工具"></p>
<p>相信很多使用过苹果的 Mac 电脑的朋友都会对 OS X 系统的一些贴心功能印象深刻，如桌面 Dock 图标栏，屏幕触发角、空格键文件预览等。其实这些功能在 Windows 上也有对应软件可以实现的。</p>
<span id="more"></span>

<p>譬如今天的主角 <strong>Seer</strong> 就可以为 Windows 增加类似 OSX 系统的文件快速预览功能，你只要鼠标选中任意文件并敲下键盘空白键，即可快速“预览”该文件的内容……</p>
<h2 id="文件快速预览功能"><a href="#文件快速预览功能" class="headerlink" title="文件快速预览功能"></a>文件快速预览功能</h2><p>苹果 OS X 系统提供的快速「文件预览」功能非常非常简单：当你鼠标选中任何一个视频、音乐、图片、图标、PSD &#x2F; AI、Office 文档、文本、PDF、ZIP&#x2F;RAR 压缩包等文件后，按下空白键就会立即弹出一个「预览」窗口来显示&#x2F;播放你的文件内容，再按一次则会马上关闭掉。</p>
<p><img src="/../imgs/2024-01-08/seer/main.jpg" alt="Seer"></p>
<p>听起来好像并没有什么卵用吧？因为 Quick Look 这功能似乎太基础太简单了，但实际上用起来却意外的方便！特别在文件多的时候，你不需一一用专门的软件打开它们即可快速地挑选出你要的文件，文件多的时候便利性就能体现出来了，习惯了之后根本离不开……</p>
<h2 id="Windows快速预览工具"><a href="#Windows快速预览工具" class="headerlink" title="Windows快速预览工具"></a>Windows快速预览工具</h2><p>对于习惯了使用 Mac 的同学，平常可能并不会注意到「预览」这个贴心的小功能，但在切换到 Windows 系统工作时才会感觉到好像少了点什么！！于是，终于有程序员对此“不满”，并为此特意为开发了 <strong>Seer</strong>！</p>
<p>Seer 是一款 Windows 下免费的模仿类似 OS X 系统的文件预览功能的工具，可以让你不用打开文件就能快速通过按空白键预览到文件的内容，这对于电脑中文件较多的用户来说非常实用！如图：</p>
<p><img src="/../imgs/2024-01-08/seer/video.jpg" alt="Seer 图片预览Seer - 预览图片"></p>
<p>而且 Seer 的功能比 Mac 自带的预览功能还丰富一点。譬如增加了 Markdown 语法显示支持、代码高亮、 json 和 xml 格式化查看、文本编码检测、文件夹内容预览等。</p>
<h2 id="Seer-的一些截图"><a href="#Seer-的一些截图" class="headerlink" title="Seer 的一些截图"></a>Seer 的一些截图</h2><p><img src="/../imgs/2024-01-08/seer/zip.jpg" alt="视频预览视频预览"></p>
<p><img src="/../imgs/2024-01-08/seer/python.jpg" alt="压缩包预览压缩包文件预览"></p>
<p><img src="/../imgs/2024-01-08/seer/markdown.jpg" alt="代码高亮代码文件预览 (语法高亮)"></p>
<p><img src="/../imgs/2024-01-08/seer/seer.jpg" alt="Markdown 预览Markdown (.md) 文件预览"></p>
<h2 id="Seer-的功能特性"><a href="#Seer-的功能特性" class="headerlink" title="Seer 的功能特性"></a>Seer 的功能特性</h2><ul>
<li>支持常见图片格式的显示，包括 JPG &#x2F; PNG &#x2F; GIF &#x2F; BMP 以及 PSD &#x2F; AI 等</li>
<li>常见视频和音频格式</li>
<li>ZIP 和 RAR 格式压缩包</li>
<li>Txt 纯文本，并支持 Markdown</li>
<li>代码高亮， 并支持 JSON 和 XML</li>
<li>PDF 文档</li>
<li>微软 Office 文档</li>
<li>文件夹内容预览</li>
<li>软件无需联网也不需要额外的权限要求</li>
<li>所有文件预览时均为“只读”模式，不必担心文件内容被误删改</li>
<li>更多的功能可以在“设置”页面看到</li>
</ul>
<h2 id="Seer-使用说明"><a href="#Seer-使用说明" class="headerlink" title="Seer 使用说明"></a>Seer 使用说明</h2><p>除了预览 Office 文档需要安装 Office 软件才能支持外 (2007版本及以上)，其他格式都不需要额外安装任何东西。要注意的是，Office 预览默认不开启，需要手动设置开启，否则只能看到文件大小等属性。</p>
<p>首次启动软件后，可以到桌面右下角找到 Seer 的小图标，右键选择 “Settings” 可以打开设置界面。你除了可以在常规 (General) 一页中设置开机启动 (Run Seer when PC boots) 和一些相关的设置；类型 (Type)一页设置关联的扩展名，Support Microsoft Office Files 一项开启 Office 文档预览支持；键盘 (keyboard) 一页中则可以查看 Seer 的热键，如P键可用于播放&#x2F;暂停等。</p>
<h2 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h2><p>当然，无论你有没用过 Mac OS X 其实都不要紧，Seer 一样都能带来更便利高效的文件预览！而且在 Windows 上如果配合 Listary 一起工作，那么在找文件&#x2F;定位文件时比 Mac 还更有杀伤力！</p>
<p>Seer 的使用也极之简单，安装并运行后它就常驻后台不用管了，通过鼠标选中任何一个文件，敲一下空格就会出现预览，再敲一下就关闭。不过，Seer 仅能支持 Vista 以上的操作系统，实测 Windows 10 完美支持！也就是说，XP 的同学又多了一个升级系统的理由了……</p>
<h2 id="相关文件下载地址"><a href="#相关文件下载地址" class="headerlink" title="相关文件下载地址"></a>相关文件下载地址</h2><blockquote>
<p><span class="exturl" data-url="aHR0cDovL3Bhbi5iYWlkdS5jb20vcy8xZEZITDhhdA==">下载 Seer 文件预览工具<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title>Simplenote简约笔记</title>
    <url>/posts/simplenote.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-08/simplenote/intro.jpg" alt="Simplenote - 简约极致的云同步纯文本笔记软件"></p>
<p>在笔记软件&#x2F;知识管理工具领域，大家都知道<span class="exturl" data-url="aHR0cDovL3d3dy5qZWZ3YXkuY29tL2ltcHJlc3Npb24tbm90ZXMuaHRtbA==">印象笔记<i class="fa fa-external-link-alt"></i></span>、OneNote、为知笔记等，他们就像全能的瑞士军刀，能记录保存你工作、学习和生活上所有的一切。但有时候，你会发现它们太“笨重”了。</p>
<span id="more"></span>

<p>对于记录一些琐碎的文字片段、想法，或者快速的纯文本写作，我们更希望能找到一把锋利小巧的水果刀，而 <strong>Simplenote</strong> 「简单笔记」正是你想要的！它是一款极致简洁、轻盈快速的「云同步纯文本笔记软件」。免费、多平台同步、即时保存、界面清新、支持 Markdown 等特点能让人一下子就会喜欢上它……</p>
<h2 id="极简的云端记事"><a href="#极简的云端记事" class="headerlink" title="极简的云端记事"></a>极简的云端记事</h2><p><strong>Simplenote</strong>「简单笔记」正如它的名字，「简单」是它最大的优点，当然同时也是它的缺点。软件为了能让你专心写作、快速记录文字，连排版功能都舍弃了。在 Simplenote 里面，你只能记录纯粹的文字笔记（纯文本编辑），可以支持 <strong>Markdown</strong> 语法，但并不能插入图片、录音或者调整字体样式、修改颜色等。</p>
<p>你可以将 Simplenote 看作是一个支持跨平台云同步的 TXT 纯文本内容组织管理工具（我相信还有很多人一直是新建 TXT 文档来记录东西的，因为简单！），或者是印象笔记的精简版！不过虽然它只支持纯文本编辑，但 Simplenote 作为一款笔记软件，它本职的管理功能却一点都不差！</p>
<h2 id="精简纯文本版"><a href="#精简纯文本版" class="headerlink" title="精简纯文本版"></a>精简纯文本版</h2><p>首先 Simplenote 支持跨平台云同步，最初它是苹果平台 iOS 和 Mac 上独占的应用，所以曝光度并不算高，但它如今已扩展到了 Android、Windows 和 Linux 等客户端以及网页版访问了。因此你可以在不同的手机、电脑上轻松存取你的笔记。</p>
<p><img src="/../imgs/2024-01-08/simplenote/main.jpg" alt="Simplenote"></p>
<p>在笔记的分类与管理上，Simplenote 支持笔记的「中文」全文搜索，并且可以为笔记添加「Tag 关键字」进行归类，通过「tag:」筛选搜索标签，能快速帮你找到你的笔记。</p>
<p>在编辑方面，支持笔记自动即时保存，而且它支持「笔记版本历史」，如果你不小心修改了笔记，你可以随时将它回滚恢复到之前的某个时间点，以后妈妈再也不用担心你改错笔记了。</p>
<p><img src="/../imgs/2024-01-08/simplenote/text.jpg" alt="Simplenote"></p>
<p>支持 Markdown 语法写作方面，Simplenote 网页版和 Windows 版客户端已经可以支持 Markdown 写作与显示了 (需要在设置里开启)，相信接下来其他版本的客户端也会陆续更新支持的。这点对于热爱使用 MD 写作的朋友来说绝对是一个重大利好消息，因为这将能让 Simplenote 从一个笔记工具蜕变成一款相当不错的 Markdown 写作工具。</p>
<p><img src="/../imgs/2024-01-08/simplenote/pc_app.jpg" alt="Simplenote"></p>
<p>在分享方面，Simplenote 支持用户之间的笔记共享（协同编辑），你只需将朋友同事的 Simplenote 注册邮箱地址作为一个 Tag 添加到笔记上，它们就能阅读并且与你协同编辑这个笔记了。另外，你也能将写好的笔记发布成网页，获取一条链接，然后分享给网上任何人阅读。</p>
<h2 id="笔记数据安全性与服务稳定性"><a href="#笔记数据安全性与服务稳定性" class="headerlink" title="笔记数据安全性与服务稳定性"></a>笔记数据安全性与服务稳定性</h2><p>对于笔记类软件，人们最大的担忧始终还是数据安全本身。Simplenote 是 Automattic 公司旗下的产品，可能很多人对 Automattic 不太熟悉，其实它正是大名鼎鼎的 WordPress 的母公司，背景还是很可靠的。而且它还支持 API 供第三方应用接入。譬如以前介绍过的 Notation 笔记软件就能与 Simplenote 同步笔记了。</p>
<p>Simplenote 其实并不是新上线的服务，印象中它大概是 2009 年就已经发布了，至今已稳定服务了 7 个年头。而且，官方在网页版上还大方地提供了笔记数据打包导出的功能，你可以随时下载备份取回全部的笔记数据，这些数据会以 TXT 文本格式保存，你可以轻松转移到其他笔记软件，这点非常厚道！相信能让人放心不少。</p>
<h2 id="总结下-Simplenote-的特点"><a href="#总结下-Simplenote-的特点" class="headerlink" title="总结下 Simplenote 的特点"></a>总结下 Simplenote 的特点</h2><ul>
<li>多平台，云同步</li>
<li>支持笔记 Tag 便签归类</li>
<li>支持 Markdown 语法 (网页版)</li>
<li>支持全文搜索</li>
<li>可根据更新时间等条件排序</li>
<li>支持版本控制 （笔记版本历史恢复），这个功能相当的赞！！</li>
<li>重要的笔记可以设置置顶</li>
<li>通过加电子邮件作为标签来跟它人协同编辑笔记</li>
<li>可以通过链接分享笔记</li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>总之，Simplenote 给人最深刻的印象就是简单、直接，但不粗暴！它的设计反而让你感觉到小而精美，当启动后，你就会有记录文字的冲动，别无杂念。比起那种大杂烩式软件，Simplenote 会显得特别干净舒适。</p>
<p>Simplenote 足够的轻巧，功能不算多，但每一项功能都是非常重要且实用。你可以用它来记录工作生活的琐碎，也能用于文章写作、打草稿、会议&#x2F;课堂记录、记事、点子灵感、生活日记等等。很多时候，我们并不需要花哨的工具，只要简简单单又能恰到好处地帮助我们，这样的应用无疑就是足够了。</p>
<h2 id="相关文件下载地址"><a href="#相关文件下载地址" class="headerlink" title="相关文件下载地址"></a>相关文件下载地址</h2><blockquote>
<p><span class="exturl" data-url="aHR0cDovL3NpbXBsZW5vdGUuY29tLw==">官方网站<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9pdHVuZXMuYXBwbGUuY29tL2FwcC9zaW1wbGVub3RlL2lkMjg5NDI5OTYy">下载 Simplenote (iOS)<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cDovL3Bhbi5iYWlkdS5jb20vcy8xcEtVSDVadA==">下载 Simplenote (Android)<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0F1dG9tYXR0aWMvc2ltcGxlbm90ZS1lbGVjdHJvbi9yZWxlYXNlcy9kb3dubG9hZC92MS4wLjAvU2ltcGxlbm90ZS0xLjAuMC1TZXR1cC5leGU=">下载 Simplenote (Windows)<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>APP</tag>
      </tags>
  </entry>
  <entry>
    <title>Sketch</title>
    <url>/posts/sketch.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-08/sketch/intro.jpg" alt="Sketch让UI设计变得更简单、更高效"></p>
<p>前一段时间，在设计圈里Sketch可以说是狠狠地火了一把，因为它的简单高效让很多Photoshop的用户投入到了Sketch的怀抱，其实Sketch 是一款界面优美和强大工具兼有的专业绘图应用，能够满足网页、用户界面、图标等的设计需求。无论是网页设计或是图标的设计，在Sketch 中都能轻松设计图层面板，且提供你可能需要的各种操作功能：多层式填充、渐变、噪点、混合模糊等功能。Sketch 还拥有布尔运算来将混合多个形状为更复杂的形状。</p>
<span id="more"></span>

<p><img src="/../imgs/2024-01-08/sketch/list.jpg" alt="Sketch Fullscreen"></p>
<h2 id="Sketch的特点"><a href="#Sketch的特点" class="headerlink" title="Sketch的特点"></a>Sketch的特点</h2><h3 id="1-非破坏性变形"><a href="#1-非破坏性变形" class="headerlink" title="1.非破坏性变形"></a>1.非破坏性变形</h3><p>和PS相比,如果你需要应用一个新的半径,你需要重绘你的形状来确保你复制了正确的尺寸！而在Sketch中,你只需要在radius输入框中输入一个数字</p>
<p><img src="/../imgs/2024-01-08/sketch/dh01.gif" alt="Sketch"></p>
<h3 id="2-基于运算的变形"><a href="#2-基于运算的变形" class="headerlink" title="2.基于运算的变形"></a>2.基于运算的变形</h3><p>在过去用PS的时候经常需要大部分时间使用计算器来计算，但是现在运算功能被集成到应用当中了</p>
<p><img src="/../imgs/2024-01-08/sketch/dh02.gif" alt="Sketch"></p>
<h3 id="3-丈量"><a href="#3-丈量" class="headerlink" title="3.丈量"></a>3.丈量</h3><p>选择丈量工具,打开信息面板,在两个对象之间画出距离,查看结果。你是不是经常在PS中这么干呀？而在Sketch只要按住Option键,把鼠标移到你想要知道距离的对象上。</p>
<p><img src="/../imgs/2024-01-08/sketch/dh03.gif" alt="Sketch"></p>
<h3 id="4-对齐"><a href="#4-对齐" class="headerlink" title="4.对齐"></a>4.对齐</h3><p>PS中的对齐和丈量的过程是相似的，而且同样笨拙；在Sketch中你可以非常快速的使用方向键或者鼠标吧对象移动到你想要的位置</p>
<p><img src="/../imgs/2024-01-08/sketch/dh04.gif" alt="Sketch"></p>
<h3 id="5-嵌套样式"><a href="#5-嵌套样式" class="headerlink" title="5.嵌套样式"></a>5.嵌套样式</h3><p>如果他们的样式是嵌套在一起的，你可以对一组对象的颜色、边框、尺寸等属性进行统一更改。这个功能有非常多的实际应用场景，像测试配色方案，或者一次性编辑一个对象的多个复制</p>
<p><img src="/../imgs/2024-01-08/sketch/dh05.gif" alt="Sketch"></p>
<h3 id="6-非常小的文档尺寸"><a href="#6-非常小的文档尺寸" class="headerlink" title="6.非常小的文档尺寸"></a>6.非常小的文档尺寸</h3><p>对于一个矢量编辑软件来说，你想要的文档文件体积一定是很小的，大多数在Sketch中设计的引用可以达到4mb一下的大小，从而释放你的硬盘空间，而且可以快速打开并开始工作</p>
<h3 id="7-一个文件统领全部内容"><a href="#7-一个文件统领全部内容" class="headerlink" title="7.一个文件统领全部内容"></a>7.一个文件统领全部内容</h3><p>你不需要为每张画布创建一个文档文件(比如PSD)，等同于Sketch中的screen和page，不管你有多少块画布，它们都被包含在同一个文档中；你甚至还可以在程序内部进行搜索，这对于大型项目是一个不错的特性。</p>
<h2 id="Sketch资源和下载"><a href="#Sketch资源和下载" class="headerlink" title="Sketch资源和下载"></a>Sketch资源和下载</h2><blockquote>
<p><span class="exturl" data-url="aHR0cDovL3Bhbi5iYWlkdS5jb20vcy8xNndNUXk=">Sketch中文版下载<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cDovL3d3dy5za2V0Y2hjbi5jb20v">Sketch中文网<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cDovL3d3dy5za2V0Y2hzLmNuL2luZGV4Lmh0bWw=">Sketch中国<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cDovL3MudWkuY24vaW5kZXguaHRtbD9rZXl3b3Jkcz1za2V0Y2gmdHlwZT1leHBlcmllbmNl">UI中国Sketch教程<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title>Typora写作利器</title>
    <url>/posts/typora.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-08/typora/intro.jpg" alt="Typora - 让你爱上写作时轻松惬意的感觉"></p>
<h2 id="源于Markdown写作"><a href="#源于Markdown写作" class="headerlink" title="源于Markdown写作"></a>源于Markdown写作</h2><p>最近呢，我抽了点时间把网站重新规划了一下，我觉得以前的网站比较繁杂、没有真正的主题，而且我平时更新也比较少，网站程序本身也比较臃肿，访问速度不快，等等这些种种原因致使我下定决心重做网站…</p>
<span id="more"></span>

<p>于是我重新选择了一个新的博客程序，重新编写了主题样式，让博客看着和原来差不多；博客程序是支持<code>Markdown语法</code>模式来写作的，我也是第一次接触这种写作方式，接触不久我就发现我爱上了这种写作方式，我也开始寻找一些支持Markdown语法的编辑器，发现有很多不错的编辑软件功能都非常的不错，而我今天为大家推荐的就是这款<strong>Typora</strong>编辑器。</p>
<h2 id="Markdown写作的特点"><a href="#Markdown写作的特点" class="headerlink" title="Markdown写作的特点"></a>Markdown写作的特点</h2><p>Typora 和其他的Markdown编辑器有点不同，因为它将<strong>写作</strong>和<strong>预览</strong>两件事情合在一起了，你输入的地方，也是输出的地方，就像现在很流行的 WYSIWYG（What You See Is What You Get）,其实转念一想，这和 Office Word 没什么不同嘛，只不过编辑文本时不用再去工具栏上点选，一切的格式都能通过符号来控制。</p>
<p>我们来看一下 Typora 官方的演示视频，你就知道这一切是多么的自然啦；没错，所有的行内元素（如加粗、斜体）都会根据当前是否在编辑态而智能地在编辑态和预览态切换，而区块级元素（如标题、列表）则会在按下 Enter 后即时渲染，不能再次编辑，一切都变得如此干净和纯粹。</p>
<p><img src="/../imgs/2024-01-08/typora/main.gif" alt="Typora 演示视频"></p>
<p>当然，Typora 的强大之处不仅仅在于颠覆了 Markdown 编辑器传统的交互模式，它还引入了一系列强大的功能，一起看看吧。</p>
<h2 id="如此简单的表格编辑"><a href="#如此简单的表格编辑" class="headerlink" title="如此简单的表格编辑"></a>如此简单的表格编辑</h2><p>用过 Markdown 原生格式编辑表格的，一定知道那是多么痛苦的一件事情，因为它的是这样的：</p>
<p><img src="/../imgs/2024-01-08/typora/table.jpg" alt="原格式编辑表格"></p>
<p>还好，Typora 提供了像 Office 一样的表格编辑能力,通过<code>Ctrl+Alt+T</code>快捷键即可以插入表格，Typora 会弹出一个表格插入设置，你可以预先设定好行数和列数，确定后表格就出现了，每一列上面还有三个按钮，可以控制本列的文字向左、居中、向右对齐，甚至，你可以点击左上角改变表格的行数和列数，是不是一种 Office 的既视感，但却又如此得恰到好处，弥补了 Markdown 编辑器中反人类的表格编辑设定。</p>
<p><img src="/../imgs/2024-01-08/typora/insert_table.jpg" alt="进入插入表格模式"></p>
<p><img src="/../imgs/2024-01-08/typora/more_table.jpg" alt="插入表格输入数据"></p>
<p><img src="/../imgs/2024-01-08/typora/table_edit.jpg" alt="快速设置表格行列"></p>
<h2 id="快速插入图片变得更简单"><a href="#快速插入图片变得更简单" class="headerlink" title="快速插入图片变得更简单"></a>快速插入图片变得更简单</h2><p>在传统的 Markdown 编辑器中，如果想要插入一张图片，默认的语法是这样的：</p>
<p><code>![logo](http://typora.io/img/favicon-128.png)</code></p>
<p>而在 Typora 中，你只需要像把图片拖拽进去，就大功告成了，完全不用记住语法格式，再也不用输文件名，再也不用自己去找文件的路径地址，就是这么简单。</p>
<p><img src="/../imgs/2024-01-08/typora/img.jpg" alt="快速插入图片"></p>
<h2 id="Typora其他的一些功能介绍"><a href="#Typora其他的一些功能介绍" class="headerlink" title="Typora其他的一些功能介绍"></a>Typora其他的一些功能介绍</h2><ul>
<li>Lists列表</li>
</ul>
<p><img src="/../imgs/2024-01-08/typora/list.jpg" alt="Lists"></p>
<ul>
<li>Code Fences代码高亮</li>
</ul>
<p><img src="/../imgs/2024-01-08/typora/code.jpg" alt="Code Fences"></p>
<ul>
<li>Toc 主题大纲</li>
</ul>
<p><img src="/../imgs/2024-01-08/typora/toc.jpg" alt="Toc"></p>
<h2 id="个性主题，随心定制"><a href="#个性主题，随心定制" class="headerlink" title="个性主题，随心定制"></a>个性主题，随心定制</h2><p>Typora 默认提供了六套主题样式：Github、默认主题 Gothic、出版风格的 Newsprint、夜间模式 Night、Pixyll 和 Whitey，每一款主题都非常精美。并且，主题是基于 CSS 样式的，这意味着你可以自己新增任何主题，或者在当前主题的基础上做一些微调；想想某些厂商的换肤换色，不知道高到哪里去了。</p>
<p><img src="/../imgs/2024-01-08/typora/dingzhi.jpg" alt="Typora"></p>
<p><img src="/../imgs/2024-01-08/typora/dark.jpg" alt="Typora"></p>
<p><img src="/../imgs/2024-01-08/typora/paiban.jpg" alt="Typora"></p>
<p><img src="/../imgs/2024-01-08/typora/white.jpg" alt="Typora"></p>
<h2 id="Typora下载"><a href="#Typora下载" class="headerlink" title="Typora下载"></a>Typora下载</h2><blockquote>
<p><span class="exturl" data-url="aHR0cDovL3d3dy50eXBvcmEuaW8v">官方网站<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cDovL3Bhbi5iYWlkdS5jb20vcy8xcEswZU9JWg==">Typora(win)下载<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>写作</tag>
      </tags>
  </entry>
  <entry>
    <title>Sublime Text</title>
    <url>/posts/sublime-text.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-08/sublime-text/intro.jpg" alt="Sublime Text 漂亮实用的跨平台代码编辑器"></p>
<p>代码编辑器对于程序员来说，就像剑客的剑一样无比的重要，拥有一款得心应手的代码编辑器会使程序员的工作效率提高一倍，相信每一位程序员，同样会去追求最适合自己的强大、灵活的编辑器，相信你和我一样，都不会例外。</p>
<span id="more"></span>

<h2 id="关于-Sublime-Text"><a href="#关于-Sublime-Text" class="headerlink" title="关于 Sublime Text"></a>关于 Sublime Text</h2><p>SublimeText 支持 C, C++, C#, CSS, D, Erlang, HTML, Groovy, Haskell, HTML, Java, JavaScript, LaTeX, Lisp, Lua, Markdown, Matlab, OCaml, Perl, PHP, Python, R, Ruby, SQL, TCL, Textile and XML 等主流编程语言的语法高亮，它还拥有优秀的代码自动完成功能 (自动补齐括号，大括号等配对符号；自动补全已经出现的单词；自动补全函数名)，非常智能；另外Sublime Text也拥有代码片段（Snippet）的功能，可以将常用的代码片段保存起来，在需要时随时调用。当然，语法高亮、代码折叠、行号显示、自定义皮肤、配色方案等这些已经是一款现代编辑器应有的标配功能了</p>
<h2 id="Sublime-Text-一些功能展示"><a href="#Sublime-Text-一些功能展示" class="headerlink" title="Sublime Text 一些功能展示"></a>Sublime Text 一些功能展示</h2><p><img src="/../imgs/2024-01-08/sublime-text/code.gif" alt="使用多个选择快速重命名变量， 在这里 Ctrl + D 用于选择下一个当前单词的出现"></p>
<p><img src="/../imgs/2024-01-08/sublime-text/more_line.gif" alt="与多个选择批量编辑, 在这里 Ctrl + Shift + L 用于选择分割成线,然后每一行都是同时编辑"></p>
<p><img src="/../imgs/2024-01-08/sublime-text/config.gif" alt="命令面板提供快速访问功能, 在这里 Ctrl + Shift + P 用于显示命令面板,“sspy”(简称集语法:Python)设置当前文件的语法使用Python"></p>
<p><img src="/../imgs/2024-01-08/sublime-text/set_theme.gif" alt="使用Goto任何快速导航文件之间,即使在最大的项目, Ctrl + P 显示转到什么,然后输入过滤文件和目录的名称"></p>
<p><img src="/../imgs/2024-01-08/sublime-text/function.gif" alt="转到什么也可以用来表示一个函数,行或单词在一个文件, 类型@文件名后过滤符号"></p>
<p><img src="/../imgs/2024-01-08/sublime-text/quick_edit.gif" alt="用正则表达式查找和替换, 这多余的空格删除使用正则表达式“+”找到的空间,然后选择同时找到所有按钮"></p>
<h2 id="扩展包管理器Package-Control"><a href="#扩展包管理器Package-Control" class="headerlink" title="扩展包管理器Package Control"></a>扩展包管理器Package Control</h2><p>Sublime Text 除了自身拥有无数实用功能和特性之外，它还能安装使用各种扩展&#x2F;皮肤&#x2F;配色方案等来增强自己。现在介绍的这个 Package Control 可以看做是一个Sublime Text的扩展管理器，使用它，你可以用非常神奇、非常简单方便的方法去下载、安装、删除 Sublime Text 的各种插件、皮肤等,不过Sublime Text 本身并没有自带这个工具，我们需要自行安装它，方法很简单：</p>
<ol>
<li>在 SublimeText2 的目录里面找到 Data &gt; Installed Packages 的文件夹 (如没有请手动新建)</li>
<li>在这里下载<span class="exturl" data-url="aHR0cDovL3Bhbi5iYWlkdS5jb20vcy8xbzZMN25Caw==">Package Control.sublime-package<i class="fa fa-external-link-alt"></i></span>文件</li>
<li>将下载到的文件放进去 Installed Packages 里面</li>
<li>重新启动 Sublime Text 即可如果 Package Control 已经安装成功，那么 Ctrl+Shift+P 调用命令面板，我们就会找到一些以“Package Control:”开头的命令，我们常用到的就是几个 Install Package (安装扩展)、List Packages (列出全部扩展)、Remove Package (移除扩展)、Upgrade Package (升级扩展)</li>
</ol>
<h2 id="更换主题或配色方案"><a href="#更换主题或配色方案" class="headerlink" title="更换主题或配色方案"></a>更换主题或配色方案</h2><p>如果你看腻了 SublimeText 的原版皮肤，也可以折腾一下换肤的,譬如下图是一款比较流行的主题 Theme - Soda，和安装插件基本上一样，使用 Package Control 进入 Install Package 的列表里面找到它进行安装即可,你也可以在网上找到一些 SublimeText 的主题，下载回来放到安装目录的 Data\Packages 文件夹里面，然后选择切换主题</p>
<p><img src="/../imgs/2024-01-08/sublime-text/white.jpg" alt="Soda Theme: Soda Light"></p>
<p><img src="/../imgs/2024-01-08/sublime-text/dark.jpg" alt="Soda Theme: Soda Dark"></p>
<h2 id="下载SublimeText"><a href="#下载SublimeText" class="headerlink" title="下载SublimeText"></a>下载SublimeText</h2><blockquote>
<p><span class="exturl" data-url="aHR0cDovL3Bhbi5iYWlkdS5jb20vcy8xbnpJUk8=">SublimeText-32位下载<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cDovL3Bhbi5iYWlkdS5jb20vcy8xcVczU29ieQ==">SublimeText-64位下载<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>编辑器</tag>
      </tags>
  </entry>
  <entry>
    <title>Vagrant跨平台开发</title>
    <url>/posts/vagrant.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-08/vagrant/intro.jpg" alt="Vagrant - 帮你实现跨平台开发环境"></p>
<p>做Web开发少不了要在本地搭建好开发环境，虽然说目前各种脚本都有对应的Windows版，甚至是一键安装包，但很多时候和Windows环境的相性并不是那么好，各麻烦的问题是实际部署的环境通常是Linux，常常还要面临着开发和部署环境不一致，上线前还要大量的调试。更要命的是，如果有很多机器需要装的话，那就真是一个灾难了。</p>
<span id="more"></span>

<p>Windows下玩Linux少不了虚拟机，但装系统依旧是相当费事。在现在什么都在自动化的今天，Vagrant就是这么一个神器，基于Ruby开发，使用开源 VirtualBox 作为虚拟化支持，可以轻松的跨平台部署。</p>
<p>今天试着把几台机器的环境都换成Vagrant，很爽很顺畅，于是就试着整理了一下使用小结：</p>
<h2 id="Vagrant-是什么？"><a href="#Vagrant-是什么？" class="headerlink" title="Vagrant 是什么？"></a>Vagrant 是什么？</h2><p>Vagrant 是一款用来构建虚拟开发环境的工具，非常适合 php&#x2F;python&#x2F;ruby&#x2F;java 这类语言开发 web 应用，“代码在我机子上运行没有问题”这种说辞将成为历史。</p>
<p>我们可以通过 Vagrant 封装一个 Linux 的开发环境，分发给团队成员。成员可以在自己喜欢的桌面系统（Mac&#x2F;Windows&#x2F;Linux）上开发程序，代码却能统一在封装好的环境里运行，非常霸气。</p>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>下载安装 VirtualBox ：<span class="exturl" data-url="aHR0cHM6Ly93d3cudmlydHVhbGJveC5vcmcv">https://www.virtualbox.org/<i class="fa fa-external-link-alt"></i></span></p>
<p>下载安装 Vagrant ：<span class="exturl" data-url="aHR0cDovL3d3dy52YWdyYW50dXAuY29tLw==">http://www.vagrantup.com/<i class="fa fa-external-link-alt"></i></span></p>
<p>下载需要使用的 box ：</p>
<p>官方提供的范例：<span class="exturl" data-url="aHR0cDovL2ZpbGVzLnZhZ3JhbnR1cC5jb20vcHJlY2lzZTMyLmJveA==">http://files.vagrantup.com/precise32.box<i class="fa fa-external-link-alt"></i></span></p>
<p>还可以在 <span class="exturl" data-url="aHR0cDovL3d3dy52YWdyYW50Ym94LmVzLw==">http://www.vagrantbox.es/<i class="fa fa-external-link-alt"></i></span> 这里下载更多不同系统甚至是已经配置好环境直接可以用的box，虽然可以直接在Vagrant直接使用网址，由Vagrant自动下载安装，但是考虑到网络情况，还是建议自行先下载好。</p>
<p>由于习惯用CentOS，于是我就下了CentOS 6.3 x86_64 minimal，这个Box根据个人情况进行选择即可。</p>
<h2 id="环境设置"><a href="#环境设置" class="headerlink" title="环境设置"></a>环境设置</h2><h3 id="添加镜像到-Vagrant"><a href="#添加镜像到-Vagrant" class="headerlink" title="添加镜像到 Vagrant"></a>添加镜像到 Vagrant</h3><p>假设我们下载的镜像存放路径是 <code>E:/box/precise64.box</code>，在终端里输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ vagrant box add base CentOS-6.3-x86_64-minimal.box</span><br></pre></td></tr></table></figure>

<p><code>base</code> 是我们给这个 box 命的名字，<code>E:/box/precise64.box</code> 是 box 所在路径</p>
<h3 id="初始化开发环境"><a href="#初始化开发环境" class="headerlink" title="初始化开发环境"></a>初始化开发环境</h3><p>创建一个开发目录（比如：<code>E:/dev</code>），你也可以使用已有的目录，切换到开发目录里，用 <code>base</code> 镜像初始化当前目录的环境：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> E:/dev  <span class="comment"># 切换目录</span></span><br><span class="line">$ vagrant init base  <span class="comment"># 初始化</span></span><br><span class="line">$ vagrant up  <span class="comment"># 启动环境</span></span><br></pre></td></tr></table></figure>

<p>你会看到终端显示了启动过程，启动完成后，我们就可以用 SSH 登录虚拟机了，剩下的步骤就是在虚拟机里配置你要运行的各种环境和参数了。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ vagrant ssh  <span class="comment"># SSH 登录</span></span><br><span class="line">$ <span class="built_in">cd</span> /vagrant  <span class="comment"># 切换到开发目录，也就是宿主机上的 `E:/dev`</span></span><br></pre></td></tr></table></figure>

<p><code>E:/dev</code> 目录对应虚拟机中的目录是 <code>/vagrant</code></p>
<p><strong>Windows 用户注意：</strong>Windows 终端并不支持 ssh，所以需要安装第三方 SSH 客户端，比如：Putty、Cygwin 等。</p>
<h2 id="其他设置"><a href="#其他设置" class="headerlink" title="其他设置"></a>其他设置</h2><p>Vagrant 初始化成功后，会在初始化的目录里生成一个 <code>Vagrantfile</code> 的配置文件，可以修改配置文件进行个性化的定制。</p>
<p>Vagrant 默认是使用端口映射方式将虚拟机的端口映射本地从而实现类似 <code>http://localhost:80</code> 这种访问方式，这种方式比较麻烦，新开和修改端口的时候都得编辑。相比较而言，host-only 模式显得方便多了。打开 <code>Vagrantfile</code>，将下面这行的注释去掉（移除 <code>#</code>）并保存：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">config.vm.network :private_network, ip: <span class="string">&quot;192.168.33.10&quot;</span></span><br></pre></td></tr></table></figure>

<p>重启虚拟机，这样我们就能用 <code>192.168.33.10</code> 访问这台机器了，你可以把 IP 改成其他地址，只要不产生冲突就行。</p>
<h3 id="Vagrant-网络配置的三种模式"><a href="#Vagrant-网络配置的三种模式" class="headerlink" title="Vagrant 网络配置的三种模式"></a>Vagrant 网络配置的三种模式</h3><p>1、较为常用是端口映射，就是将虚拟机中的端口映射到宿主机对应的端口直接使用 ，在<code>Vagrantfile</code>中配置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">config.vm.network :forwarded_port, guest: 80, host: 8080</span><br></pre></td></tr></table></figure>

<p><code>guest: 80</code> 表示虚拟机中的80端口， <code>host: 8080</code> 表示映射到宿主机的8080端口。</p>
<p>2、如果需要自己自由的访问虚拟机，但是别人不需要访问虚拟机，可以使用private_network，并为虚拟机设置IP ，在<code>Vagrantfile</code>中配置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">config.vm.network :private_network, ip: <span class="string">&quot;192.168.1.104&quot;</span></span><br></pre></td></tr></table></figure>

<p><code>192.168.1.104</code> 表示虚拟机的IP，多台虚拟机的话需要互相访问的话，设置在相同网段即可</p>
<p>3、如果需要将虚拟机作为当前局域网中的一台计算机，由局域网进行<code>DHCP</code>，那么在<code>Vagrantfile</code>中配置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">config.vm.network :public_network</span><br></pre></td></tr></table></figure>

<h3 id="Vagrant-目录映射"><a href="#Vagrant-目录映射" class="headerlink" title="Vagrant 目录映射"></a>Vagrant 目录映射</h3><p>既然是开发环境，那么开发工作肯定还是需要在本地完成，而不是都要进到虚拟机中去完成，虚拟机就好好在后台运行服务就好了，不然就本末倒置了，所以这里就需要使用目录映射功能，将本地的目录映射到虚拟机的对应目录。</p>
<p>默认情况下，当前的工作目录，会被映射到虚拟机的 <code>/vagrant</code> 目录，当前目录下的文件可以直接在 <code>/vagrant</code> 下进行访问，当然也可以在通过 <code>ln</code> 创建软连接，如</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ln</span> -fs /vagrant/wwwroot /var/www</span><br></pre></td></tr></table></figure>

<p>来进行目录映射，当然，从自动化配置的角度，能不进系统就不需要进系统，所以在Vagrant也可以进行目录映射的操作：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">config.vm.synced_folder <span class="string">&quot;wwwroot/&quot;</span>, <span class="string">&quot;/var/www&quot;</span></span><br></pre></td></tr></table></figure>

<p>前面的参数 “<code>wwwroot/</code>”  表示的是本地的路径，这里使用对于工作目录的相对路径，这里也可以使用绝对路径，比如： “<code>E:/www/</code>”</p>
<p>后面的参数 “<code>/var/www</code>” 表示虚拟机中对应映射的目录。</p>
<h2 id="Vagrant-打包分发"><a href="#Vagrant-打包分发" class="headerlink" title="Vagrant 打包分发"></a>Vagrant 打包分发</h2><p>当你配置好开发环境后，退出并关闭虚拟机。在终端里对开发环境进行打包：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ vagrant package</span><br></pre></td></tr></table></figure>

<p>打包完成后会在当前目录生成一个 <code>package.box</code> 的文件，将这个文件传给其他用户，其他用户只要添加这个 box 并用其初始化自己的开发目录就能得到一个一模一样的开发环境了。</p>
<h2 id="Vagrant-常用命令"><a href="#Vagrant-常用命令" class="headerlink" title="Vagrant 常用命令"></a>Vagrant 常用命令</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ vagrant init  <span class="comment"># 初始化</span></span><br><span class="line">$ vagrant up  <span class="comment"># 启动虚拟机</span></span><br><span class="line">$ vagrant halt  <span class="comment"># 关闭虚拟机</span></span><br><span class="line">$ vagrant reload  <span class="comment"># 重启虚拟机</span></span><br><span class="line">$ vagrant ssh  <span class="comment"># SSH 至虚拟机</span></span><br><span class="line">$ vagrant status  <span class="comment"># 查看虚拟机运行状态</span></span><br><span class="line">$ vagrant destroy  <span class="comment"># 销毁当前虚拟机</span></span><br></pre></td></tr></table></figure>

<h2 id="Vagrant-的一些注意事项"><a href="#Vagrant-的一些注意事项" class="headerlink" title="Vagrant 的一些注意事项"></a>Vagrant 的一些注意事项</h2><p>使用 <code>Apache/Nginx</code> 时会出现诸如图片修改后但页面刷新仍然是旧文件的情况，是由于静态文件缓存造成的。需要对虚拟机里的 <code>Apache/Nginx</code> 配置文件进行修改：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Apache 配置添加:</span></span><br><span class="line">EnableSendfile off</span><br><span class="line"></span><br><span class="line"><span class="comment"># Nginx 配置添加:</span></span><br><span class="line">sendfile off;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>开发</tag>
      </tags>
  </entry>
  <entry>
    <title>Video Grabber</title>
    <url>/posts/video-grabber.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-05/video-grabber/intro.jpg" alt="Video Grabber"></p>
<p>在线视频网站很多，虽然在国内已有不少视频下载软件，部分网站也提供了自己的 App，但是它们下载视频的功能大多比较单一，而且还内置了不少广告。</p>
<span id="more"></span>

<p><strong>Video Grabber</strong> 是一个基于浏览器网页端的应用，无需安装桌面端程序，也不需要安装 Java (但需在首次下载时安装一个小巧的启动器)，即可在网页上直接使用在线视频下载、视频格式转换和屏幕录像功能。Video Grabber 界面干净、简单，支持谷歌、火狐等主流浏览器，下载视频时还可以过滤掉前面的广告……</p>
<h2 id="在线视频下载"><a href="#在线视频下载" class="headerlink" title="在线视频下载"></a>在线视频下载</h2><p><img src="/../imgs/2024-01-05/video-grabber/down.jpg" alt="Video Grabber"></p>
<p>Video Grabber 可以帮您下载优酷、爱奇艺、哔哩哔哩、搜狐等主流视频网站的视频。只需一键点击，就可以识别找到在线视频的真实下载地址，帮助你快速下载。</p>
<p>而且 Video Grabber 会提供多种视频文件格式可供选择，比如 MP4、FLV、3GP、WMV、WEBM 等等。您还可以选择高清（HD）视频格式。</p>
<h2 id="视频格式转换"><a href="#视频格式转换" class="headerlink" title="视频格式转换"></a>视频格式转换</h2><p><img src="/../imgs/2024-01-05/video-grabber/format.jpg" alt="Video Grabber"></p>
<p>使用 Video Grabber 内置的格式转换功能，您可以将电脑里的视频文件快速转换成你需要的格式，比如 MP4、AVI、WMV、MOV、WebM、MKV、MP3、WAV、M4A。 Video Grabber 提供了多达 14 种主流视频格式以及 11 种常用音频格式的支持,而且还能自定义音视频设置，包括分辨率、比特率、帧速率、声道、采样率等。并且它还提供高级设置的服务：比如剪辑视频、调整视频大小、添加特效及水印。</p>
<p>有些有版权限制的歌曲，小伙伴们可以将 MV 以视频形式下载下来，然后再利用转换功能将其转换成 MP3 格式的音频文件即可放在手机里随时播放了。对于利用美剧、公开课等视频来学习外语或英语听力的朋友很实用。</p>
<h2 id="录屏功能"><a href="#录屏功能" class="headerlink" title="录屏功能"></a>录屏功能</h2><p>Video Grabber 还提供了屏幕录像&#x2F;截图的录屏功能，使用它，您可以将电脑屏幕上的所有活动抓取下来，然后保存为截图或者视频文件。另外，此功能还配置了多种实用的视频工具。总之，有了它，您可以轻而易举地录制网络会议、网络直播、视频聊天、视频教程、游戏直播等其他各种活动。</p>
<p><img src="/../imgs/2024-01-05/video-grabber/screen.jpg" alt="屏幕录像工具"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>总之，Video Grabber 免费为小伙伴们提供了关于在线视频、音频用得最多的功能，包括下载、转换、录屏等。此工具跟之前推荐过的 iOS 屏幕录像工具是同一个开发商，产品还是挺简单实用的。</p>
<p>重要的是，它并不强制你安装传统的体积巨大的客户端软件，你只需安装一个小巧的启动器，即可在任何电脑的浏览器上随意使用，灵活性很强。</p>
<p>另外，除了启动器外，Video Grabber 其实也提供了「桌面客户端」下载，对于有经常下载视频、转换视频需求的朋友可以安装一个试试。不过，桌面版是收费的，非重度用户建议用免费的网页版即可。</p>
<h2 id="相关文件下载"><a href="#相关文件下载" class="headerlink" title="相关文件下载"></a>相关文件下载</h2><blockquote>
<p><span class="exturl" data-url="aHR0cDovL3d3dy52aWRlb2dyYWJiZXIubmV0L3poLw==">访问 Video Grabber<i class="fa fa-external-link-alt"></i></span> &gt; <span class="exturl" data-url="aHR0cDovL2Rvd25sb2FkLmFwb3dlcnNvZnQuY24vdmlkZW8tZG93bmxvYWQtY2FwdHVyZS1jbi5leGU=">下载桌面版<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>视频</tag>
      </tags>
  </entry>
  <entry>
    <title>Vim代码神器</title>
    <url>/posts/vim-editer.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-08/vim-editer/intro.jpg" alt="Vim - 古老而神秘的代码神器"></p>
<p><strong>Vim</strong> 是 Linux 系统上的最著名的文本&#x2F;代码编辑器，也是早年的 Vi 编辑器的加强版，而 gVim 则是其 Windows 版；它的最大特色是完全使用键盘命令进行编辑，脱离了鼠标操作虽然使得入门变得困难，但上手之后键盘流的各种巧妙组合操作却能带来极为大幅的效率提升。</p>
<span id="more"></span>

<p>因此 Vim 和现代的编辑器（如 <span class="exturl" data-url="aHR0cDovL3d3dy5qZWZ3YXkuY29tL3N1YmxpZW0tdGV4dC5odG1s">Sublime Text<i class="fa fa-external-link-alt"></i></span>）有着非常巨大的差异，而且入门学习曲线陡峭，需要记住很多按键组合和命令，如今被看作是高手、Geek 们专用的编辑器。尽管 Vim 已经是古董级的软件，但还是有无数新人迎着困难去学习使用，可见其经典与受欢迎程度。另外，由于 Vim 的可配置性非常强，各种插件、语法高亮配色方案等多不胜数，无论作为代码编辑器或是文稿撰写工具都非常给力……</p>
<h2 id="难以驾驭的神器：Vim"><a href="#难以驾驭的神器：Vim" class="headerlink" title="难以驾驭的神器：Vim"></a>难以驾驭的神器：Vim</h2><p>无论是小说中还是电视剧，一些真正强大的武器总不是那么容易驾驭的，主角总得付出一些努力才能收获到更加强大的力量，对于 Vim 这种上古神器来说更是如此。由于它全程使用键盘操作，你必须记住一堆快捷键、按键组合以及各种命令才能开始使用，很多首次接触 Vim 的人会觉得越学越复杂而中途放弃。然而，坚持下来的朋友就会渐渐地发现这种键盘流操作的设计绝妙之处！经典之所以能成为经典，必然有它的道理，我想我也不用解释太多～</p>
<h2 id="Vim-编辑器界面截图："><a href="#Vim-编辑器界面截图：" class="headerlink" title="Vim 编辑器界面截图："></a>Vim 编辑器界面截图：</h2><p><img src="/../imgs/2024-01-08/vim-editer/code.jpg" alt="Vim 编辑器界面截图"></p>
<p><img src="/../imgs/2024-01-08/vim-editer/color.jpg" alt="Vim 编辑器界面截图"></p>
<p><img src="/../imgs/2024-01-08/vim-editer/more_color.jpg" alt="Vim 编辑器界面截图"></p>
<p><img src="/../imgs/2024-01-08/vim-editer/gree_color.jpg" alt="Vim 编辑器界面截图"></p>
<h2 id="Vim-虽然历史悠久，但却恒远流长"><a href="#Vim-虽然历史悠久，但却恒远流长" class="headerlink" title="Vim 虽然历史悠久，但却恒远流长"></a>Vim 虽然历史悠久，但却恒远流长</h2><p>由于 VIM 的操作方式实在太过经典，学习并上手之后将会获益良多，譬如刚刚介绍过的 “<span class="exturl" data-url="aHR0cDovL3d3dy5qZWZ3YXkuY29tL3ZpbWl1bS5odG1s">Vimium - 让你体验 Geek 般的浏览体验<i class="fa fa-external-link-alt"></i></span>” 之类一些工具，往往很多精彩的软件或多或少都会参考 Vim 的一些操作思想去设计它们的热键。而由于其强大灵活的可配置性，各种插件、语法高亮、代码补全、配色方案等资源极其丰富，很多程序员也将其打造成属于自己的首选代码编辑器，对于时下各种热门的编程语言，VIM 都支持得相当的完美；而对于一些文字工作者，Vim 作为一款文本撰写器也是极其“锋利”的武器；</p>
<p>特别是，如果你是一位 IT 界人士，需要或将要与 Linux 系统打交道，那么学习好 Vim 的操作绝对能让你的工作轻松百倍！！因为很多时候， Linux 作为服务器是不会开启图形界面，当需要远程操作时，你只能利用 SSH“命令字符式”的 Shell 界面对其进行操作，这时如果你需要修改服务器上的网页代码或配置文件，VI 或 VIM 命令就是你最佳最方便也是最强大的伙伴了！相信我，学好 数理化 VIM，走遍天下也不怕……</p>
<h2 id="Vim-的教程与学习资料汇总"><a href="#Vim-的教程与学习资料汇总" class="headerlink" title="Vim 的教程与学习资料汇总"></a>Vim 的教程与学习资料汇总</h2><h3 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a>官方文档</h3><p>当你首次安装好 Vim 之后，可以用 <code>:help tutor</code> 或者 <code>:help tutor@cn</code> 命令，进入一个 30 分钟的 Vim 入门教程。你也可以下载一个 Vim Documentation Chinese Version （<span class="exturl" data-url="aHR0cHM6Ly9zb3VyY2Vmb3JnZS5uZXQvcHJvamVjdHMvdmltY2RvYy8=">Vim 官方文档中文版<i class="fa fa-external-link-alt"></i></span>）的安装包，安装好之后使用 <code>:help @cn</code> 命令查看中文官方文档。另外，你还可以下载一个 <span class="exturl" data-url="aHR0cDovL3Bhbi5iYWlkdS5jb20vcy8xbzdCTXpXWQ==">Vim 用户手册的中文翻译版本<i class="fa fa-external-link-alt"></i></span> PDF 电子书去了解更多。</p>
<h3 id="网友作品"><a href="#网友作品" class="headerlink" title="网友作品"></a>网友作品</h3><ul>
<li>大家来学 Vim | 李果正 （台湾网友编写的手册，PDF 格式，80 多页 <span class="exturl" data-url="aHR0cDovL3d3dy5zdHVkeS1hcmVhLm9yZy90aXBzL3ZpbS8=">传送门<i class="fa fa-external-link-alt"></i></span>）</li>
<li>Vim 使用技术 | IBM 吴咏炜 （共分 3 篇：<span class="exturl" data-url="aHR0cDovL3d3dy5pYm0uY29tL2RldmVsb3BlcndvcmtzL2NuL2xpbnV4L2wtdGlwLXZpbTEvaW5kZXguaHRtbA==">实用技巧<i class="fa fa-external-link-alt"></i></span>，<span class="exturl" data-url="aHR0cDovL3d3dy5pYm0uY29tL2RldmVsb3BlcndvcmtzL2NuL2xpbnV4L2wtdGlwLXZpbTIvaW5kZXguaHRtbA==">常用插件<i class="fa fa-external-link-alt"></i></span>，<span class="exturl" data-url="aHR0cDovL3d3dy5pYm0uY29tL2RldmVsb3BlcndvcmtzL2NuL2xpbnV4L2wtdGlwLXZpbTMvaW5kZXguaHRtbA==">定制 Vim<i class="fa fa-external-link-alt"></i></span>）</li>
<li>神奇的 VIM ｜ IBM 闫石 （举了很多例子，尽显 Vim 之神奇，特别推荐阅读。<span class="exturl" data-url="aHR0cDovL3d3dy5pYm0uY29tL2RldmVsb3BlcndvcmtzL2NuL2xpbnV4L2wtdGlwLXByb21wdC90aXAxNS8=">传送门<i class="fa fa-external-link-alt"></i></span>）</li>
<li>史上最强的 vimrc 文件｜ amix (<span class="exturl" data-url="aHR0cDovL2FtaXguZGsvdmltL3ZpbXJjLmh0bWw=">传送门<i class="fa fa-external-link-alt"></i></span>，约 800 行，未必全用，但通读有益！另：<span class="exturl" data-url="aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcmVkZ3VhcmR0b28vYXJ0aWNsZS9kZXRhaWxzLzExNzIxMzY=">国内网友改进版<i class="fa fa-external-link-alt"></i></span>，更符合中文习惯。</li>
<li>史上最强的 Vim Tips (<span class="exturl" data-url="aHR0cDovL3d3dy4ybWFvbWFvLmNvbS9ibG9nL3dwLWNvbnRlbnQvdXBsb2Fkcy92aW1fdGlwcy50eHQ=">传送门<i class="fa fa-external-link-alt"></i></span>)</li>
<li>Vi &#x2F; Vim 使用进阶｜ Easwy （写本系列文章的最初想法，是介绍如何用 vi&#x2F;vim 开发软件。但纵观整个系列，讲述的其实和软件开发关系并不大，基本都在讲 vim 的使用技巧、vim 的配置及 vimrc、vim 的命令和 vim 的插件。包括：序言（讲述我使用 vi&#x2F;vim 的经历和心得，以及对 vi&#x2F;vim 初学者的一些建议）、使用会话和 viminfo、vimrc 初步、保存项目相关配置、 使用标签(tag)文件、使用 taglist 插件、文件浏览和缓冲区浏览、lookupfile 插件、开启文件类型检测、 乱花渐欲迷人眼 – 语法高亮、程序员的利器 – cscope、 剑不离手 – quickfix、智能补全、 自动补全、指随意动，移动如飞、在 VIM 中使用 GDB 调试 – 使用 vimgdb、等十余篇内容，后续还有待完成的几篇。<span class="exturl" data-url="aHR0cDovL2Vhc3d5LmNvbS9ibG9nL2FyY2hpdmVzL2FkdmFuY2VkLXZpbS1za2lsbHMtY2F0YWxvZy8=">传送门<i class="fa fa-external-link-alt"></i></span>）</li>
<li>使用 Vim 的总结 | edyfox （水木社区 Vim 版高手的作品。 <span class="exturl" data-url="aHR0cDovL2VkeWZveC5jb2RlY2FydmVyLm9yZy9odG1sL3ZpbS5odG1s">传送门<i class="fa fa-external-link-alt"></i></span>）</li>
<li>用心绘制的 Vim 入门图解说明 | vgod (<span class="exturl" data-url="aHR0cDovL2Jsb2cudmdvZC50dy8yMDA5LzEyLzA4L3ZpbS1jaGVhdC1zaGVldC1mb3ItcHJvZ3JhbW1lcnMv">传送门<i class="fa fa-external-link-alt"></i></span>)</li>
</ul>
<p><img src="/../imgs/2024-01-08/vim-editer/mode.jpg" alt="Vim"></p>
<h2 id="不同人眼中有不同的-Vim"><a href="#不同人眼中有不同的-Vim" class="headerlink" title="不同人眼中有不同的 Vim"></a>不同人眼中有不同的 Vim</h2><p>原版的 Vim 就像是一张白纸，由于它的扩展性非常强大且资源丰富，你可以将它打造成适合自己的代码编辑器、强大的 IDE 开发环境、代码浏览器、文稿编写工具等。不过除了常规的文字编辑相关的插件外，Vim 还有很多有趣的功能插件，譬如将其打造成纯文本的网页浏览器或者用来收发邮件！只有想不到，没有做不到～</p>
<p>对于喜欢折腾喜欢学习的同学来说，Vim 就是一款神奇的无比强大的编辑器，它经典巧妙的操作让人佩服。但对于不爱折腾的同学来说，Vim 看起来可能更像是一个怪物，丑陋、操作怪异并且难以上手。在不同人的眼中，它有着完全不同的价值。由于它并非一款能轻松上手的软件，到底值不值花时间花精力去学习使用，这就是一个见仁见智的问题了……</p>
<h2 id="相关文件下载地址："><a href="#相关文件下载地址：" class="headerlink" title="相关文件下载地址："></a>相关文件下载地址：</h2><blockquote>
<p><span class="exturl" data-url="aHR0cDovL3d3dy52aW0ub3JnLw==">官方网站<i class="fa fa-external-link-alt"></i></span> &gt;<span class="exturl" data-url="ZnRwOi8vZnRwLnZpbS5vcmcvcHViL3ZpbS9wYy9ndmltNzQuemlw">GVim (Windows 版下载)<i class="fa fa-external-link-alt"></i></span> &gt;<span class="exturl" data-url="aHR0cDovL3Bhbi5iYWlkdS5jb20vcy8xcEw1cGJDWg==">Vim Touch (Android 版)<i class="fa fa-external-link-alt"></i></span> &gt;<span class="exturl" data-url="aHR0cDovL3Bhbi5iYWlkdS5jb20vcy8xc2tad1JRdA==">下载 MacVim<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>编辑器</tag>
      </tags>
  </entry>
  <entry>
    <title>Vimium</title>
    <url>/posts/vimium.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-08/vimium/intro.jpg" alt="Vimium - 让你体验Geek般的浏览体验"></p>
<p>相信很多电脑高手们都会寻找一一些快捷高效的操作方式，如经常利用键盘的快速操作，让你脱离鼠标，可以让你不用花太多精力地去移动细小的指针进行操作，使得工作的效率提高许多。</p>
<span id="more"></span>

<p>不过，实际上很多时候我们还是不得不用鼠标来操作，尤其是在浏览网页时，没有鼠标很多事情基本上没法做。但是！作为一个键盘党怎么可以容忍这种事情发生呢！今天给大家介绍的 <strong>Vimium</strong> 就是为解决这个问题而生的，它能让你只用键盘就能高效快速便捷地上网，这才是高手们应该有的境界～嗯，软件也是应该要这么玩才有意思……</p>
<h2 id="关于-Vimium-的由来"><a href="#关于-Vimium-的由来" class="headerlink" title="关于 Vimium 的由来"></a>关于 Vimium 的由来</h2><p><strong>Vimium</strong> 这个名字其实是 Vim 和 Chromium 的合体；很多人可能还不知道 Vim，这样告诉你，你是不是经常在电影里看到那些顶尖的黑客，他们在屏幕上来去自如，最关键的是，他们竟然都不用鼠标？没错，狭义地说，Vim 其实是 Linux 等平台上的一款文本编辑器，它可以让你彻底脱离鼠标，通过一系列快捷键，来操作任何一件事情。</p>
<p>而 Vimium 则继承了 Vim 中的常用键位，让你在使用 Chrome 的过程中，无论是浏览网页、切换标签或是其它任何操作，全都可以只通过键盘完成。想像一下，你再也不需要移动鼠标去打开一个链接，手指不用离开键盘，一切都是这么流畅。</p>
<h2 id="Vimium-的操作方式介绍"><a href="#Vimium-的操作方式介绍" class="headerlink" title="Vimium 的操作方式介绍"></a>Vimium 的操作方式介绍</h2><p>听了前面这么一段介绍，你可能还在云里雾里，感觉这不是一个好上手的东西；咱们换一种方式来说，Vimium 实际上可以理解成是一系列快捷键配置，你可以通过这些快捷键来完成对应的操作，比如，Chrome 其实自带的快捷键就有：<code>Ctrl + T</code>可以新建标签页，<code>Ctrl + N</code> 可以新建窗口等等,而 Vimium 比这简单得多，却又强大得多。</p>
<p>这里是一张 Vimium 的快捷键列表(通过 <code>Shift + /</code> 来查看帮助)：</p>
<p><img src="/../imgs/2024-01-08/vimium/key.jpg" alt="Vimium 的快捷键列表"></p>
<p>别怕，虽然看着多，但常用的不多，而且使用几次后很容易上手，下面就带大家来过几个最实用的。</p>
<h2 id="Vimium-常用的按键功能"><a href="#Vimium-常用的按键功能" class="headerlink" title="Vimium 常用的按键功能"></a>Vimium 常用的按键功能</h2><ul>
<li><code>j</code>：向下细微滚动窗口 <code>k</code>：向上细微滚动窗口</li>
<li><code>J</code>：(Shift+j 的意思，以下大写全部表示加 Shift) 下一个标签页 <code>K</code>：上一个标签页</li>
<li><code>d</code>：向下滚动半个屏幕 <code>u</code>：向上移动半个屏幕</li>
<li><code>g+g</code>（连续按两下 g）：回到顶部</li>
<li><code>G</code>：到达页面底部</li>
<li><code>H</code>：后退 <code>L</code>： 前进</li>
<li><code>f</code>：将当前网页上的所有可见链接&#x2F;输入框分配一个快捷键，输入后就可以打开或者跳转到对应的输入框。如果按的是 F，那么将在新窗口中打开页面（见上图）</li>
<li><code>g+i</code>：将光标 定位到输入框，如果有多个可以按 Tab 键切换</li>
<li><code>x</code>：关闭当前页面 X：恢复刚刚关闭的页面</li>
<li><code>o</code>：相当于 Chrome 中的地址栏，可以匹配历史记录、收藏夹并在当前窗口打开，或者直接打开一个网址或者搜索一个关键字（Chrome 在全屏的时候地址栏死都出不来，有了它就解决这个一直困扰我的问题了！～），如果按的是 O，则可以在新窗口中打开，非常非常方便！</li>
<li><code>g+s</code>：查看网页的源代码</li>
<li><code>r</code>：重新载入当前网页（顺便提一句，这点上新浪微博和它是一样的，光标没有定位在发送框时，即便没有安装这个插件你也可以用 j&#x2F;k 来控制页面上下滚动，用 r 在刷新，用 f 或者 p 来定位到发送框。而 Gmail 的快捷键如 j,k 上下移动光标也是类似，有兴趣大家可以再自己去了解一下一些常用 web 应用的快捷键）</li>
</ul>
<h2 id="Vimium-常见的几种实际操作"><a href="#Vimium-常见的几种实际操作" class="headerlink" title="Vimium 常见的几种实际操作"></a>Vimium 常见的几种实际操作</h2><h3 id="用-Vimium-打开新页面"><a href="#用-Vimium-打开新页面" class="headerlink" title="用 Vimium 打开新页面"></a>用 Vimium 打开新页面</h3><p><strong>复制一段链接：</strong>经常在网页上看到一段链接文字，但却是不可点的;原来你需要先复制，然后新建标签页，再粘贴，敲回车后才能打开。现在呢？你只需要把要打开的链接复制一下，直接按<code>p</code>或<code>P</code>就可以打开了，小写的 p 是在当前标签页打开，大写的 P 则新建标签页打开。</p>
<p><strong>从收藏夹、历史记录打开：</strong>是不是之前看过什么网页，现在又想看了，还需要再打开历史记录找？或者想打开收藏夹里的某个链接？现在，直接按下<code>o</code>，输入对应的关键字后，会一起搜索你的历史记录和收藏夹，如果你输的是一个网址，回车还能直接打开。</p>
<p><img src="/../imgs/2024-01-08/vimium/open.jpg" alt="历史纪录"></p>
<h3 id="用-Vimium-快速打开当前页面上任意一个链接"><a href="#用-Vimium-快速打开当前页面上任意一个链接" class="headerlink" title="用 Vimium 快速打开当前页面上任意一个链接"></a>用 Vimium 快速打开当前页面上任意一个链接</h3><p>用 Vimium 在任意一个页面上，无论用多少链接，你根本不用鼠标，最多只需要敲三个键，你就可以迅速打开任意一个链接，你信吗？Vimium 就可以办到。</p>
<p>你只需要按一下<code>f</code>，然后当前页面上所有可点击的元素，都会生成一个对应的快捷键分派给这些链接,比如我现在想点击导航栏上的「软件聚合」，只需要再输入「C」，OK！完成了，你只敲了三个键，就打开了「软件聚合」页面。</p>
<p><img src="/../imgs/2024-01-08/vimium/jump.jpg" alt="快速打开链接"></p>
<h3 id="快速显示当前所有的标签页，并快速切换"><a href="#快速显示当前所有的标签页，并快速切换" class="headerlink" title="快速显示当前所有的标签页，并快速切换"></a>快速显示当前所有的标签页，并快速切换</h3><p>有时候在查找信息、翻阅资料时，经常会一口气打开几十个网站，东西一多，Chrome 会自动将每个标签页的宽度缩小，几乎就看不到它们的标题了。用了 Vimium，你可以按一下大写的<code>T</code>，就可以显示当前打开的所有标签页，并支持快捷搜索和跳转。</p>
<p><img src="/../imgs/2024-01-08/vimium/switch.jpg" alt="快速切换标签页"></p>
<p>实际上 Vimium 还有许多非常酷的功能，比如你可以一键在不同的 Tab 之间切换等等，这里只是抛砖引玉，给大家介绍几个，更多的大家可以根据自己的需要去探索，如果你觉得文字不够生动，看了上面的介绍有些还没有完全理解，这里有一则官方的介绍小视频，大家有兴趣也可以看看。</p>
<h2 id="Vimium-谷歌浏览器插件下载"><a href="#Vimium-谷歌浏览器插件下载" class="headerlink" title="Vimium 谷歌浏览器插件下载"></a>Vimium 谷歌浏览器插件下载</h2><blockquote>
<p><span class="exturl" data-url="aHR0cDovL3Bhbi5iYWlkdS5jb20vcy8xYm5aM054OQ==">Vimium 插件下载<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>插件</tag>
      </tags>
  </entry>
  <entry>
    <title>Visual Studio Code</title>
    <url>/posts/visual-studio-code.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-08/visual-studio-code/intro.jpg" alt="Visual Studio Code - 微软的我免费跨平台代码编辑器"></p>
<p>在 Build 2015 开发者大会上，微软除了发布了 Microsoft Edge 浏览器和新的 Windows 10 系统外，最大的惊喜莫过于宣布推出免费跨平台的 <strong>Visual Studio Code</strong> 编辑器了！</p>
<span id="more"></span>

<p><strong>Visual Studio Code</strong> (简称 VS Code &#x2F; VSC) 是一款免费开源的现代化轻量级代码编辑器，支持几乎所有主流的开发语言的语法高亮、智能代码补全、自定义热键、括号匹配、代码片段、代码对比 Diff、GIT 等特性，支持插件扩展，并针对网页开发和云端应用开发做了优化。软件跨平台支持 Win、Mac 以及 Linux，运行流畅，可谓是微软的良心之作……</p>
<h2 id="开源免费跨平台代码编辑器"><a href="#开源免费跨平台代码编辑器" class="headerlink" title="开源免费跨平台代码编辑器"></a>开源免费跨平台代码编辑器</h2><p>相信很多程序员同学都没想过有一天能在不用虚拟机的情况下直接在 Mac、Linux 上使用 VisualStudio 吧。当然，微软称 Visual Studio Code 并非完整版的 Visual Studio，它只是一款轻量级的代码编辑器，而不是一个重量级的完整 IDE (集成开发环境)，它的竞争对手将会是 Sublime Text、Atom、VIM、Notepad++ 等产品。</p>
<p><img src="/../imgs/2024-01-08/visual-studio-code/main.jpg" alt="Visual Studio Code for Mac 软件截图"></p>
<p><img src="/../imgs/2024-01-08/visual-studio-code/install.jpg" alt="Visual Studio Code for Windows 软件截图"></p>
<p>Visual Studio Code 是微软首次为开发者提供「跨平台」的代码编辑器，微软开发部门负责人称：“虽然许多人把 Windows 作为开发环境，但还有很多人用的是 Linux 和 Mac，与其说服这些人改用 Windows，不如在他们使用的平台上提供工具满足其要求。” 可以预见，VSC 的推出将会在开发界掀起轩然大波。</p>
<p><img src="/../imgs/2024-01-08/visual-studio-code/platform.jpg" alt="VS Code"></p>
<p>VSC 的编辑器界面依然是微软经典的 VS 风格，对于常接触的人来说会很亲切。在编程语言和语法上支持 C++, jade, PHP, Python, XML, Batch, F#, DockerFile, Coffee Script, Java, HandleBars, R, Objective-C, PowerShell, Luna, Visual Basic, Markdown, JavaScript, JSON, HTML, CSS, LESS, SASS, C#, TypeScript (支持情况)。</p>
<p>经实际体验测试，VS Code 的启动速度以及打开大型文件的速度都非常迅速流畅，完全不卡，加载大文件几乎秒开，相比 Atom、Sublime Text 等感觉都要优秀！这一点对于某些追求效率的朋友来说的确非常诱人！</p>
<p>个人认为 VSC 对WEB和前端开发相对比较友好，相信日后会有不少如 PHP、Python、Ruby、Go、JS、Node 等的开发者会切换到 VSCode 来，它更像一个 WEB 开发界的 VS。</p>
<h2 id="支持大量的扩展插"><a href="#支持大量的扩展插" class="headerlink" title="支持大量的扩展插"></a>支持大量的扩展插</h2><p>Visual Studio Code 现在已经<span class="exturl" data-url="aHR0cHM6Ly9tYXJrZXRwbGFjZS52aXN1YWxzdHVkaW8uY29tL1ZTQ29kZQ==">支持大量的扩展插件<i class="fa fa-external-link-alt"></i></span>，大家可以根据自己的需求打造出最适合自己使用的编辑器了，当然，这也让 VSC 也有了很大的竞争力！</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>话说当微软在发布会上宣布推出完全免费且跨平台的 Visual Studio Code 时，我还是惊喜地拍了掌！作为一个主力使用 Mac 的小码农，看到 VS 可以在三大平台上运行的时候还真是挺激动的。</p>
<p>微软这近段时间来不断开放的姿态，越来越让我们看到微软的情怀和未来。有人说 VSC 的推出又多了一个买 Mac 的理由了，不过其实细想，随着 .Net 的开源，加上免费的 VS Code 铺路，反而是能让一大批开发高手重新回到微软的大环境中，不得不说微软这次又下了一手好棋啊。</p>
<h2 id="相关文件下载地址："><a href="#相关文件下载地址：" class="headerlink" title="相关文件下载地址："></a>相关文件下载地址：</h2><blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20v">官方网站<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9hejc2NDI5NS52by5tc2VjbmQubmV0L3N0YWJsZS9mYTZkMGYwMzgxM2RmYjlkZjQ1ODljMzAxMjFlOWZjZmZhOGE4ZWM4L1ZTQ29kZVNldHVwLXN0YWJsZS5leGU=">Visual Studio Code下载<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>编辑器</tag>
      </tags>
  </entry>
  <entry>
    <title>doPDF</title>
    <url>/posts/dopdf.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-08/dopdf/intro.jpg" alt="oPDF 虚拟打印机 - 万能 PDF 转换软件"></p>
<p>在办公领域经常要用到 PDF 格式文档，因此常常有图片、表格、Word 等各种不同格式的文档转换成 PDF 格式的需求。虽然网上有很多在线转换网站或 PDF 转换软件，不过今天推荐的是通用性更强的软件。</p>
<span id="more"></span>

<p><strong>doPDF</strong> 是一款万能 PDF 格式转换器软件，它通过「虚拟打印机」的方式，可以将任何格式的文件“打印”成 PDF 文件保存起来，包括 Word、Excel、PPT、网页、纯文本 TXT、图片等等，只要提供「打印」功能的地方，都能利用 doPDF 将内容转换成 PDF 文档……</p>
<h2 id="万能-PDF-转换软件"><a href="#万能-PDF-转换软件" class="headerlink" title="万能 PDF 转换软件"></a>万能 PDF 转换软件</h2><p>doPDF 是一款完全免费的「虚拟 PDF 打印机」方式的 PDF 文档格式转换软件 (个人或商业使用均免费)，支持包含简体中文在内的多国语言；安装 doPDF 后，系统里将会多出一个名为 “doPDF” 的虚拟打印机，你只要将任何想要转换成 PDF 格式的内容通过这个打印机“打印”出来即可，doPDF 将会提示你保存转换的 PDF 文档，在使用上十分简单方便！如下图：</p>
<p><img src="/../imgs/2024-01-08/dopdf/print.jpg" alt="doPDF"></p>
<p>通过 doPDF 虚拟打印机，无论是使用 Word、Excel、PPT 等 Office 类软件，还是记事本、各种编辑器、浏览器、看图软件等等一切提供打印功能的软件，我们都能轻易将内容转换成 PDF 格式的文件。打印前点击“首选项”可以对虚拟的打印机进行各种设置，如纸张大小、分辨率dpi、缩小放大比例、横向或竖向等等。</p>
<p><img src="/../imgs/2024-01-08/dopdf/setting.jpg" alt="doPDF 格式转换doPDF 虚拟打印机的设置界面"></p>
<p>doPDF 支持32与64位系统，支持 XP ~ Windows 8.1 甚至 Windows 10；支持 72dpi 到 2400 dpi 的任何解析度；支持中文PDF文档转换，而且如果你打印的内容为文字内容，其转换后的 PDF 文件还能支持文档内的文字搜索；支持指定 PDF 的页面尺寸大小 (如 Letter, Legal, A4, A5, A6 等或自定义大小)。</p>
<p><img src="/../imgs/2024-01-08/dopdf/save.jpg" alt="转换 PDF转换 PDF 文档时可以选择保存路径、PDF 质量、是否嵌入字体等"></p>
<p>和别的免费 PDF 转换器软件相比，doPDF 速度很快、通用性很强，而且几乎不耗费系统资源，它在实际转换PDF文件时只占用很少的CPU和内存。此外，它在安装时还提供了微软 Office 的插件可以让你更方便进行文档格式转换。</p>
<h2 id="中文界面问题"><a href="#中文界面问题" class="headerlink" title="中文界面问题"></a>中文界面问题</h2><p>从 doPDF 8.0 版本开始要求系统安装 .Net Framework 4.0 后才能使用，旧版本不需要，因此旧版本体积仅4MB，比较适合放在 U 盘或网盘收藏备用 。另外，不知是什么原因，截稿时的最新版 doPDF 8.2.929 只能显示英文界面 (不能切换中文)，在意的朋友可以暂时先使用 v7.3 build 398 的旧版本，该版本可以支持中文显示，如下图：</p>
<p><img src="/../imgs/2024-01-08/dopdf/chinese.jpg" alt="doPDF 中文版"></p>
<p><img src="/../imgs/2024-01-08/dopdf/chinese-save.jpg" alt="doPDF 中文版"></p>
<p>其实 doPDF 的界面很简单，无论是英文版还是中文版其实都很容易使用，大家也可以按照上面的中文版截图去使用英文版，不过我们还是同时提供了两个版本供大家选择下载。</p>
<h2 id="相关文件下载地址"><a href="#相关文件下载地址" class="headerlink" title="相关文件下载地址"></a>相关文件下载地址</h2><blockquote>
<p><span class="exturl" data-url="aHR0cDovL3d3dy5kb3BkZi5jb20v">官方网站<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cDovL3Bhbi5iYWlkdS5jb20vcy8xaTVEQXc3Nw==">下载 doPDF 8 虚拟打印机<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>PDF</tag>
      </tags>
  </entry>
  <entry>
    <title>ownCloud私有云</title>
    <url>/posts/owncloud.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-05/owncloud/intro.jpg" alt="ownCloud - 轻松架设搭建属于自己的私有云服务"></p>
<h2 id="轻松搭建私有云"><a href="#轻松搭建私有云" class="headerlink" title="轻松搭建私有云"></a>轻松搭建私有云</h2><p><strong>ownCloud</strong> 是一个开源免费专业的私有云存储项目，它能帮你快速在个人电脑或服务器上架设一套专属的私有云文件同步网盘，可以像 Dropbox 那样实现文件跨平台同步、共享、版本控制、团队协作等等。ownCloud 能让你将所有的文件掌握在自己的手中，只要你的设备性能和空间充足，那么用其来几乎没有任何限制。</p>
<span id="more"></span>

<p><img src="/../imgs/2024-01-05/owncloud/login.jpg" alt="ownCloud"></p>
<p>你只需在电脑上安装好 ownCloud 的服务器端作为主机，即可通过局域网访问和使用你自己的私有云了。当然，你也可以将电脑配置成公网访问的形式、或者安装在公网的 VPS 服务器上，来实现真正的互联网云存储服务。</p>
<h2 id="跨平台支持共享与协作"><a href="#跨平台支持共享与协作" class="headerlink" title="跨平台支持共享与协作"></a>跨平台支持共享与协作</h2><p>ownCloud 跨平台支持 Windows、Mac、Android、iOS、Linux 等平台，而且还提供了网页版和 WebDAV 形式访问，因此你可以在任何电脑、手机上都能轻松获取你的文件了。</p>
<h2 id="网页版"><a href="#网页版" class="headerlink" title="网页版"></a>网页版</h2><p><img src="/../imgs/2024-01-05/owncloud/web.jpg" alt="ownCloud"></p>
<p>ownCloud 不仅适用于个人使用，对经常需要传输共享文件、远程协作等需求的团队或公司更是合适！功能上也很强大：能支持文件分享、获取文件链接、文件版本历史控制 (文件删除恢复)、文件评论协作、文件共享(可设置读写权限)、图片音乐和文档等文件预览、开放 API、支持第三方应用整合等等。除了云存储之外，ownCloud 还可以用于同步日历、电子邮件联系人、网页浏览器的书签等功能。</p>
<p>值得一提的是，ownCloud 跟 Seafile 不太一样的是，Seafile 所有的数据文件在服务器上都是进行了切割和整合存储的 (不清楚有没加密)，在服务器上是无法直接查看或复制用户所保存的文件的，这在安全性(隐私)上会有一道保障。</p>
<p>而 ownCloud 则是直接原封不动地将文件保存在服务器硬盘，目录结构也跟网页版 (客户端) 上看到的一样，只要别人有权限访问你的主机，那么就能绕过 ownCloud 直接查看或拷走所有用户的文件了。不过，ownCloud 这种方式也有它的优点，就是当有一天你不再想用 ownCloud，或者它因各种原因挂掉了，你的文件的备份和导出都非常方便！那时 Seafile 就有点傻眼了，所以，这个怎么选择就得看大家实际的需求跟场景了。</p>
<p>也正因为这样的特点，ownCloud 主机服务器端还支持将文件上传到公有云服务，如 Amazon S3、Dropbox、FTP、Google Drive、OpenStack Object Storage、SMB、WebDAV、SFTP 等远程服务器，所以更加灵活。</p>
<p>ownCloud 项目使用了 PHP+MySQL 的经典组合，无论在自己的电脑上或是 VPS 服务器上，基本上只要能跑  WordPress 网站的机器都能运行了，安装服务器端就像用 PHP 程序建站一样简单。官方建议在 Linux (如 Ubuntu 或 CentOS) 系统下搭建，对于 Windows 作为主机的用户，可以通过 WAMP、XAMPP 等工具搭建简单的运行环境。另外，ownCloud 还提供了搭建好环境的虚拟机文件，你可以直接在 VMWare、VirtualBox、Hyper-V 中运行 ownCloud 服务器端。</p>
<h2 id="相关文件下载地址"><a href="#相关文件下载地址" class="headerlink" title="相关文件下载地址"></a>相关文件下载地址</h2><blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9vd25jbG91ZC5vcmcv">官方网站<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cDovL3Bhbi5iYWlkdS5jb20vcy8xbzhNbkVpQQ==">下载 ownCloud 服务器端：PHP源代码<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>网盘</tag>
      </tags>
  </entry>
  <entry>
    <title>gulp教程</title>
    <url>/posts/gulp-tutorial.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-05/gulp-plugin/intro.jpg" alt="gulp - 入门教程"></p>
<p><strong>gulp</strong>是前端开发过程中对代码进行构建的工具，是自动化项目的构建利器；她不仅能对网站资源进行优化，而且在开发过程中很多重复的任务能够使用正确的工具自动完成；使用她，我们不仅可以很愉快的编写代码，而且大大提高我们的工作效率。</p>
<span id="more"></span>

<p>gulp是基于Nodejs的自动任务运行器， 她能自动化地完成 javascript&#x2F;coffee&#x2F;sass&#x2F;less&#x2F;html&#x2F;image&#x2F;css 等文件的的测试、检查、合并、压缩、格式化、浏览器自动刷新、部署文件生成，并监听文件在改动后重复指定的这些步骤。在实现上，她借鉴了Unix操作系统的管道（pipe）思想，前一级的输出，直接变成后一级的输入，使得在操作上非常简单。通过本文，我们将学习如何使用Gulp来改变开发流程，从而使开发更加快速高效。</p>
<p>gulp 和 grunt 非常类似，但相比于 grunt 的频繁 IO 操作，gulp 的流操作，能更快地更便捷地完成构建工作。</p>
<h2 id="学习-gulp-的流程"><a href="#学习-gulp-的流程" class="headerlink" title="学习 gulp 的流程"></a>学习 gulp 的流程</h2><p>在学习前，先谈谈大致使用gulp的步骤，给读者以初步的认识。首先当然是安装nodejs，通过nodejs的npm全局安装和项目安装gulp，其次在项目里安装所需要的gulp插件，然后新建gulp的配置文件gulpfile.js并写好配置信息（定义gulp任务），最后通过命令提示符运行gulp任务即可。</p>
<p><strong>安装nodejs -&gt; 全局安装gulp -&gt; 项目安装gulp以及gulp插件 -&gt; 配置gulpfile.js -&gt; 运行任务</strong></p>
<h2 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h2><p><strong>说明：</strong>gulp是基于nodejs，理所当然需要安装nodejs；</p>
<p><strong>安装：</strong>打开<span class="exturl" data-url="aHR0cHM6Ly9ub2RlanMub3JnL2VuLw==">nodejs官网<i class="fa fa-external-link-alt"></i></span>，点击硕大的绿色Download按钮，它会根据系统信息选择对应版本（.msi文件）。然后像安装QQ一样安装它就可以了（安装路径随意）。</p>
<h2 id="使用命令行操作"><a href="#使用命令行操作" class="headerlink" title="使用命令行操作"></a>使用命令行操作</h2><p><strong>说明：</strong>什么是命令行？命令行在OSX是终端（Terminal），在windows是命令提示符（Command Prompt）；</p>
<p><strong>注：</strong><em>之后操作都是在windows系统下；</em></p>
<p>简单介绍gulp在使用过程中常用命令，打开命令提示符执行下列命令（打开方式：window + r 输入cmd回车）：</p>
<ul>
<li><code>node -v</code>查看安装的nodejs版本，出现版本号，说明刚刚已正确安装nodejs。PS：未能出现版本号，请尝试注销电脑重试</li>
<li><code>npm -v</code>查看npm的版本号，npm是在安装nodejs时一同安装的nodejs包管理器，那它有什么用呢？稍后解释</li>
<li><code>cd</code>定位到目录，用法：cd + 路径</li>
<li><code>dir</code>列出文件列表</li>
<li><code>cls</code>清空命令提示符窗口内容</li>
</ul>
<p><img src="/../imgs/2024-01-05/gulp-tutorial/cmd.jpg" alt="gulp"></p>
<h2 id="关于-npm-的介绍"><a href="#关于-npm-的介绍" class="headerlink" title="关于 npm 的介绍"></a>关于 npm 的介绍</h2><p><strong>说明：</strong>npm（node package manager）nodejs的包管理器，用于node插件管理（包括安装、卸载、管理依赖等）；</p>
<p>使用npm安装插件：命令提示符执行 <code>npm install &amp;lt;name&amp;gt; [-g] [--save-dev]</code>；</p>
<ul>
<li><code>&amp;lt;name&amp;gt;</code>：node插件名称,例：npm install gulp-less –save-dev</li>
<li><code>-g</code>：全局安装，将会安装在C:\Users\Administrator\AppData\Roaming\npm，并且写入系统环境变量；非全局安装：将会安装在当前定位目录；全局安装可以通过命令行在任何地方调用它，本地安装将安装在定位目录的node_modules文件夹下，通过require()调用；</li>
<li><code>--save</code>：将保存配置信息至package.json（package.json是nodejs项目配置文件）；</li>
<li><code>-dev</code>：保存至package.json的devDependencies节点，不指定-dev将保存至dependencies节点；</li>
</ul>
<p>为什么要保存至 <code>package.json</code> ？因为node插件包相对来说非常庞大，所以不加入版本管理，将配置信息写入 <code>package.json</code> 并将其加入版本管理，其他开发者对应下载即可（命令提示符执行 <code>npm install</code>，则会根据 <code>package.json</code> 下载所有需要的包）</p>
<p><strong>NPM常用命令如下：</strong></p>
<ul>
<li>使用npm卸载插件：npm uninstall <name> [-g] [–save-dev]  PS：不要直接删除本地插件包</li>
<li>使用npm更新插件：npm update <name> [-g] [–save-dev]</li>
<li>更新全部插件：npm update [–save-dev]</li>
<li>查看npm帮助：npm help</li>
<li>当前目录已安装插件：npm list</li>
</ul>
<p>PS：npm安装插件过程：从 <span class="exturl" data-url="aHR0cDovL3JlZ2lzdHJ5Lm5wbWpzLm9yZy8=">http://registry.npmjs.org<i class="fa fa-external-link-alt"></i></span> 下载对应的插件包（该网站服务器位于国外，所以经常下载缓慢或出现异常），解决办法往下看↓↓↓↓↓↓</p>
<h2 id="选装cnpm来解决问题"><a href="#选装cnpm来解决问题" class="headerlink" title="选装cnpm来解决问题"></a>选装cnpm来解决问题</h2><p><strong>说明：</strong>因为npm安装插件是从国外服务器下载，受网络影响大，可能出现异常，如果npm的服务器在中国就好了，所以我们乐于分享的淘宝团队干了这事。来自官网：“<strong>这是一个完整 npmjs.org 镜像，你可以用此代替官方版本(只读)，同步频率目前为 10分钟 一次以保证尽量与官方服务同步。</strong>”；</p>
<p><strong>官方网址：</strong><span class="exturl" data-url="aHR0cDovL25wbS50YW9iYW8ub3JnLw==">http://npm.taobao.org<i class="fa fa-external-link-alt"></i></span></p>
<p><strong>安装：</strong>命令提示符执行 <code>npm install cnpm -g --registry=https://registry.npm.taobao.org</code> ；  注意：安装完后最好查看其版本号 <code>cnpm -v</code> 或关闭命令提示符重新打开，安装完直接使用有可能会出现错误；</p>
<p><strong>注：</strong><em>cnpm跟npm用法完全一致，只是在执行命令时将npm改为cnpm（以下操作将以cnpm代替npm）</em></p>
<h2 id="全局安装gulp"><a href="#全局安装gulp" class="headerlink" title="全局安装gulp"></a>全局安装gulp</h2><p><strong>说明：</strong>全局安装gulp目的是为了通过她执行gulp任务；</p>
<p><strong>安装：</strong>命令提示符执行 <code>cnpm install gulp -g</code> ；</p>
<p>查看是否正确安装：命令提示符执行 <code>gulp -v</code> ，出现版本号即为正确安装</p>
<h2 id="新建package-json文件"><a href="#新建package-json文件" class="headerlink" title="新建package.json文件"></a>新建package.json文件</h2><p><strong>说明：</strong>package.json是基于nodejs项目必不可少的配置文件，它是存放在项目根目录的普通json文件；</p>
<p>它是这样一个json文件（<strong>注意：json文件内是不能写注释的，复制下列内容请删除注释</strong>）：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;test&quot;</span><span class="punctuation">,</span>   <span class="comment">//项目名称（必须）</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.0.0&quot;</span><span class="punctuation">,</span>   <span class="comment">//项目版本（必须）</span></span><br><span class="line">  <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;This is for study gulp project !&quot;</span><span class="punctuation">,</span>   <span class="comment">//项目描述（必须）</span></span><br><span class="line">  <span class="attr">&quot;homepage&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span>   <span class="comment">//项目主页</span></span><br><span class="line">  <span class="attr">&quot;repository&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>    <span class="comment">//项目资源库</span></span><br><span class="line">    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;git&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://git.oschina.net/xxxx&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;author&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>    <span class="comment">//项目作者信息</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;surging&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;email&quot;</span><span class="punctuation">:</span> <span class="string">&quot;surging2@qq.com&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;license&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ISC&quot;</span><span class="punctuation">,</span>    <span class="comment">//项目许可协议</span></span><br><span class="line">  <span class="attr">&quot;devDependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>    <span class="comment">//项目依赖的插件</span></span><br><span class="line">    <span class="attr">&quot;gulp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.8.11&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;gulp-less&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.0.0&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>当然我们可以手动新建这个配置文件，但是作为一名有志青年，我们应该使用更为效率的方法：命令提示符执行 <code>cnpm init</code></p>
<p><img src="/../imgs/2024-01-05/gulp-tutorial/code.jpg" alt="gulp"></p>
<p>查看package.json帮助文档，命令提示符执行 <code>cnpm help package.json</code></p>
<p>特别注意：<code>package.json</code> 是一个普通json文件，所以不能添加任何注释。参看 <span class="exturl" data-url="aHR0cDovL3d3dy56aGlodS5jb20vcXVlc3Rpb24vMjMwMDQ1MTE=">http://www.zhihu.com/question/23004511<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="本地安装gulp插件"><a href="#本地安装gulp插件" class="headerlink" title="本地安装gulp插件"></a>本地安装gulp插件</h2><p><strong>安装：</strong>定位目录命令后提示符执行 <code>cnpm install --save-dev</code>；</p>
<p>本示例以gulp-less为例（编译less文件），命令提示符执行 <code>cnpm install gulp-less --save-dev</code>；</p>
<p><img src="/../imgs/2024-01-05/gulp-tutorial/save.jpg" alt="gulp"></p>
<p>将会安装在node_modules的gulp-less目录下，该目录下有一个gulp-less的使用帮助文档README.md；</p>
<p>为了能正常使用，我们还得本地安装gulp：<code>cnpm install gulp --save-dev</code>；</p>
<p>PS：细心的你可能会发现，我们全局安装了gulp，项目也安装了gulp，全局安装gulp是为了执行gulp任务，本地安装gulp则是为了调用gulp插件的功能</p>
<h2 id="新建gulpfile-js文件（重要）"><a href="#新建gulpfile-js文件（重要）" class="headerlink" title="新建gulpfile.js文件（重要）"></a>新建gulpfile.js文件（重要）</h2><p><strong>说明：</strong> <code>gulpfile.js</code> 是gulp项目的配置文件，是位于项目根目录的普通js文件（其实将gulpfile.js放入其他文件夹下亦可）。</p>
<p>它大概是这样一个js文件：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//导入工具包 require(&#x27;node_modules里对应模块&#x27;)</span></span><br><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">&#x27;gulp&#x27;</span>), <span class="comment">//本地安装gulp所用到的地方</span></span><br><span class="line">    less = <span class="built_in">require</span>(<span class="string">&#x27;gulp-less&#x27;</span>);</span><br><span class="line">  </span><br><span class="line"><span class="comment">//定义一个testLess任务（自定义任务名称）</span></span><br><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;testLess&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    gulp.<span class="title function_">src</span>(<span class="string">&#x27;src/less/index.less&#x27;</span>) <span class="comment">//该任务针对的文件</span></span><br><span class="line">        .<span class="title function_">pipe</span>(<span class="title function_">less</span>()) <span class="comment">//该任务调用的模块</span></span><br><span class="line">        .<span class="title function_">pipe</span>(gulp.<span class="title function_">dest</span>(<span class="string">&#x27;src/css&#x27;</span>)); <span class="comment">//将会在src/css下生成index.css</span></span><br><span class="line">&#125;);</span><br><span class="line">  </span><br><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;default&#x27;</span>,[<span class="string">&#x27;testLess&#x27;</span>, <span class="string">&#x27;elseTask&#x27;</span>]); <span class="comment">//定义默认任务</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">//gulp.task(name[, deps], fn) 定义任务  name：任务名称 deps：依赖任务名称 fn：回调函数</span></span><br><span class="line"><span class="comment">//gulp.src(globs[, options]) 执行任务处理的文件  globs：处理的文件路径(字符串或者字符串数组) </span></span><br><span class="line"><span class="comment">//gulp.dest(path[, options]) 处理完后文件生成路径</span></span><br></pre></td></tr></table></figure>

<h2 id="运行gulp"><a href="#运行gulp" class="headerlink" title="运行gulp"></a>运行gulp</h2><p><strong>说明：</strong>命令提示符执行gulp 任务名称；</p>
<p><strong>编译less：</strong>命令提示符执行gulp testLess；</p>
<p>当执行gulp default或gulp将会调用default任务里的所有任务[‘testLess’,’elseTask’]</p>
<h2 id="gulp常用地址"><a href="#gulp常用地址" class="headerlink" title="gulp常用地址"></a>gulp常用地址</h2><blockquote>
<p>gulp官方网址：<span class="exturl" data-url="aHR0cDovL2d1bHBqcy5jb20v">http://gulpjs.com<i class="fa fa-external-link-alt"></i></span><br>gulp插件地址：<span class="exturl" data-url="aHR0cDovL2d1bHBqcy5jb20vcGx1Z2lucw==">http://gulpjs.com/plugins<i class="fa fa-external-link-alt"></i></span><br>gulp 官方API：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2d1bHBqcy9ndWxwL2Jsb2IvbWFzdGVyL2RvY3MvQVBJLm1k">https://github.com/gulpjs/gulp/blob/master/docs/API.md<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>gulp插件</title>
    <url>/posts/gulp-plugin.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-05/gulp-plugin/intro.jpg" alt="gulp"></p>
<h2 id="安装Gulp插件"><a href="#安装Gulp插件" class="headerlink" title="安装Gulp插件"></a>安装Gulp插件</h2><p>我们将要使用Gulp插件来完成我们以下任务：</p>
<span id="more"></span>

<ul>
<li>sass的编译（<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NpbmRyZXNvcmh1cy9ndWxwLXJ1Ynktc2Fzcw==">gulp-ruby-sass<i class="fa fa-external-link-alt"></i></span>）</li>
<li>自动添加css前缀（<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01ldHJpbWUvZ3VscC1hdXRvcHJlZml4ZXI=">gulp-autoprefixer<i class="fa fa-external-link-alt"></i></span>）</li>
<li>压缩css（<span class="exturl" data-url="aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvZ3VscC1taW5pZnktY3NzLW1wYXRoLw==">gulp-minify-css<i class="fa fa-external-link-alt"></i></span>）</li>
<li>js代码校验（<span class="exturl" data-url="aHR0cDovL2dpdGh1Yi5jb20vc3BlbmNlcmFsZ2VyL2d1bHAtanNoaW50">gulp-jshint<i class="fa fa-external-link-alt"></i></span>）</li>
<li>合并js文件（<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2NvbnRyYS9ndWxwLWNvbmNhdA==">gulp-concat<i class="fa fa-external-link-alt"></i></span>）</li>
<li>压缩js代码（<span class="exturl" data-url="aHR0cDovLw==">gulp-uglify<i class="fa fa-external-link-alt"></i></span>）</li>
<li>压缩图片（<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NpbmRyZXNvcmh1cy9ndWxwLWltYWdlbWlu">gulp-imagemin<i class="fa fa-external-link-alt"></i></span>）</li>
<li>自动刷新页面（<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3ZvaG9mL2d1bHAtbGl2ZXJlbG9hZA==">gulp-livereload<i class="fa fa-external-link-alt"></i></span>）</li>
<li>图片缓存，只有图片替换了才压缩（<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2pnYWJsZS9ndWxwLWNhY2hl">gulp-cache<i class="fa fa-external-link-alt"></i></span>）</li>
<li>更改提醒（<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21pa2FlbGJyL2d1bHAtbm90aWZ5">gulp-notify<i class="fa fa-external-link-alt"></i></span>）</li>
<li>清除文件（<span class="exturl" data-url="aHR0cDovL3d3dy5ucG1qcy5vcmcvcGFja2FnZS9kZWw=">del<i class="fa fa-external-link-alt"></i></span>）</li>
</ul>
<p>安装这些插件需要运行如下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install gulp-ruby-sass gulp-autoprefixer gulp-minify-css gulp-jshint gulp-concat gulp-uglify gulp-imagemin gulp-notify gulp-rename gulp-livereload gulp-cache del --save-dev</span><br></pre></td></tr></table></figure>


<p>上面是一些常用的插件，如果想要找更多的插件<span class="exturl" data-url="aHR0cDovL2d1bHBqcy5jb20vcGx1Z2lucy8=">点击这里<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="加载插件"><a href="#加载插件" class="headerlink" title="加载插件"></a>加载插件</h2><p>接着我们要创建一个gulpfile.js在根目录下，然后在里面加载插件：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">&#x27;gulp&#x27;</span>),</span><br><span class="line">    sass = <span class="built_in">require</span>(<span class="string">&#x27;gulp-ruby-sass&#x27;</span>),</span><br><span class="line">    autoprefixer = <span class="built_in">require</span>(<span class="string">&#x27;gulp-autoprefixer&#x27;</span>),</span><br><span class="line">    minifycss = <span class="built_in">require</span>(<span class="string">&#x27;gulp-minify-css&#x27;</span>),</span><br><span class="line">    jshint = <span class="built_in">require</span>(<span class="string">&#x27;gulp-jshint&#x27;</span>),</span><br><span class="line">    uglify = <span class="built_in">require</span>(<span class="string">&#x27;gulp-uglify&#x27;</span>),</span><br><span class="line">    imagemin = <span class="built_in">require</span>(<span class="string">&#x27;gulp-imagemin&#x27;</span>),</span><br><span class="line">    rename = <span class="built_in">require</span>(<span class="string">&#x27;gulp-rename&#x27;</span>),</span><br><span class="line">    concat = <span class="built_in">require</span>(<span class="string">&#x27;gulp-concat&#x27;</span>),</span><br><span class="line">    notify = <span class="built_in">require</span>(<span class="string">&#x27;gulp-notify&#x27;</span>),</span><br><span class="line">    cache = <span class="built_in">require</span>(<span class="string">&#x27;gulp-cache&#x27;</span>),</span><br><span class="line">    livereload = <span class="built_in">require</span>(<span class="string">&#x27;gulp-livereload&#x27;</span>),</span><br><span class="line">    del = <span class="built_in">require</span>(<span class="string">&#x27;del&#x27;</span>);</span><br></pre></td></tr></table></figure>

<p>Gulp的插件和Grunt有些许不一样，Grunt插件是为了更好的完成一项任务。就像Grunt的 <code>imagemin</code> 插件就利用了缓存来避免重复压缩，而Gulp要利用 <code>gulp-cache</code> 来完成，当然啦，不仅限定于缓存图片。</p>
<h2 id="建立任务"><a href="#建立任务" class="headerlink" title="建立任务"></a>建立任务</h2><h3 id="编译sass、自动添加css前缀和压缩"><a href="#编译sass、自动添加css前缀和压缩" class="headerlink" title="编译sass、自动添加css前缀和压缩"></a>编译sass、自动添加css前缀和压缩</h3><p>首先我们编译sass，添加前缀，保存到我们指定的目录下面，还没结束，我们还要压缩，给文件添加.min后缀再输出压缩文件到指定目录，最后提醒任务完成了：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;styles&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> gulp.<span class="title function_">src</span>(<span class="string">&#x27;src/styles/main.scss&#x27;</span>)</span><br><span class="line">    .<span class="title function_">pipe</span>(<span class="title function_">sass</span>(&#123; <span class="attr">style</span>: <span class="string">&#x27;expanded&#x27;</span> &#125;))</span><br><span class="line">    .<span class="title function_">pipe</span>(<span class="title function_">autoprefixer</span>(<span class="string">&#x27;last 2 version&#x27;</span>, <span class="string">&#x27;safari 5&#x27;</span>, <span class="string">&#x27;ie 8&#x27;</span>, <span class="string">&#x27;ie 9&#x27;</span>, <span class="string">&#x27;opera 12.1&#x27;</span>, <span class="string">&#x27;ios 6&#x27;</span>, <span class="string">&#x27;android 4&#x27;</span>))</span><br><span class="line">    .<span class="title function_">pipe</span>(gulp.<span class="title function_">dest</span>(<span class="string">&#x27;dist/assets/css&#x27;</span>))</span><br><span class="line">    .<span class="title function_">pipe</span>(<span class="title function_">rename</span>(&#123;<span class="attr">suffix</span>: <span class="string">&#x27;.min&#x27;</span>&#125;))</span><br><span class="line">    .<span class="title function_">pipe</span>(<span class="title function_">minifycss</span>())</span><br><span class="line">    .<span class="title function_">pipe</span>(gulp.<span class="title function_">dest</span>(<span class="string">&#x27;dist/assets/css&#x27;</span>))</span><br><span class="line">    .<span class="title function_">pipe</span>(<span class="title function_">notify</span>(&#123; <span class="attr">message</span>: <span class="string">&#x27;Styles task complete&#x27;</span> &#125;));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>让我解释一下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;styles&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;...&#125;);</span><br></pre></td></tr></table></figure>

<p><code>gulp.task</code> 这个API用来创建任务，在命令行下可以输入 <code>$ gulp styles</code> 来执行上面的任务。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">return</span> gulp.<span class="title function_">src</span>(<span class="string">&#x27;src/styles/main.scss&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p><code>gulp.src</code> 这个API设置需要处理的文件的路径，可以是多个文件以数组的形式 <code>[main.scss, vender.scss]</code> ，也可以是正则表达式 <code>/**/*.scss</code> 。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">.<span class="title function_">pipe</span>(<span class="title function_">sass</span>(&#123; <span class="attr">style</span>: <span class="string">&#x27;expanded&#x27;</span> &#125;))</span><br></pre></td></tr></table></figure>

<p>我们使用 <code>.pipe()</code> 这个API将需要处理的文件导向sass插件，那些插件的用法可以在github上找到，为了方便大家查找我已经在上面列出来了。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">.<span class="title function_">pipe</span>(gulp.<span class="title function_">dest</span>(<span class="string">&#x27;dist/assets/css&#x27;</span>));</span><br></pre></td></tr></table></figure>

<p><code>gulp.dest()</code> API设置生成文件的路径，一个任务可以有多个生成路径，一个可以输出未压缩的版本，另一个可以输出压缩后的版本。</p>
<p>为了更好的了解Gulp API，强烈建议看一下<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2d1bHBqcy9ndWxwL2Jsb2IvbWFzdGVyL2RvY3MvQVBJLm1k">Gulp API文档<i class="fa fa-external-link-alt"></i></span>，其实Gulp API就这么几个，没什么好可怕的。</p>
<h3 id="js代码校验、合并和压缩"><a href="#js代码校验、合并和压缩" class="headerlink" title="js代码校验、合并和压缩"></a>js代码校验、合并和压缩</h3><p>希望大家已经知道如何去创建一个任务了，接下来我们完成scripts的校验、合并和压缩的任务吧：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;scripts&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> gulp.<span class="title function_">src</span>(<span class="string">&#x27;src/scripts/**/*.js&#x27;</span>)</span><br><span class="line">    .<span class="title function_">pipe</span>(<span class="title function_">jshint</span>(<span class="string">&#x27;.jshintrc&#x27;</span>))</span><br><span class="line">    .<span class="title function_">pipe</span>(jshint.<span class="title function_">reporter</span>(<span class="string">&#x27;default&#x27;</span>))</span><br><span class="line">    .<span class="title function_">pipe</span>(<span class="title function_">concat</span>(<span class="string">&#x27;main.js&#x27;</span>))</span><br><span class="line">    .<span class="title function_">pipe</span>(gulp.<span class="title function_">dest</span>(<span class="string">&#x27;dist/assets/js&#x27;</span>))</span><br><span class="line">    .<span class="title function_">pipe</span>(<span class="title function_">rename</span>(&#123;<span class="attr">suffix</span>: <span class="string">&#x27;.min&#x27;</span>&#125;))</span><br><span class="line">    .<span class="title function_">pipe</span>(<span class="title function_">uglify</span>())</span><br><span class="line">    .<span class="title function_">pipe</span>(gulp.<span class="title function_">dest</span>(<span class="string">&#x27;dist/assets/js&#x27;</span>))</span><br><span class="line">    .<span class="title function_">pipe</span>(<span class="title function_">notify</span>(&#123; <span class="attr">message</span>: <span class="string">&#x27;Scripts task complete&#x27;</span> &#125;));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>需要提醒的是我们要设置JSHint的reporter方式，上面使用的是default默认的，了解更多<span class="exturl" data-url="aHR0cDovL2pzaGludC5jb20vZG9jcy9yZXBvcnRlcnMv">点击这里<i class="fa fa-external-link-alt"></i></span>。</p>
<h3 id="压缩图片"><a href="#压缩图片" class="headerlink" title="压缩图片"></a>压缩图片</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;images&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> gulp.<span class="title function_">src</span>(<span class="string">&#x27;src/images/**/*&#x27;</span>)</span><br><span class="line">    .<span class="title function_">pipe</span>(<span class="title function_">imagemin</span>(&#123; <span class="attr">optimizationLevel</span>: <span class="number">3</span>, <span class="attr">progressive</span>: <span class="literal">true</span>, <span class="attr">interlaced</span>: <span class="literal">true</span> &#125;))</span><br><span class="line">    .<span class="title function_">pipe</span>(gulp.<span class="title function_">dest</span>(<span class="string">&#x27;dist/assets/img&#x27;</span>))</span><br><span class="line">    .<span class="title function_">pipe</span>(<span class="title function_">notify</span>(&#123; <span class="attr">message</span>: <span class="string">&#x27;Images task complete&#x27;</span> &#125;));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>这个任务使用 <code>imagemin</code> 插件把所有在 <code>src/images/</code> 目录以及其子目录下的所有图片（文件）进行压缩，我们可以进一步优化，利用缓存保存已经压缩过的图片，使用之前装过的gulp-cache插件，不过要修改一下上面的代码：</p>
<p>将这行代码:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">.<span class="title function_">pipe</span>(<span class="title function_">imagemin</span>(&#123; <span class="attr">optimizationLevel</span>: <span class="number">3</span>, <span class="attr">progressive</span>: <span class="literal">true</span>, <span class="attr">interlaced</span>: <span class="literal">true</span> &#125;))</span><br></pre></td></tr></table></figure>

<p>修改成:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">.<span class="title function_">pipe</span>(<span class="title function_">cache</span>(<span class="title function_">imagemin</span>(&#123; <span class="attr">optimizationLevel</span>: <span class="number">5</span>, <span class="attr">progressive</span>: <span class="literal">true</span>, <span class="attr">interlaced</span>: <span class="literal">true</span> &#125;)))</span><br></pre></td></tr></table></figure>

<p>现在，只有新建或者修改过的图片才会被压缩了。</p>
<h3 id="清除文件"><a href="#清除文件" class="headerlink" title="清除文件"></a>清除文件</h3><p>在任务执行前，最好先清除之前生成的文件：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;clean&#x27;</span>, <span class="keyword">function</span>(<span class="params">cb</span>) &#123;</span><br><span class="line">    <span class="title function_">del</span>([<span class="string">&#x27;dist/assets/css&#x27;</span>, <span class="string">&#x27;dist/assets/js&#x27;</span>, <span class="string">&#x27;dist/assets/img&#x27;</span>], cb)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>在这里没有必要使用Gulp插件了，可以使用NPM提供的插件。我们用一个回调函数（ <code>cb</code> ）确保在退出前完成任务。</p>
<h3 id="设置默认任务（default）"><a href="#设置默认任务（default）" class="headerlink" title="设置默认任务（default）"></a>设置默认任务（default）</h3><p>我们在命令行下输入 <code>$ gulp</code> 执行的就是默认任务，现在我们为默认任务指定执行上面写好的三个任务：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;default&#x27;</span>, [<span class="string">&#x27;clean&#x27;</span>], <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">	gulp.<span class="title function_">start</span>(<span class="string">&#x27;styles&#x27;</span>, <span class="string">&#x27;scripts&#x27;</span>, <span class="string">&#x27;images&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>在这个例子里面，clean任务执行完成了才会去运行其他的任务，在 <code>gulp.start()</code> 里的任务执行的顺序是不确定的，所以将要在它们之前执行的任务写在数组里面。</p>
<h3 id="监听文件"><a href="#监听文件" class="headerlink" title="监听文件"></a>监听文件</h3><p>为了监听文件的是否修改以便执行相应的任务，我们需要创建一个新的任务，然后利用 <code>gulp.watchAPI</code> 实现：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;watch&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// Watch .scss files</span></span><br><span class="line">  gulp.<span class="title function_">watch</span>(<span class="string">&#x27;src/styles/**/*.scss&#x27;</span>, [<span class="string">&#x27;styles&#x27;</span>]);</span><br><span class="line">  <span class="comment">// Watch .js files</span></span><br><span class="line">  gulp.<span class="title function_">watch</span>(<span class="string">&#x27;src/scripts/**/*.js&#x27;</span>, [<span class="string">&#x27;scripts&#x27;</span>]);</span><br><span class="line">  <span class="comment">// Watch image files</span></span><br><span class="line">  gulp.<span class="title function_">watch</span>(<span class="string">&#x27;src/images/**/*&#x27;</span>, [<span class="string">&#x27;images&#x27;</span>]);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>我们将不同类型的文件分开处理，执行对应的数组里的任务。现在我们可以在命令行输入 <code>$ gulp watch</code> 执行监听任务，当 <code>.sass</code> 、 <code>.js</code> 和图片修改时将执行对应的任务。</p>
<h3 id="自动刷新页面"><a href="#自动刷新页面" class="headerlink" title="自动刷新页面"></a>自动刷新页面</h3><p>Gulp也可以实现当文件修改时自动刷新页面，我们要修改 <code>watch</code> 任务，配置LiveReload：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;watch&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// Create LiveReload server</span></span><br><span class="line">  livereload.<span class="title function_">listen</span>();</span><br><span class="line">  <span class="comment">// Watch any files in dist/, reload on change</span></span><br><span class="line">  gulp.<span class="title function_">watch</span>([<span class="string">&#x27;dist/**&#x27;</span>]).<span class="title function_">on</span>(<span class="string">&#x27;change&#x27;</span>, livereload.<span class="property">changed</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>要使这个能够工作，还需要在浏览器上安装LiveReload插件，除此之外<span class="exturl" data-url="aHR0cDovL2ZlZWRiYWNrLmxpdmVyZWxvYWQuY29tL2tub3dsZWRnZWJhc2UvYXJ0aWNsZXMvODYxODAtaG93LWRvLWktYWRkLXRoZS1zY3JpcHQtdGFnLW1hbnVhbGx5LQ==">还能这样做<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="所有任务放一起"><a href="#所有任务放一起" class="headerlink" title="所有任务放一起"></a>所有任务放一起</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*!</span></span><br><span class="line"><span class="comment"> * gulp</span></span><br><span class="line"><span class="comment"> * $ npm install gulp-ruby-sass gulp-autoprefixer gulp-minify-css gulp-jshint gulp-concat gulp-uglify gulp-imagemin gulp-notify gulp-rename gulp-livereload gulp-cache del --save-dev</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// Load plugins</span></span><br><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">&#x27;gulp&#x27;</span>),</span><br><span class="line">    sass = <span class="built_in">require</span>(<span class="string">&#x27;gulp-ruby-sass&#x27;</span>),</span><br><span class="line">    autoprefixer = <span class="built_in">require</span>(<span class="string">&#x27;gulp-autoprefixer&#x27;</span>),</span><br><span class="line">    minifycss = <span class="built_in">require</span>(<span class="string">&#x27;gulp-minify-css&#x27;</span>),</span><br><span class="line">    jshint = <span class="built_in">require</span>(<span class="string">&#x27;gulp-jshint&#x27;</span>),</span><br><span class="line">    uglify = <span class="built_in">require</span>(<span class="string">&#x27;gulp-uglify&#x27;</span>),</span><br><span class="line">    imagemin = <span class="built_in">require</span>(<span class="string">&#x27;gulp-imagemin&#x27;</span>),</span><br><span class="line">    rename = <span class="built_in">require</span>(<span class="string">&#x27;gulp-rename&#x27;</span>),</span><br><span class="line">    concat = <span class="built_in">require</span>(<span class="string">&#x27;gulp-concat&#x27;</span>),</span><br><span class="line">    notify = <span class="built_in">require</span>(<span class="string">&#x27;gulp-notify&#x27;</span>),</span><br><span class="line">    cache = <span class="built_in">require</span>(<span class="string">&#x27;gulp-cache&#x27;</span>),</span><br><span class="line">    livereload = <span class="built_in">require</span>(<span class="string">&#x27;gulp-livereload&#x27;</span>),</span><br><span class="line">    del = <span class="built_in">require</span>(<span class="string">&#x27;del&#x27;</span>);</span><br><span class="line"><span class="comment">// Styles</span></span><br><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;styles&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> gulp.<span class="title function_">src</span>(<span class="string">&#x27;src/styles/main.scss&#x27;</span>)</span><br><span class="line">    .<span class="title function_">pipe</span>(<span class="title function_">sass</span>(&#123; <span class="attr">style</span>: <span class="string">&#x27;expanded&#x27;</span>, &#125;))</span><br><span class="line">    .<span class="title function_">pipe</span>(<span class="title function_">autoprefixer</span>(<span class="string">&#x27;last 2 version&#x27;</span>, <span class="string">&#x27;safari 5&#x27;</span>, <span class="string">&#x27;ie 8&#x27;</span>, <span class="string">&#x27;ie 9&#x27;</span>, <span class="string">&#x27;opera 12.1&#x27;</span>, <span class="string">&#x27;ios 6&#x27;</span>, <span class="string">&#x27;android 4&#x27;</span>))</span><br><span class="line">    .<span class="title function_">pipe</span>(gulp.<span class="title function_">dest</span>(<span class="string">&#x27;dist/styles&#x27;</span>))</span><br><span class="line">    .<span class="title function_">pipe</span>(<span class="title function_">rename</span>(&#123; <span class="attr">suffix</span>: <span class="string">&#x27;.min&#x27;</span> &#125;))</span><br><span class="line">    .<span class="title function_">pipe</span>(<span class="title function_">minifycss</span>())</span><br><span class="line">    .<span class="title function_">pipe</span>(gulp.<span class="title function_">dest</span>(<span class="string">&#x27;dist/styles&#x27;</span>))</span><br><span class="line">    .<span class="title function_">pipe</span>(<span class="title function_">notify</span>(&#123; <span class="attr">message</span>: <span class="string">&#x27;Styles task complete&#x27;</span> &#125;));</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// Scripts</span></span><br><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;scripts&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> gulp.<span class="title function_">src</span>(<span class="string">&#x27;src/scripts/**/*.js&#x27;</span>)</span><br><span class="line">    .<span class="title function_">pipe</span>(<span class="title function_">jshint</span>(<span class="string">&#x27;.jshintrc&#x27;</span>))</span><br><span class="line">    .<span class="title function_">pipe</span>(jshint.<span class="title function_">reporter</span>(<span class="string">&#x27;default&#x27;</span>))</span><br><span class="line">    .<span class="title function_">pipe</span>(<span class="title function_">concat</span>(<span class="string">&#x27;main.js&#x27;</span>))</span><br><span class="line">    .<span class="title function_">pipe</span>(gulp.<span class="title function_">dest</span>(<span class="string">&#x27;dist/scripts&#x27;</span>))</span><br><span class="line">    .<span class="title function_">pipe</span>(<span class="title function_">rename</span>(&#123; <span class="attr">suffix</span>: <span class="string">&#x27;.min&#x27;</span> &#125;))</span><br><span class="line">    .<span class="title function_">pipe</span>(<span class="title function_">uglify</span>())</span><br><span class="line">    .<span class="title function_">pipe</span>(gulp.<span class="title function_">dest</span>(<span class="string">&#x27;dist/scripts&#x27;</span>))</span><br><span class="line">    .<span class="title function_">pipe</span>(<span class="title function_">notify</span>(&#123; <span class="attr">message</span>: <span class="string">&#x27;Scripts task complete&#x27;</span> &#125;));</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// Images</span></span><br><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;images&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> gulp.<span class="title function_">src</span>(<span class="string">&#x27;src/images/**/*&#x27;</span>)</span><br><span class="line">    .<span class="title function_">pipe</span>(<span class="title function_">cache</span>(<span class="title function_">imagemin</span>(&#123; <span class="attr">optimizationLevel</span>: <span class="number">3</span>, <span class="attr">progressive</span>: <span class="literal">true</span>, <span class="attr">interlaced</span>: <span class="literal">true</span> &#125;)))</span><br><span class="line">    .<span class="title function_">pipe</span>(gulp.<span class="title function_">dest</span>(<span class="string">&#x27;dist/images&#x27;</span>))</span><br><span class="line">    .<span class="title function_">pipe</span>(<span class="title function_">notify</span>(&#123; <span class="attr">message</span>: <span class="string">&#x27;Images task complete&#x27;</span> &#125;));</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// Clean</span></span><br><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;clean&#x27;</span>, <span class="keyword">function</span>(<span class="params">cb</span>) &#123;</span><br><span class="line">    <span class="title function_">del</span>([<span class="string">&#x27;dist/assets/css&#x27;</span>, <span class="string">&#x27;dist/assets/js&#x27;</span>, <span class="string">&#x27;dist/assets/img&#x27;</span>], cb)</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// Default task</span></span><br><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;default&#x27;</span>, [<span class="string">&#x27;clean&#x27;</span>], <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    gulp.<span class="title function_">start</span>(<span class="string">&#x27;styles&#x27;</span>, <span class="string">&#x27;scripts&#x27;</span>, <span class="string">&#x27;images&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// Watch</span></span><br><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;watch&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// Watch .scss files</span></span><br><span class="line">  gulp.<span class="title function_">watch</span>(<span class="string">&#x27;src/styles/**/*.scss&#x27;</span>, [<span class="string">&#x27;styles&#x27;</span>]);</span><br><span class="line">  <span class="comment">// Watch .js files</span></span><br><span class="line">  gulp.<span class="title function_">watch</span>(<span class="string">&#x27;src/scripts/**/*.js&#x27;</span>, [<span class="string">&#x27;scripts&#x27;</span>]);</span><br><span class="line">  <span class="comment">// Watch image files</span></span><br><span class="line">  gulp.<span class="title function_">watch</span>(<span class="string">&#x27;src/images/**/*&#x27;</span>, [<span class="string">&#x27;images&#x27;</span>]);</span><br><span class="line">  <span class="comment">// Create LiveReload server</span></span><br><span class="line">  livereload.<span class="title function_">listen</span>();</span><br><span class="line">  <span class="comment">// Watch any files in dist/, reload on change</span></span><br><span class="line">  gulp.<span class="title function_">watch</span>([<span class="string">&#x27;dist/**&#x27;</span>]).<span class="title function_">on</span>(<span class="string">&#x27;change&#x27;</span>, livereload.<span class="property">changed</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>傲梅 DiskTool</title>
    <url>/posts/aomei-disktool.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-08/aomei-disktool/intro.jpg" alt="傲梅 DiskTool -  免费的中文版硬盘无损分区助手"></p>
<p>很多人都遇到过硬盘分区的烦恼问题：新买的笔记本硬盘只有一个分区，文件归类管理很不方便；C盘空间不足&#x2F;太小；以前分区不合理，想要合并&#x2F;分割或者修改容量大小，而又担心重新分区后硬盘数据会丢失。</p>
<span id="more"></span>

<p>其实如今的无损分区软件已经能很有效地在保留原来硬盘数据的情况下重新分区了！不过它们大部分都是英文版软件，部分还要付费。而今天推荐的 DiskTool 傲梅分区助手 则是一款完全免费、全中文的国产无损分区工具 ！它非常易于上手，可帮你轻松无损调整分区大小、合并&#x2F;切割分区、转换分区格式等……</p>
<h2 id="无损分区工具软件"><a href="#无损分区工具软件" class="headerlink" title="无损分区工具软件"></a>无损分区工具软件</h2><p>分区助手是一款免费、专业级的无损分区工具，提供简单、易用的磁盘分区管理操作。作为传统分区魔法师的替代者，在操作系统兼容性方面，傲梅分区软件打破了以前的分区软件兼容差的缺点，它完美兼容全部操作系统。</p>
<p>不仅如此，分区助手从调整分区大小等方面出发，能无损数据地实现扩大分区，缩小分区，合并分区，拆分分区，快速分区，克隆磁盘等操作。此外，它也能迁移系统到固态硬盘，是一个不可多得分区工具。</p>
<p><img src="/../imgs/2024-01-08/aomei-disktool/main.jpg" alt="分区助手分区助手截图"></p>
<p>分区助手可以完美支持 Win PE、2000、XP、Vista、Win7、Win8&#x2F;8.1、Windows 10 等系统。而且不管是普通用户还是服务器操作系统用户 (Windows Server 2003 &#x2F; 2008 等)，分区助手都能提供全功能、稳定可靠的硬盘分区功能。</p>
<p><img src="/../imgs/2024-01-08/aomei-disktool/partition.jpg" alt="无损分区无损调整分区大小"></p>
<h2 id="分区助手的功能"><a href="#分区助手的功能" class="headerlink" title="分区助手的功能"></a>分区助手的功能</h2><p><img src="/../imgs/2024-01-08/aomei-disktool/function.jpg" alt="傲梅 DiskTool"></p>
<p>使用分区助手，你除了可以实现如增加删除分区、格式化、磁盘格式转换(如FAT32无损转成NTFS)、改变盘符的基本操作之外，还能实现很多高级操作，譬如4K对齐、MBR与GPT磁盘互转等，下面是功能列表：</p>
<ul>
<li>调整分区大小：将分区的大小扩大或将分区缩小</li>
<li>快速分区：为装机童鞋提供最方便和快速的“快速分区”操作</li>
<li>合并与拆分分区：合并两个或多个分区到一个分区，拆分一个大分区到多个小分区</li>
<li>分配空闲空间：重新分配磁盘上的未分配空间给己存在的分区</li>
<li>创建，删除与格式化：基本分区操作，不管什么情况下都可以直接的创建新分区</li>
<li>复制磁盘与分区&#x2F;磁盘克隆：克隆硬盘所有数据到另一块硬盘上</li>
<li>擦除磁盘与分区：擦除磁盘或分区以防止删除的隐私数据被恢复</li>
<li>分区按扇区对齐：将分区按4KB，8KB等扇区对齐，优化数据存取速度</li>
<li>主逻辑分区互转：主分区与逻辑分区之间的相互转换</li>
<li>分区格式转换：如将 FAT32 无损转换到 NTFS等</li>
<li>MBR与GPT磁盘互转：无损数据互转MBR磁盘和GPT磁盘</li>
<li>命令行无损分区：您可以使用或集成分区助手的命令行让无损分区更方便</li>
<li>迁移系统到SSD：将系统盘迁移到固态硬盘，以提高系统的启动与运行速度</li>
<li>分区恢复：将硬盘上的误删除或无故丢失的分区恢复回来</li>
<li>隐藏或取消隐藏分区：将不希望别人随意看到的分区隐藏掉</li>
</ul>
<h2 id="防止误操作—虚拟操作"><a href="#防止误操作—虚拟操作" class="headerlink" title="防止误操作—虚拟操作"></a>防止误操作—虚拟操作</h2><p>和大多数无损分区软件一样，DiskTool 分区助手 同样是使用了“虚拟操作”的功能，就是你在更改磁盘分区的时候，它能“预览”显示分区后的改变，不过这时只是“虚拟”的，你可以随时取消，并不会真正影响到你的硬盘。只有在你完全确定好之后它才会为你真实地对硬盘进行分区，最大限度防止了误操作的发生。</p>
<p><img src="/../imgs/2024-01-08/aomei-disktool/virtual.jpg" alt="分区助手无损切割分区"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>分区助手可以支持几乎全系列的 Windows 系统，支持 32 位以及 64位，同时也支持FAT、FAT32 和 NTFS 文件系统，支持磁盘与分区的容量从100MB到4TB，在一个系统中支持磁盘的数量多达64块，并支持所有硬件 RAID 和 IDE，SATA，SCSI，USB，FireWire 等接口类型的硬盘，支持EFI&#x2F;UEFI启动方式的电脑，兼容性相当好，基本上能满足所有 Win 用户的需求了。</p>
<p><img src="/../imgs/2024-01-08/aomei-disktool/save.jpg" alt="分区对齐SSD 硬盘分区对齐"></p>
<p>据了解，分区助手的英文版 “Aomei Partition Assistant” 在海外的售价约 49 美元，而开发团队为国内用户推出的中文版则完全免费。这一点还是很厚道的！总之，如果你新买了电脑，或者已有数据的硬盘需要重新分区，而又觉得国外英文版的分区软件太复杂，那么就试试这款国产的分区助手吧！</p>
<p>最后，值得一说的是，尽管软件宣传是可以进行无损分区，但凡事都有意外的可能 (譬如分区过程中断电)，还是会有风险的。因此强烈建议大家在执行任何操作前，务必先想办法将重要的文件备份好！！否则万一数据真丢了谁都帮不了你哦。</p>
<h2 id="相关文件下载地址："><a href="#相关文件下载地址：" class="headerlink" title="相关文件下载地址："></a>相关文件下载地址：</h2><blockquote>
<p><span class="exturl" data-url="aHR0cDovL3d3dy5kaXNrdG9vbC5jbi8=">官方网站<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cDovL3Bhbi5iYWlkdS5jb20vcy8xYzJqck1WbQ==">下载分区助手<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>rmvb视频合并、分割、转换工具</title>
    <url>/posts/easy-realmedia-editor.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-08/easy-realmedia-editor/intro.jpg" alt="Easy RealMedia Editor - rmvb视频合并、分割、转换工具"></p>
<p>今天给大家推荐一块 RMVB 格式视频剪辑软件 <strong>Easy RealMedia Editor</strong> ，它是从 Real 公司官方出品的新一代 Real 格式音频、视频文件制作软件 RealProducer Plus中提取的 Real 媒体编辑器；她可以切割、合并 Real 媒体文件或修改剪辑信息，非常方便，其压缩速度不是最快的，但压缩质量绝对是最好的，而且即使是菜鸟也非常容易上手。</p>
<span id="more"></span>

<h2 id="合并影片"><a href="#合并影片" class="headerlink" title="合并影片"></a>合并影片</h2><p><strong>注意：</strong>各个合并文件的压缩码率一定要完全一致，否则将无法合并成功。</p>
<p>点击<strong>添加</strong>,然后选中要合并影片的第一部分,打开:</p>
<p><img src="/../imgs/2024-01-08/easy-realmedia-editor/merge-video.jpg" alt="Easy RealMedia Editor"></p>
<p>然后选中的第1段片子会出现在列表中,接着选择<strong>参数设置</strong>会出现一个新窗口</p>
<p><img src="/../imgs/2024-01-08/easy-realmedia-editor/add.jpg" alt="Easy RealMedia Editor"></p>
<p>在新窗口中点击<strong>多个文件合并</strong>，然后选择左侧<strong>追加合并文件</strong>组中的<strong>添加</strong>,按次序加入要合并的各个文件</p>
<p><img src="/../imgs/2024-01-08/easy-realmedia-editor/select.jpg" alt="Easy RealMedia Editor"></p>
<p>默认合并后的文件名为第一段片子的文件名前面加ed,你也可以修改,默认存放路径为存放原第一段片子的文件夹,点<strong>浏览</strong>可更改存放位置.</p>
<p><strong>添加完毕之后:</strong> <strong>追加合并文件</strong>组部分显示的是你添加的要合并的各个文件，你还可以在上面的<strong>编辑信息</strong>部分修改合并后的剪辑信息；最后点确定,回到主界面</p>
<p><img src="/../imgs/2024-01-08/easy-realmedia-editor/param.jpg" alt="Easy RealMedia Editor"></p>
<p>点 <strong>开始编辑</strong> ,一般几分钟后,一部完整的片子就合并好了.</p>
<h2 id="分割影片"><a href="#分割影片" class="headerlink" title="分割影片"></a>分割影片</h2><p>有些片子结尾的演职员表时间很长,从精简片子的体积的角度考虑,我们可以用 <strong>Easy Realmedia Editor</strong> 进行适当的剪切编辑，进入<strong>Easy Realmedia Editor</strong> 主界面,添加好要进行编辑的文件后,点参数设置选择<strong>编辑单个文件</strong></p>
<p><img src="/../imgs/2024-01-08/easy-realmedia-editor/segment.jpg" alt="Easy RealMedia Editor"></p>
<p>输入你要开始或结束的时间数值,设定好保存路径,点确定,回到主界面；然后点 <strong>开始编辑</strong> 就OK了</p>
<h2 id="中文版设置"><a href="#中文版设置" class="headerlink" title="中文版设置"></a>中文版设置</h2><p><strong>Easy RealMedia Editor</strong> 安装好之后，默认为英文界面，你需要点击<strong>Global</strong> – <strong>select language</strong> – <strong>简体中文</strong>；来设置成中文界面</p>
<p><img src="/../imgs/2024-01-08/easy-realmedia-editor/chinese.jpg" alt="Easy RealMedia Editor"></p>
<h2 id="Easy-RealMedia-Editor"><a href="#Easy-RealMedia-Editor" class="headerlink" title="Easy RealMedia Editor"></a>Easy RealMedia Editor</h2><blockquote>
<p><span class="exturl" data-url="aHR0cDovL3Bhbi5iYWlkdS5jb20vcy8xbzhpcmhCTw==">Easy RealMedia Editor 中文版下载<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>视频</tag>
      </tags>
  </entry>
  <entry>
    <title>小巧的批量压缩工具</title>
    <url>/posts/mini-zip-jpg.html</url>
    <content><![CDATA[<p><img src="/../imgs/2024-01-08/mini-zip-jpg/intro.jpg" alt="JPGmini、PNGmini、WEBmini - 小巧的批量压缩工具"></p>
<p>今天给大家推荐的除了2款小巧精致实用的图片、照片体积批量压缩优化工具——<strong>JPGmini</strong>、<strong>PNGmini</strong> 外，还有一款 Javascript、CSS 文件批量压缩工具——<strong>WEBmini</strong>。它们均出自同一作者之手，不仅免费小巧，而且界面简约精致！可以为站长、程序员、Web开发者们提供不小的便利，值得大家收藏在工具库里……</p>
<span id="more"></span>

<h2 id="压缩图片-JS-CSS的小工具"><a href="#压缩图片-JS-CSS的小工具" class="headerlink" title="压缩图片&#x2F;JS&#x2F;CSS的小工具"></a>压缩图片&#x2F;JS&#x2F;CSS的小工具</h2><p>JPGmini、PNGmini、WEBmini 都是 voralent 出品的文件体积压缩优化软件，正如其名，前两者分别用于优化压缩JPG格式图片以及PNG格式图片的积的，它们能在不改变图片分辨率且尽量不损耗清晰度的前提下让图片文件体积变得更小，以便在网络中传输得以加快。WEBmini 则可以压缩 js、css 等网页常见的文件格式，使得网站加载更加高效迅速。</p>
<h2 id="jpg图片压缩"><a href="#jpg图片压缩" class="headerlink" title="jpg图片压缩"></a>jpg图片压缩</h2><p><img src="/../imgs/2024-01-08/mini-zip-jpg/jpgzip.jpg" alt="JPGmini - 批量jpg图片体积压缩优化工具"></p>
<h2 id="png-图片压缩"><a href="#png-图片压缩" class="headerlink" title="png 图片压缩"></a>png 图片压缩</h2><p><img src="/../imgs/2024-01-08/mini-zip-jpg/pngzip.jpg" alt="PNGmini - 批量png图片体积压缩优化工具"></p>
<h2 id="网页-js、css-文件压缩"><a href="#网页-js、css-文件压缩" class="headerlink" title="网页 js、css 文件压缩"></a>网页 js、css 文件压缩</h2><p><img src="/../imgs/2024-01-08/mini-zip-jpg/jszip.jpg" alt="WEBmini - 批量JS/CSS文件体积压缩优化工具"></p>
<p>从截图中可以看出，JPGmini、PNGmini、WEBmini 的软件界面都很相似，虽然都是英文界面，但使用却异常的简单！您只需将需要压缩的文件拖放到软件界面的列表上，然后点击 “Optimize” 即可进行批量的优化压缩。软件会在文件列表中显示出原文件大小(Current Size)、压缩后大小(Optimized Size) 以及缩减体积所占的比例 (Status)。</p>
<p>由于这三款小工具都比较简单实用，不仅支持批量操作的，而且界面精美体积小巧，如果你偶尔也会有图片体积压缩或web样式文件、JS文件的压缩需求的话，可以考虑收藏下来备用。</p>
<h2 id="相关文件下载地址："><a href="#相关文件下载地址：" class="headerlink" title="相关文件下载地址："></a>相关文件下载地址：</h2><blockquote>
<p><span class="exturl" data-url="aHR0cDovL3d3dy52b3JhbGVudC5jb20v">官方网站<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cDovL3Bhbi5iYWlkdS5jb20vcy8xc2tZSEZsag==">软件打包下载<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
</search>
